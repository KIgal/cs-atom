<!--Generated by a crappy script that Craig Andera wrote : https://github.com/candera/cs-atom--><feed xmlns="http://www.w3.org/2005/Atom" xmlns:thr="http://purl.org/syndication/thread/1.0"><id>feed-id</id><updated>2011-12-25T08:45:01.584-05:00</updated><title type="text">Blog Title Here</title><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><entry><id>4733</id><published>2005-01-04T10:28:00.0-05:00</published><updated>2005-01-04T10:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Hello and welcome!</title><content type="html">&lt;p&gt;&lt;font face="Arial"&gt;Hello!&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial"&gt;I'm Jim Johnson.  I've just finished my second year at Microsoft, where I've been deeply involved in the transactions technologies.  &lt;/font&gt;&lt;font face="Arial"&gt;It's been a pretty exciting ride so far, and this seemed like a good time to start writing about the experience.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font face="Arial"&gt;I expect to be writing a bit about myself, some about what its like working here, the local area, and (of course) about what I've been working on.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>2</thr:total></entry><entry><id>5951</id><published>2005-02-17T06:46:00.0-05:00</published><updated>2005-02-17T06:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Hello and welcome!</title><content type="html">Jim,
&lt;br /&gt;  great to see you have started a blog! I'm so much looking forward to your thoughts and do look forward to visiting you in Seattle again this year.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="4733"></thr:in-reply-to></entry><entry><id>6825</id><published>2005-03-20T21:38:00.0-05:00</published><updated>2005-03-20T21:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Hello and welcome!</title><content type="html">John,
&lt;br /&gt;
&lt;br /&gt;Thanks for your kind words!  If you do get into the Seattle area, do let me know.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="4733"></thr:in-reply-to></entry><entry><id>4872</id><published>2005-01-10T12:20:00.0-05:00</published><updated>2005-01-10T12:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">A bit about me</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;It seems like there's always an obligatory entry about the person doing the blogging.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I guess we're all supposed to be 'windswept and interesting'.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Professionally, I've been working in the software industry for 25 years now.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I have spent probably 20 years in commercial product development, most of that in base system software.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Over these 25 years I've worked in a number of areas: real time process control, file systems, security, system management tools, and data access support.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;My recurring interest, though, has been transaction services.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;My first involvement with transactions occurred in the late 80's, when a few of us built transaction management services into the VMS kernel.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've always liked the deceptive simplicity of transaction management, and the implications about what it can do for applications that want to be robust.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, things happen.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I moved on to other projects, but found that because of my interests I kept returning to this topic.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Two years ago I moved to Microsoft, to work on transaction services.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'd always admired what MSDTC, and MTS, did for bringing these technologies into the mainstream.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I couldn't pass up the chance to work with the people who helped to bring those to market.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I was also excited by the prospect of helping to move these technologies ahead.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It still excited to work with the people I do, and the mission still looks like a fantastic challenge.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>5626</id><published>2005-02-07T07:24:00.0-05:00</published><updated>2005-02-07T07:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What are the goals for System.Transactions?</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;When we started working on System.Transactions in .Net 2.0, we had a simple goal: to decompose transaction services down to a simple common set of interfaces; and in doing so to reduce the complexity associated with using transactions and extend their reach.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;This gave us two basic goals to aim at: a very simple object model with few ties to any larger environment, and sufficiently high performance for simple transactions to remove the need for any custom environment.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The first goal led to a simple set of services that were available as a core feature of .Net 2.0.  The application programmer typically only has to bracket the activities that are to be part of a transaction, so with .Net 2.0 their primary, and possibly sole, exposure to System.Transactions will be with TransactionScope.  That class has a number of constructors that provide for various settings from timeout to COM+ styles of transaction inheritance.  The typical pattern is likely to be (in C#):&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;    using (TransactionScope ts = new TransactionScope ())&lt;br /&gt;    {&lt;br /&gt;        // the transaction is active within here&lt;br /&gt;        // ...&lt;br /&gt;        ts.Complete ();&lt;br /&gt;    }&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;There is no further exposure until the application needs to handle distribution.  It does not require a special type of class, or custom attributes, or a specific run time.  In fact, the expectation is that application environments, such as System.EnterpriseServices, will make use of it for their underlying transaction feature.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The second goal required that we achieve very high performance for transactions that had simple topologies and one resource.  This was to avoid the pattern where components are built differently if the author expects that a single SQL connection will suffice.  This is typically done for performance, and our goal was to remove the performance argument and reduce the design pattern choices to a common set.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Our approach was to build a transaction stack that, behind the scenes, staged a series of fallbacks to more and more capable transaction management engines.  With this sort of structure, initial transaction creation is extremely cheap.  Furthermore, there are features, known as promotable single phase enlistment, in System.Transactions that allow a database to assume control of a simple transaction topology, yet have that control revoked if the topology increases sufficiently.  With this structure in place, our tests have shown very little difference between using System.Transactions and using ADO's single database transaction interfaces.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Between these two, we have a very simple object model, with a performance profile that means that you shouldn't have to code around it.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>9</thr:total></entry><entry><id>5631</id><published>2005-02-07T08:21:00.0-05:00</published><updated>2005-02-07T08:21:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">Good stuff, Jim!  Perhaps when you get a chance, you could more fully describe the fallback process?
&lt;br /&gt;
&lt;br /&gt;In our situation, whatever component gets the first call starts the transaction (using sytax identical to the TransactionScope example).  But obviously other components get called, each with their own transactions similarly fenced.  I think this is a very common practice and it would be great to know more about what triggers a "fallback" and how is affects the overall transaction process.
&lt;br /&gt;
&lt;br /&gt;Also, our apps have an asynchronous bit that we feed using MSMQ.  Does MSMQ get promotable single-phase enlistment as well?
&lt;br /&gt;
&lt;br /&gt;One side note: COM+ 1.5 acts differently on XP vs. Server 2003 when the app attempts to enlist an existing transation but with a different isolation level.  As I recall, XP will start a nested transaction while Server 2003 will throw an exception (it depends on which way the isolation level is changing).  
&lt;br /&gt;
&lt;br /&gt;It would be great to (a) have this discrepancy fixed and (b) understand how isolation level settings affect the fallback/enlistment process.
&lt;br /&gt;
&lt;br /&gt;Thanks again for the info.  These look like great additions for .Net development.
&lt;br /&gt;
&lt;br /&gt;- Erik</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>5632</id><published>2005-02-07T09:15:00.0-05:00</published><updated>2005-02-07T09:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">Is there any additional support for making transaction timeouts less annoying while debugging? I usually just create a configuration setting and disable transactions while debugging, but since you are building a whole new stack, maybe there is a better way to deal it.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>5717</id><published>2005-02-09T16:43:00.0-05:00</published><updated>2005-02-09T16:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">Erik,
&lt;br /&gt;
&lt;br /&gt;Thanks for the comments and the questions. I'll go deeper into how the fallback logic works in one or more upcoming entries.
&lt;br /&gt;
&lt;br /&gt;MSMQ does not yet support promotable single phase enlistments, but I would expect that it will at some point.
&lt;br /&gt;
&lt;br /&gt;Re Isolation levels: We try very hard to not do anything at this point to change existing behavior.  As for System.Transactions, we insist on an exact match for isolation levels, although the default is 'unspecified', which matches anything and is interpreted as 'serializable' if it is creating the transaction.
&lt;br /&gt;
&lt;br /&gt;Patrick,
&lt;br /&gt;
&lt;br /&gt;We didn't do anything to make handling timeouts during debugging easier.  In fact, in the current version it is probably harder.  This is because there's a machine wide maximum that the transaction timeout is minimized against.  For now, you should be able to set the machine wide maximum and not specify a timeout yourself.  However, this is good input that I'll bring up here.  I don't know what we can do about it, but we can at least explore it.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>6814</id><published>2005-03-20T06:40:00.0-05:00</published><updated>2005-03-20T06:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">Hello Patrick,
&lt;br /&gt;
&lt;br /&gt;i am pretty interested in your work. 
&lt;br /&gt;
&lt;br /&gt;I do have one novice question: Has someone from microsoft research or your team thought about a tranactional heap and stack feature for the CLR 2.0?
&lt;br /&gt;
&lt;br /&gt;As we all know application state is hard thing to manage. Therefore it might be useful to have transactional support on c# objects themselves. (Like O/R Mappers do). 
&lt;br /&gt;If this feature was deeply integrated into the CLR (stack and heap manager, garbage collector) there might be some new possiblities to implement nested transactions and advanced caching strategies. (This might also be interesting for the MBF and Nautilus team)
&lt;br /&gt;
&lt;br /&gt;Please send email to tfischer@tangible.de
&lt;br /&gt;
&lt;br /&gt;Kind Regards
&lt;br /&gt;
&lt;br /&gt;Tim</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>6820</id><published>2005-03-20T13:41:00.0-05:00</published><updated>2005-03-20T13:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">Tim,
&lt;br /&gt;
&lt;br /&gt;Thanks for your question, and for your interest.
&lt;br /&gt;
&lt;br /&gt;It's certainly my view that transactions represent a technology that should be usable from today's database applications down to very simple operations.
&lt;br /&gt;
&lt;br /&gt;I also believe that for transactions to be usable it needs to be based on a structure that provides a single, consistent, and simple set of structures that work across this entire range of possible operations.  In other words, I do believe that transactions are useful from individual objects up through databases, and that the application must not need to change its code in order to grow from one extreme into the other.
&lt;br /&gt;
&lt;br /&gt;It's also true that there's been active research into software transacted memory (STM) support and lighter weight transacted objects for a very long time.  Some of that research has looked at transactions that span from the very lightweight up through more traditional transaction systems.  I can't say that I've done an exhaustive research, but I have read some number of these papers over the years.
&lt;br /&gt;
&lt;br /&gt;I also believe that System.Transactions forms a solid basis for transaction management that is in line with these views.  I know that we've described how these could be used with, for instance, transacted collection classes.  While I can't say how far we'll be able to take this, or in what timeframe, we have been looking into doing something in this space post .Net 2.0.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>7812</id><published>2005-04-28T00:41:00.0-05:00</published><updated>2005-04-28T00:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">A peek at Longhorn: how TxF integrates</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>7813</id><published>2005-04-28T00:42:00.0-05:00</published><updated>2005-04-28T00:42:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">A peek at Longhorn: how TxF integrates</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>16844</id><published>2005-11-16T01:45:00.0-05:00</published><updated>2005-11-16T01:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">We are have several components that we want to use "COM+ style" by using TransactionScope(.Required) so that the the transaction context is passed on between the components to share an implicit, common transaction, but alas without incuring the DTC. Our database system is SQL Server 2005.
&lt;br /&gt;
&lt;br /&gt;The "problem" is that we are using TableAdapters that each internally opens their own connection, all to the same SS2K5 database using the same connect string, and this causes the transaction to be promoted from lightweight to DTC. This surprised me alot, is there a way to avoid this ? Do we need to pass the SqlConnection around ?
&lt;br /&gt;
&lt;br /&gt;From MSDN Mag 'Data Points':
&lt;br /&gt;When the first connection is created against the SQL Server 2005 database, the transaction stays lightweight. But when it connects to the second database, regardless of the type, the transaction is promoted to a distributed transaction.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>17454</id><published>2005-12-14T07:05:00.0-05:00</published><updated>2005-12-14T07:05:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What are the goals for System.Transactions?</title><content type="html">KjellSJ:
&lt;br /&gt;
&lt;br /&gt;I apologize for the delay in getting back to you.  TableAdapter isn't a mechanism that I'm familiar with, so I had to do ask around a bit here.
&lt;br /&gt;
&lt;br /&gt;What I've been told is that to avoid promotion you should supply the SqlConnection to the TableAdapter to make sure that they use the same one.
&lt;br /&gt;
&lt;br /&gt;Let me know if this does, or doesn't, help.
&lt;br /&gt;
&lt;br /&gt;Thanks,
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5626"></thr:in-reply-to></entry><entry><id>5727</id><published>2005-02-10T05:52:00.0-05:00</published><updated>2005-02-10T05:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">That pesky &amp;amp;quot;D&amp;amp;quot;</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;A transaction manager doesn't actually provide the ACID attributes of a transaction.  That true of all transaction management services.  Even so, I have seen a number of questions about the volatile resource manager support in System.Transactions.  The big concern is that a volatile transaction doesn't provide the “D” (durability).&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;I would disagree.  I believe it does, and want to use a couple of thought experiments to help describe how.  First, let's assume I have a “normal” transaction involving a database -- let's assume it is a traditional MSDTC-based transaction.  Does that provide the “D”?  I think the normal answer would be “yes”, and if probed, most people that I've talked to would say that it is because the transaction outcome was logged.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Now let's say that this system is changed so that every 3rd time I reboot the transaction manager automatically resets its log.  Does that provide “D”?  Even though it still logs the outcome, I would say probably not -- because I have no reason to believe that the lifetime of the transaction outcome is at least as long as the resources it is coordinating.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;That's the crux of the “D”, and of how volatile resources fit in.  The transaction manager should commit (no pun intended) to preserve the transaction outcome for as long as the resource might need it.  A volatile resource is one where the resource manager knows that its resources will never survive application termination.  Passing that hint along to the transaction manager allows the TM to make optimizations in its logging protocol without violating the spirit of a durable transaction outcome.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>2</thr:total></entry><entry><id>17796</id><published>2006-01-03T14:00:00.0-05:00</published><updated>2006-01-03T14:00:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: That pesky &amp;amp;quot;D&amp;amp;quot;</title><content type="html">So in a nutshell, a presumed-abort optimization, correct?
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5727"></thr:in-reply-to></entry><entry><id>17797</id><published>2006-01-03T15:53:00.0-05:00</published><updated>2006-01-03T15:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: That pesky &amp;amp;quot;D&amp;amp;quot;</title><content type="html">Not really -- this isn't about whether or not the protocol uses presumed abort (PA), presumed commit (PC), or presumed nothing (PN).
&lt;br /&gt;
&lt;br /&gt;In each of these variations, there's a requirement that the outcome persist for as long as it may be required.  All the PA/PC variants do is to provide logging and messaging optimizations that use lack of knowledge to 'presume' one direction of the outcome.  The other direction still needs to be recorded.
&lt;br /&gt;
&lt;br /&gt;The observation about volatile resources hinges on understanding the coincident failure modes.  If the resource literally can't exist for any longer than the TM, then the TM will have met its outcome stability requirement by recording the outcome in memory.  No disk traffic, regardless of type of outcome, is required.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5727"></thr:in-reply-to></entry><entry><id>5839</id><published>2005-02-13T11:36:00.0-05:00</published><updated>2005-02-13T11:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How transaction fallback works.</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;A recent comment asked for a longer explanation about how transaction fallback works.  In general, I've seen a lot of interest and questions about this, and about the LTM in general.  Although strongly related to fallback, I'm going to address some thoughts about the LTM in my next post.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The idea behind transaction manager fallback, aka “pay for play”, is to use a sequence of transaction management engines.  These engines begin with one that is strongly limited in scope, and heavily optimized within that scope.   The sequence continues one using ever more general purpose engines, culminating in the use of a fully general, distributed transaction management engine (MSDTC, in our case).  The process of moving from a more constrained engine to a less constrained one is called &lt;em&gt;fallback&lt;/em&gt;.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;In .Net 2.0, there are three possible stages that a transaction can go through: it begins under the control of the LTM, it may then be promoted to a database transaction through promotable single phase enlistment (PSPE), and finally, it may be promoted to MSDTC.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;All transactions begin under the LTM.  The LTM relenquishes control of a transaction either when a resource manager requests it through PSPE or when the transaction topology may require logging in the future.  The first case is pretty clear, so let's consider the second.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The LTM assumes that all volatile resources share the same failure behavior as itself -- that is to say that if the LTM fails, so do the volatile resources.  It furthermore assumes that other app domains and processes may not share the same failure behavior (i.e. it may fail, but the other app domain may still be up).  It also makes this same assumption about durable resources.  Given this, the LTM will promote to MSDTC if it a) is requested to marshall a transaction for another app domain or process, or b) if more than 1 durable resource is enlisted.  Note that even if it does promote to MSDTC, the LTM will continue to act as a facade layer, and will also be a concentrator for all local volatile resources (this last point reduces traffic and performance cost when the promotion does happen).&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Note that these same points will also result in the LTM revoking the transaction control from a PSPE-enabled resource, for many of the same reasons.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>5885</id><published>2005-02-15T05:36:00.0-05:00</published><updated>2005-02-15T05:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How transaction fallback works.</title><content type="html">How often would it be possible to know this at compile time?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5839"></thr:in-reply-to></entry><entry><id>5887</id><published>2005-02-15T05:49:00.0-05:00</published><updated>2005-02-15T05:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How transaction fallback works.</title><content type="html">Probably less than you might think.  It would be possible to determine that a transaction has no hope of staying local (normally due to the invocation of a remote application component).  However, it is much harder to work out if a transaction _may_ be local, since triggers such as ADO.Net calls may or may not result in remote activity and may or may not share database connections.  Those depend on the exact ADO provider stack used.  That is indicated by connection strings and depends on deployment decisions.
&lt;br /&gt;
&lt;br /&gt;Furthermore, the fallback mechanism, which does automatically adjust for deployment time decisions, has been sufficiently lightweight to obviate much of the reason for pursuing a compile time decision.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5839"></thr:in-reply-to></entry><entry><id>5897</id><published>2005-02-15T11:03:00.0-05:00</published><updated>2005-02-15T11:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How transaction fallback works.</title><content type="html">Thanks Jim. I must say I am really impressed, and it seems to be a renewed dedication to many parts of Microsoft to bake in knowledge that is difficult to master in in disparate areas.
&lt;br /&gt;The Pit of Success seems to have taken hold.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="5839"></thr:in-reply-to></entry><entry><id>6629</id><published>2005-03-10T05:55:00.0-05:00</published><updated>2005-03-10T05:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Indigo needs testers</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;If you ever wanted to work at Microsoft, and if you love distributed systems, Indigo has some opportunities that you should check out.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;See &lt;a href="http://www.microsoft.com/careers/search/details.aspx?jobid=32de915e-346f-40fc-8bee-a180e5782ce3" title="http://www.microsoft.com/careers/search/details.aspx?jobid=32de915e-346f-40fc-8bee-a180e5782ce3"&gt;&lt;font color="#004183"&gt;&lt;strong&gt;http://www.microsoft.com/careers/search/details.aspx?jobid=32de915e-346f-40fc-8bee-a180e5782ce3&lt;/strong&gt;&lt;/font&gt;&lt;/a&gt; and &lt;br /&gt;&lt;a href="http://www.microsoft.com/careers/search/details.aspx?jobid=6286bb1e-b6bc-469c-a300-f04dc8b13ff2" title="http://www.microsoft.com/careers/search/details.aspx?jobid=6286bb1e-b6bc-469c-a300-f04dc8b13ff2"&gt;&lt;strong&gt;&lt;font color="#004183"&gt;http://www.microsoft.com/careers/search/details.aspx?jobid=6286bb1e-b6bc-469c-a300-f04dc8b13ff2&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt; &lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>6687</id><published>2005-03-13T15:40:00.0-05:00</published><updated>2005-03-13T15:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What is this LTM thing?</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;As I mentioned in my previous post on fallback, I've read a number of comments and questions about what the LTM is, and how it works.  Since then I've been caught up in work, in some classes, and I caught the flu.  February was definitely a busy month.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;I have continued to think about the promised LTM topic, and try to decide what to say about it.  At one level, I'd prefer to say nothing.  After all, the purpose of the LTM is to act as “go faster“ stripes on the System.Transactions object model.  It isn't supposed to have its own interface, and an LTM transaction isn't supposed to be different than a “normal“ System.Transactions transaction.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;So why do we talk about it?  Undoubtedly part of the reason is because we're developers, and it's a cool design.  However, there's also the fact that it is the existence of the LTM that breaks the current notions of basic transaction management overhead found in System.EnterpriseServices and MSDTC.  Since we want to promote transactions as a ubiquitous mechanism, we need to show that very lightweight transactions are possible without leaving the standard classes.  In my mind, that is what is important about the LTM - that it makes very low overhead transactions possible.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Mechanistically, the LTM is a two-phase commit coordinator that operates within an appdomain.  It is co-located with both the application, and any enlistments it is managing.  It restricts itself to coordinating transactions that will not require the TM to log: these are transactions that either are local and have at most one durable enlistment.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Once the LTM faces a transaction topology that exceeds these limitations, it turns itself into a facade layer in front of a “more complete“ transaction manager, such as MSDTC.  All operations continue to pass through the LTM, and it continues to act as a concentrator for any volatile enlistments (thus optimizing the number of notifications that leave the appdomain).&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;PSPE (Promtable Single Phase Enlistment) is a special case of this.  In PSPE, an enlistment requests to become the “more complete“ TM.  If this request for promotion is allowed, LTM acts as the facade in front of the PSPE-driven TM.  This is like the MSDTC case, except that the PSPE-driven TM can also be asked to provide a fully distributable transaction object, which the LTM uses for propagation and later durable enlistments.  This is also called promotion.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The gist of all of this is that the LTM is the visible transaction manager that the application and the enlistments sees.  It may either be handling the coordination itself, or, if the coordinating TM may need to log in the future, it can be a facade layer in front of a more powerful TM.  You can't “code“ to it -- it is simply always there.  You don't do anything special to get a lightweight transaction, and you will get a non-lightweight transaction as an outgrowth of what you do with the transaction: if you propagate it to another process or appdomain, if you involve multiple durable resources, or if you retrieve the global transaction GUID, you will get a less-than-ligthweight transaction.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Ok, so what is this ILightweightTransaction thing, then?  In .Net 2.0 beta 1, that is the interface for a System.Transactions Transaction that shows that it supports PSPE.  If a transaction has already been promoted to a full distributed transaction, the enlistment can't attempt a PSPE, so it won't necessarily have the ILightweightTransaction interface.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;It doesn't have much to do with LTM, except as an outgrowth of the PSPE work.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>6688</id><published>2005-03-13T15:45:00.0-05:00</published><updated>2005-03-13T15:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Fallback or Promotion?</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I did get some questions at work about my use of the word &lt;em&gt;fallback&lt;/em&gt; to describe migrating the coordination from a lighter weight TM to a more general one.  We also refer to that as &lt;em&gt;promotion&lt;/em&gt;, and I believe that both are correct, and depend completely on the viewpoint you are using.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;From a performance standpoint, a transaction falls back to a lower absolute performance level as the coordination TM becomes more general purpose.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;From a functionality standpoint, a transaction is promoted to a more general purpose TM, but at the cost of absolute performance.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Since the functionality is always presented as the same at the System.Transactions interface, I tend to focus on the performance angle, and thus discuss fallback.  However, both that and promotion refer to the same overall activity.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>14781</id><published>2005-09-12T15:55:00.0-05:00</published><updated>2005-09-12T15:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transazioni in .NET 2.0</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="6688"></thr:in-reply-to></entry><entry><id>6821</id><published>2005-03-20T13:51:00.0-05:00</published><updated>2005-03-20T13:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What I'm reading at the moment</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I normally tend to oscillate between science fiction and non-fiction, with occasional forays into mysteries.  Just now, I'm in the non-fiction phase.  I'm currently reading &lt;a href="http://www.amazon.com/exec/obidos/ASIN/1585674028/qid=1111358688/sr=2-1/ref=pd_bbs_b_2_1/103-9730958-7311044"&gt;The Spartans &lt;/a&gt; by &lt;font color="#000000"&gt;Paul Cartledge.  I've found it a very approachable book.  It's not a deep study into the history of ancient Sparta, but it's a pretty good overview.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>6900</id><published>2005-03-28T07:09:00.0-05:00</published><updated>2005-03-28T07:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Telling when a transaction is done</title><content type="html">&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;The purpose of a transaction is to group a bunch of actions that an application takes together, and to either perform all of them or none of them as a unit.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It’s a pretty reasonable assumption, therefore, that a transaction should be sure that it includes all the actions an application intended before committing.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;We certainly don’t want a partial transaction to commit.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Furthermore, in a distributed application, we don’t want any zombie transaction segments to hang around.&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font face="Arial"&gt;&lt;font size="2"&gt;The simple case is, well, simple.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If I have a transaction that consists of a straight line of operations from a single thread of an application, the fact that the application said “commit” is probably enough.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;In other, slightly more complex cases, the application is embedded in an enterprise framework, such as COM+.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That framework will have rules that govern when an application segment that it is controlling is considered complete.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For instance, this is what is behind COM+’s DisableCommit, or Indigo’s AutoCompleteTransaction property.&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;Behind the scenes, logically what is happening in these systems is that the framework is enlisting in the transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The resource the enlistment is governing is that application segment’s notion of completeness.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If the segment is complete, based on the framework’s rules for completeness, the enlistment will vote yes, otherwise it will veto.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Furthermore, the frameworks will also be careful to ensure that no failures during communication are reported back as errors, and not hidden.&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;Here is a case where the enterprise framework is doing quite a bit of work for the application in order to ensure correctness.&lt;span style="mso-spacerun: yes"&gt;   &lt;/span&gt;But, System.Transactions decomposes transactions out of the enterprise framework, so what should an application do when it’s just using System.Transactions?&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;There are two underlying tools available.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The first is TransactionScope.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is a thread local mechanism to ensure that the caller states specifically that it is done with the transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If that is used throughout the application, then many of the completeness issues become moot.&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;The second mechanism is DependentTransaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is a form of Transaction that is created using the DependentClone method of an existing Transaction object.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;A DependentTransaction is both a normal Transaction object – you can enlist on it, you can issue Rollback, you can get the Identifier – and it incorporates a completion safety feature.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The application must call Complete on this object when it is done using it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is used internally by Indigo and by TransactionScope to ensure their completion safety.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, it can also be used directly by an application.&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;o:p&gt;&lt;font size="2" face="Arial"&gt; &lt;/font&gt;&lt;/o:p&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;There are two forms of DependentTransaction, which I’ll go into in my next post.&lt;/font&gt;&lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in 0in 0pt" class="MsoNormal"&gt;&lt;font size="2" face="Arial"&gt;&lt;strong&gt;Update:&lt;/strong&gt; A comment pointed out that I probably meant SetComplete, rather than DisableCommit.  SetComplete is certainly applicable, and at first I just agreed.  However, I think both are applicable.  The goal for the transaction system is to have the application segments assert that they are ok with transaction commitment proceeding -- effectively from any instruction following the call used to make that assertion.  DisableCommit/EnableCommit/SetComplete all play with that assertion in varying ways.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>7103</id><published>2005-03-29T06:20:00.0-05:00</published><updated>2005-03-29T06:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Telling when a transaction is done</title><content type="html">In the statement:
&lt;br /&gt;
&lt;br /&gt;For instance, this is what is behind COM+’s DisableCommit, or Indigo’s AutoCompleteTransaction property.
&lt;br /&gt;
&lt;br /&gt;I think you meant to use SetComplete instead of DisableCommit.  DisableCommit allows the state of the object to be maintained in COM+ across calls, as well as have transactions distributed across calls.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="6900"></thr:in-reply-to></entry><entry><id>7123</id><published>2005-03-30T06:22:00.0-05:00</published><updated>2005-03-30T06:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Telling when a transaction is done</title><content type="html">I'd still have to disagree.  You say:
&lt;br /&gt;
&lt;br /&gt;That framework will have rules that govern when an application segment that it is controlling is considered complete.
&lt;br /&gt;
&lt;br /&gt;And then you continue to say:
&lt;br /&gt;
&lt;br /&gt;For instance, this is what is behind COM+’s DisableCommit, or Indigo’s AutoCompleteTransaction property.
&lt;br /&gt;
&lt;br /&gt;The AutoCompleteTransaction property is basically a way for code to indicate to the current transaction context that it has completed everything in that transaction.  I agree that this is analagous to SetComplete (or rather, it automatcially calls something like SetComplete).
&lt;br /&gt;
&lt;br /&gt;However, calling DisableCommit does not imply that they are ok with transaction commitment proceeding.  This is more apparent when you have other transaction contexts that are wired up within an existing transaction.  If the parent transaction calls DisableCommit, it doesn't matter if all of the other contexts have SetComplete called on them, the transaction is put on hold until the context that had DisableCommit called on it has SetComplete called (or EnableCommit).  From the documentation for DisableCommit:
&lt;br /&gt;
&lt;br /&gt;Return Values
&lt;br /&gt;
&lt;br /&gt;S_OK 
&lt;br /&gt;
&lt;br /&gt;The call to DisableCommit succeeded. The object's transactional updates can't be committed until the object calls either EnableCommit or SetComplete. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="6900"></thr:in-reply-to></entry><entry><id>7125</id><published>2005-03-30T07:36:00.0-05:00</published><updated>2005-03-30T07:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Telling when a transaction is done</title><content type="html">Uhm, exactly.  I wasn't suggesting that DisableCommit allowed transaction commitment to proceed.  My point was that it was involved in the calculation as to whether or not the application had stated its doneness assertion.
&lt;br /&gt;
&lt;br /&gt;If an application says DisableCommit, then th application has denied doneness.  The transaction manager must not conclude that the application is willing for commitment to proceed.
&lt;br /&gt;
&lt;br /&gt;That is analogous to not setting AutoCompleteTransaction on the Indigo operation, and also not calling the manual equivalent in that method.
&lt;br /&gt;
&lt;br /&gt;In both cases, the assertion that the transaction system needs in order to successfully begin commitment has been denied.  Hence both properties are relevant to the discussion.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="6900"></thr:in-reply-to></entry><entry><id>7332</id><published>2005-04-14T08:15:00.0-05:00</published><updated>2005-04-14T08:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Telling when a transaction is done -- DependentTransaction</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;In the last article I talked about the issue that, for safety, a transaction manager should know that an application has completed its actions before allowing a request to commt to successfully proceed.  This validation has been part of COM+, rather than MSDTC.  Given that System.Transactions decomposes the basic transaction mechanism out of the enterprise frameworks, such as COM+, what does it do to provide this safety feature?&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The feature comes in the form of the DependentTransaction object.  This is obtained from a Transaction using the DependentClone method.  This takes a parameter to indicate the synchronization requirements to enforce the DependentTransaction, and is either &lt;em&gt;RollbackIfNotComplete&lt;/em&gt; or &lt;em&gt;BlockCommitUntilComplete&lt;/em&gt;.  In both cases, the application signals that it has completed by calling the Complete method on the DependentTransaction object.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;RollbackIfNotComplete is the more traditional usage.  That is an assertion by the application that it expects to be complete with its activity prior to any request to commit.  Therefore, if commitment begins before the Complete method has been called there is a global application synchronization bug, and the transaction should abort.  If the application is using an RPC mechanism, or a messaging structure that has a return message, this is normally a pretty trivial assertion to make.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The code to obtain one would be:&lt;/font&gt;&lt;/p&gt;
&lt;blockquote style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;p&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;DependentTransaction dtx = tx.DependentClone&lt;br /&gt;                              (DependentCloneOption.BlockCommitUntilComplete);&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Arial"&gt;This is then a Transaction object that can be used in the various ways that any other Transaction object can be used, with the addition that the application will need to issue a dtx.Complete () when it is done.&lt;/font&gt;&lt;/p&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Arial"&gt;There is a second variation, BlockCommitUntilComplete, that deals with the cases where the synchronization would be less natural.  In many of those cases, the application today has synchronization logic only to ensure that the commit happens after all the processing has completed.  BlockCommitUntilComplete provides a mechanism to do that within System.Transactions, rather than through custom code in the application.&lt;/font&gt;&lt;/p&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Arial"&gt;The simplest example of this is a transaction that makes use of a pool of worker threads.  The main thread would look something like:&lt;/font&gt;&lt;/p&gt;
&lt;blockquote style="MARGIN-RIGHT: 0px" dir="ltr"&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Courier New"&gt;using (TransactionScope scope = new TransactionScope ())&lt;br /&gt;{&lt;br /&gt;    for (int i = 0; i &amp;lt; 5; i++)&lt;br /&gt;    {&lt;br /&gt;        DependentTransaction dtx = Transaction.Current.DependentClone&lt;br /&gt;                             (DependentCloneOptions.BlockCommitUntilComplete);&lt;br /&gt;        ... queue a thread method Work (dtx, &lt;MY options="options"&gt;)&lt;br /&gt;    }&lt;br /&gt;    scope.Complete ();&lt;br /&gt;}&lt;/MY&gt;&lt;/font&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Arial"&gt;Then, the routine Work would use the DependentTransaction object to set up its TransactionScope, and to declare that it is complete at the end.&lt;/font&gt;&lt;/p&gt;
&lt;p dir="ltr"&gt;&lt;font size="2" face="Arial"&gt;In the meantime, the main thread will hang in the closing brace of the using statement until all five worker threads have completed.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>4</thr:total></entry><entry><id>7336</id><published>2005-04-14T09:12:00.0-05:00</published><updated>2005-04-14T09:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Telling when a transaction is done -- DependentTransaction</title><content type="html">Good post.  I think that a natural follow-up to this post would show how transactions can be passed across thread boundaries (which is something that you don't see done often, especially in the COM+ space).  Last I checked in Reflector, the classes in System.Transaction handled this quite nicely.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7332"></thr:in-reply-to></entry><entry><id>7478</id><published>2005-04-18T06:02:00.0-05:00</published><updated>2005-04-18T06:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Telling when a transaction is done -- DependentTransaction</title><content type="html">Thanks.
&lt;br /&gt;
&lt;br /&gt;Yes, cross thread transactions would be a good example, and one that is pretty easy.  I'll add an article with a more full example on this.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7332"></thr:in-reply-to></entry><entry><id>7924</id><published>2005-05-01T11:51:00.0-05:00</published><updated>2005-05-01T11:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Multithreading with DependentTransaction</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7332"></thr:in-reply-to></entry><entry><id>17770</id><published>2006-01-01T13:53:00.0-05:00</published><updated>2006-01-01T13:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to pass a transaction along a chain of events</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7332"></thr:in-reply-to></entry><entry><id>7334</id><published>2005-04-14T08:43:00.0-05:00</published><updated>2005-04-14T08:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">The two sayings in my office</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;Anyone who has been to my office has probably noticed that there are two quotes up on my whiteboard.  I keep them there as reminders, because I think they capture the boundaries of this space wonderfully.  [Both are quotes -- post a comment if you know who they're from :)]&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The first quote is “&lt;strong&gt;2PC is simple, except we're in a hurry&lt;/strong&gt;”.  This really does capture much of the work that has gone on in transactions in the past 20 years.  I still recommend the chapter “Atomic Transactions” from &lt;a href="http://www.amazon.com/exec/obidos/tg/detail/-/0387121161/qid=1113495419/sr=8-1/ref=sr_8_xs_ap_i1_xgl14/102-9745339-4932103?v=glance&amp;amp;s=books&amp;amp;n=507846"&gt;&lt;b class="small"&gt;Distributed Systems--Architecture and Implementation: An Advanced Course (Springer Study Edition)&lt;/b&gt;&lt;/a&gt; as the best starting point for understanding what transactions are, and are not, and what problems they are trying to solve, and which ones they aren't.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The problem is that it describes an approach that no one can afford to use.  So, dsitributed transactions have a long history of optimizations that seek to soften this ideal picture in ways that don't actually matter for the uses it is put to.  Sometimes these are in the commitment protocol (e.g. Presumed Abort, readonly voting), sometimes they are in serialization (various isolation levels, escrow locking), and sometimes they are in implementation structures (e.g. System.Transactions and its lightweight transaction manager).&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The second quote describes the limits of what possibilities are actually available: “&lt;strong&gt;Without correctness, any level of performance is possible&lt;/strong&gt;".  Much of our focus is invariably on providing available and high performance services.  However, these should never come at the cost of correctness.  We preclude optimizations that give the wrong answer “occasionally”, and especially when you can't tell it gave the wrong answer, or availability decisions that has the transaction manager ignore internal inconsistencies and simply continue.  After all, if we're willing to give the wrong answer, the return statement is much more performant, and more available than anything else we could do...&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Together, these form our overall story: how to achieve a viable approximation of the ideal atomic transaction vision, accepting that we're all in a hurry.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>7335</id><published>2005-04-14T08:59:00.0-05:00</published><updated>2005-04-14T08:59:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What I'm reading at the moment</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I've recently finished Alfred Bester's “The Stars, My Destination”.  I'd heard about it for years, but realized that I'd never read it.  Ok, its 50 years old, so a little dated -- but I thought it was still a good read.  Actually, I found the idea of hereditary company names (i.e. the Edison of Edison) pretty hilarious, but probably in keeping with the times...&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Since then, I've started reading Kate Adie's biography “The Kindness of Strangers”.  She was the BBC reporter they sent to trouble spots when I was living in England -- it was always a bad sign when she showed up.  I still remember her report the morning after the troops went in to Tiananmen Square.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>7811</id><published>2005-04-27T21:41:00.0-05:00</published><updated>2005-04-27T21:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">A peek at Longhorn: how TxF integrates</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I've written &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/02/07/5626.aspx"&gt;before&lt;/a&gt; about the underlying principles behind our transaction management work: &lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;our aim is to provide a ubiquitous transaction service, that makes the use of transactions a natural fit for applications seeking reliability or improved concurrency.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;In order to accomplish that, we produce transaction services:&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;that provide a simple, trivial to use, transaction demarcation interface;&lt;/font&gt; 
&lt;/li&gt;&lt;li&gt;&lt;font size="2" face="Arial"&gt;that offer as little overhead as possible; and &lt;/font&gt;
&lt;/li&gt;&lt;li&gt;&lt;font size="2" face="Arial"&gt;that do not change the developer experience as either the type of resource or the complexity of the transaction grows.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;We've put a lot of effort into these, with the first obvious signs showing up in System.Transactions, available in the current .Net 2.0 betas.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Now, Longhorn is adding support for a transacted file system (TxF), and it would be instructive to take a look at how we approached incorporating suppport into our overall transaction model.  Our goal is that it is just another first class resource -- it should 'just work', to whatever extent possible.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;With the upcoming beta you should be able to take an existing application that uses COM+ or System.EnterpriseServices application, or in .Net 2.0, one using System.Transactions, and add transacted file system operations without any great changes to the code.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Here is a sample System.Transactions application (put together by &lt;a href="http://msdn.microsoft.com/msdntv/episode.aspx?xml=episodes/en/20050203NETMC/manifest.xml"&gt;Mike Clark of the video fame&lt;/a&gt;):&lt;/font&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;using System;&lt;br /&gt;using System.IO;&lt;br /&gt;using System.Transactions;&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;public class TextToFile &lt;br /&gt;{&lt;br /&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;    [System.Runtime.InteropServices.DllImport("kernel32"), &lt;br /&gt;     System.Security.SuppressUnmanagedCodeSecurityAttribute()]&lt;br /&gt;     internal static extern bool EnterTransactionScope();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;    [System.Runtime.InteropServices.DllImport("kernel32"), &lt;br /&gt;     System.Security.SuppressUnmanagedCodeSecurityAttribute()]&lt;br /&gt;     internal static extern bool ExitTransactionScope();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;    private const string FILE_NAME_ABORT  = "AbortFile.txt";&lt;br /&gt;    private const string FILE_NAME_COMMIT = "CommitFile.txt";&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;    public static void Main(String[] args) &lt;br /&gt;    {&lt;br /&gt;        if (File.Exists(FILE_NAME_ABORT)) &lt;br /&gt;        {&lt;br /&gt;            Console.WriteLine("{0} already exists.", FILE_NAME_ABORT);&lt;br /&gt;            return;&lt;br /&gt;        }&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;        Console.WriteLine("Creating TransactionScope");&lt;br /&gt;        try&lt;br /&gt;        {&lt;br /&gt;            using(TransactionScope s = new TransactionScope(&lt;br /&gt;                  TransactionScopeOption.Required, new TransactionOptions(),  &lt;br /&gt;                  EnterpriseServicesInteropOption.Full))&lt;br /&gt;            {&lt;br /&gt;                Console.WriteLine("Calling KTM EnterTransactionScope");            &lt;br /&gt;                EnterTransactionScope();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;                Console.WriteLine("Doing File IO");&lt;br /&gt;                StreamWriter sr = File.CreateText(FILE_NAME_ABORT);&lt;br /&gt;                sr.WriteLine ("This is my file.");&lt;br /&gt;                sr.WriteLine ("I can write ints {0} or floats {1}, and so on.",&lt;br /&gt;                    1, 4.2);&lt;br /&gt;                sr.Close();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;                Console.WriteLine("Calling KTM ExitTransactionScope");&lt;br /&gt;                ExitTransactionScope();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;                // note that the s.Complete is not called so the transaction&lt;br /&gt;                // will roll back.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;            }&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;            using(TransactionScope s = new TransactionScope(&lt;br /&gt;                  TransactionScopeOption.Required, new TransactionOptions(),  &lt;br /&gt;                  EnterpriseServicesInteropOption.Full))&lt;br /&gt;            {&lt;br /&gt;                Console.WriteLine("Calling KTM EnterTransactionScope");            &lt;br /&gt;                EnterTransactionScope();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;                Console.WriteLine("Doing File IO");&lt;br /&gt;                StreamWriter sr = File.CreateText(FILE_NAME_COMMIT);&lt;br /&gt;                sr.WriteLine ("This is my file.");&lt;br /&gt;                sr.WriteLine ("I can write ints {0} or floats {1}, and so on.",&lt;br /&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;                    1, 4.2);&lt;br /&gt;                sr.Close();&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 12pt" class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Courier New"&gt;                Console.WriteLine("Calling KTM ExitTransactionScope");&lt;br /&gt;                ExitTransactionScope();&lt;br /&gt; &lt;br /&gt;                s.Complete();&lt;br /&gt;            }&lt;br /&gt;        }&lt;br /&gt;        catch(Exception e)&lt;br /&gt;        {&lt;br /&gt;            Console.WriteLine("UHANDLED EXCEPTION");&lt;br /&gt;            Console.WriteLine(e);&lt;br /&gt;        }&lt;br /&gt;    }&lt;br /&gt;}&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 12pt" class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Arial"&gt;Let me point out some things about this sample:&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 12pt" class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Arial"&gt;&lt;strong&gt;EnterTransactionScope/ExitTransactionScope&lt;/strong&gt;: These are two new system calls that establish a kernel ambient transaction that is used by file system calls.  Since the file system calls are not specific to transaction behavior, it is important that you establish a kernel ambient transaction around as small a region as possible.  Note that the cost of entering and exiting transaction scopes multiple times is very low -- the only significant work is done on the first one.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 12pt" class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Arial"&gt;&lt;strong&gt;EnterpriseServiceInteropOption.Full&lt;/strong&gt;: This is used as a simple way to establish the internal connections necessary to connect a user mode transaction to a potential kernel ambient transaction.  Internally, this uses COM+ Services Without Components to establish the correct running context.  There are mechanisms that do not end up using COM+, but they do require some extra coding.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 12pt" class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Arial"&gt;Aside from these points, this is just a normal System.Transactions application.  All the features that are otherwise available, from distribution, mutiple thread support, database integration, and so on, continue to work just as they have.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p style="MARGIN-BOTTOM: 12pt" class="MsoNormal"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;&lt;font face="Arial"&gt;There is equivalent support in COM+/System.EnterpriseServices, and the underlying support is built into the MSDTC interfaces.  Therefore, there's a very equivalent example that can be written in any of those systems.  I'll try to post those examples in the coming days.&lt;/font&gt;&lt;/span&gt;&lt;/p&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Lucida Console'"&gt;
&lt;/span&gt;&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;UPDATE: This approach is no longer appropriate as of the Vista RC update.  See &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2006/08/31/36819.aspx"&gt;http://pluralsight.com/blogs/jimjohn/archive/2006/08/31/36819.aspx&lt;/a&gt; for more information.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>15</thr:total></entry><entry><id>7882</id><published>2005-04-30T15:42:00.0-05:00</published><updated>2005-04-30T15:42:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">JimJohn on Kernel-mode Transactions and TxNTFS</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>7911</id><published>2005-05-01T03:09:00.0-05:00</published><updated>2005-05-01T03:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">New and Notable 72</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>7919</id><published>2005-05-01T05:48:00.0-05:00</published><updated>2005-05-01T05:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A peek at Longhorn: how TxF integrates</title><content type="html">Whew! This mighty cooool! I love this one ;-)
&lt;br /&gt;BTW: Could you please explain why we should limit the transaction to a small region? Is it because of the facts like file locks etc...?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>7921</id><published>2005-05-01T08:07:00.0-05:00</published><updated>2005-05-01T08:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A peek at Longhorn: how TxF integrates</title><content type="html">Buddhike,
&lt;br /&gt;
&lt;br /&gt;Glad you like it!
&lt;br /&gt;
&lt;br /&gt;The reason the scope should be around a small region is because the file system calls themselves don't change.  Any file system calls that occur within an active kernel transaction scope end up participating in the transaction (or failing if they can't).  If you make the region of the scope too big, for instance by including calls to outside functions, you run into the dilemma described in the next article http://pluralsight.com/blogs/jimjohn/archive/2005/04/27/7814.aspx.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>7971</id><published>2005-05-02T15:03:00.0-05:00</published><updated>2005-05-02T15:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transaction-mania!</title><content type="html">Jim Johnson has posted a great article on how to use Longhorn's Kernel Mode Transactions and Transacted...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>7983</id><published>2005-05-03T02:11:00.0-05:00</published><updated>2005-05-03T02:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">I had no idea Jim was blogging</title><content type="html">I just learned that Jim Johnson is blogging. Very cool indeed. I'm a fan of that team's work.I had the...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8003</id><published>2005-05-03T14:49:00.0-05:00</published><updated>2005-05-03T14:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Longhorn: How TxF Integrates</title><content type="html">Jim Johnson: "Now, Longhorn is adding support for a transacted file system (TxF), and it would be instructive to take a look at how we approached incorporating suppport into our overall transaction model. Our goal is that it is just...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8027</id><published>2005-05-04T16:43:00.0-05:00</published><updated>2005-05-04T16:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Kernel-mode ambient transactions, TxF and System.Transaction</title><content type="html">One really think I love in Longhorn is the new TxF file system (I blogged about it a while back). Jim...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8059</id><published>2005-05-05T20:11:00.0-05:00</published><updated>2005-05-05T20:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Links da semana...</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8192</id><published>2005-05-11T07:29:00.0-05:00</published><updated>2005-05-11T07:29:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A peek at Longhorn: how TxF integrates</title><content type="html">Will the Enter/Exit TransactionScope calls get integrated into the managed TransactionScope class at some point? It seems like there's 2 calls to set up the scope and 2 to tear it down in the sample here.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8204</id><published>2005-05-11T14:37:00.0-05:00</published><updated>2005-05-11T14:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A peek at Longhorn: how TxF integrates</title><content type="html">Speaking for myself, I would expect Enter/ExitTransactionScope should get integrated into the base classes at some point.  They would most likely get integrated into the file operation classes (e.g. System.IO) rather than TransactionScope.
&lt;br /&gt;
&lt;br /&gt;I hold this view, because the purpose for the Enter/Exit calls is to change the transaction behavior of the file system operations they surround.  They should therefore be tightly bound around the intended file system operations.  That leads to an expectation that they'd fit best as part of a transaction-aware file access object model.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8521</id><published>2005-05-23T15:11:00.0-05:00</published><updated>2005-05-23T15:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Jihm Johnson talks about file system transactions in .NET</title><content type="html">Go read here</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>8531</id><published>2005-05-23T17:04:00.0-05:00</published><updated>2005-05-23T17:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">When ASP.NET 2.0 throws 404's at you...</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>14804</id><published>2005-09-13T22:46:00.0-05:00</published><updated>2005-09-13T22:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>76193</id><published>2010-04-22T12:57:21.0-05:00</published><updated>2010-04-22T12:57:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A peek at Longhorn: how TxF integrates</title><content type="html">any updates for 2010 ?? and using win xp ??

thanks.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7811"></thr:in-reply-to></entry><entry><id>7814</id><published>2005-04-27T22:25:00.0-05:00</published><updated>2005-04-27T22:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Injecting Transactedness</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;As our team's primary goal is to promote ubiquity of transaction use, some of us have spent quite a bit of time thinking about the problems associated both with adding in new types of transacted resources, especially transacted variants of currently non-transacted resources, and in continuing to deal with a world where only part of your data is transaction aware, especially as it becomes the predominant part.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The answer that everyone would like to have is that we could wave a magic wand and suddenly non-transacted resources would just simply be transacted.  That I could just write:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;atomic&lt;br /&gt;{&lt;br /&gt;    DoFirstThing ();&lt;br /&gt;    DoSecondThing ();&lt;br /&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;And somehow everything done under DoFirstThing and DoSecondThing would be incorporated into the overall transaction -- even if DoFirstThing and DoSecondThing already exist and were written for a non-transacted world&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;For transaction-aware code written to System.Transactions, COM+, or Indigo, that is/will be effectively true.  But what about the objects and resources used in those, or other, routines that aren't transaction-aware?  Could we just make them transaction-aware?  This is what I call “injecting transactedness”.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;It's a really seductive idea.  In the general case, though, it doesn't work.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;The key is that by injecting transactedness the caller has changed the contract that the internal objects and resources have with DoFirstThing and DoSecondThing.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;For instance, let's say that DoFirstThing does the following (in pseudo-code):&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;void DoFirstThing (string key, string val)&lt;br /&gt;{&lt;br /&gt;    hashTable.Add (key, val);&lt;br /&gt;    try&lt;br /&gt;    {&lt;br /&gt;        using (TransactionScope s = new TransactionScope ())&lt;br /&gt;        {&lt;br /&gt;            ... get sql connection set up ...&lt;br /&gt;            ... add {key, val} entry to sql table ...&lt;br /&gt;            s.Complete ();&lt;br /&gt;        }&lt;br /&gt;    catch (Exception e)&lt;br /&gt;    {&lt;br /&gt;        if (!hashTable.ContainsKey (key))&lt;br /&gt;            ... invariant check failed, terminate process ...&lt;br /&gt;        hashTable.Remove (key);&lt;br /&gt;    }&lt;br /&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;While this is a purposefully simplified pseudo-code example, here we have a case where if the transaction asynchronously aborts (and System.Transactions does do eager abort), this working code will suddenly fail an internal validity check and failfast.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;There are other cases that are very easy to imagine, such as activity logs that are meant to record all activity, even that which eventually fails, or trace data.  There are more complex cases, as well:&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;many involve what happens at transaction abort, or&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;others involve multithreading and intended data leakage, or&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;others involve transaction-aware routines that always intended to be the roots of their transactions.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;All are examples of what happens when you change the semantic contract of another software component from the outside.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>5</thr:total></entry><entry><id>7827</id><published>2005-04-28T04:55:00.0-05:00</published><updated>2005-04-28T04:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Injecting Transactedness</title><content type="html">Hey Jim,
&lt;br /&gt;
&lt;br /&gt;It'd be hella nice if you could show an example of IPromotableSinglePhaseNotification. There is just nothing out there as far as a simple code sample goes.
&lt;br /&gt;
&lt;br /&gt;- SM</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7814"></thr:in-reply-to></entry><entry><id>7829</id><published>2005-04-28T05:01:00.0-05:00</published><updated>2005-04-28T05:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Injecting Transactedness</title><content type="html">I am going to comment on something that I have not looked at yet. I apologize if something like this is already in 2.0 and I'm clueless.
&lt;br /&gt;
&lt;br /&gt;Reading your post, the first thing that jumped into my mind for enlisting non-transacted resources in transactions is that in practice there are usually compensating operations. So if there is a DoFirstThing, then there very well could be UndoFirstThing. 
&lt;br /&gt;
&lt;br /&gt;Then if the transaction framework could fire an event like OnRollback, I'd at least be able to call UndoFirstThing manually. 
&lt;br /&gt;
&lt;br /&gt;This is obviously imperfect - it doesn't give me fully acid transactions - but it would seem to have great practical value for me, since non-transacted resources are a reality.
&lt;br /&gt;
&lt;br /&gt;Is there something like this I should look at?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7814"></thr:in-reply-to></entry><entry><id>7842</id><published>2005-04-28T21:01:00.0-05:00</published><updated>2005-04-28T21:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Injecting Transactedness</title><content type="html">These are both good topics:
&lt;br /&gt;
&lt;br /&gt;Sahil, that sounds like a great suggestion.
&lt;br /&gt;
&lt;br /&gt;Patrick, I can think of two ways, either using the TransactionCompletedEvent or by building a small specialist volatile resource manager (in other words, implementing IEnlistmentNotification, which doesn't sound as scary :) ).  I'd like to do a small post on these two, and the tradeoffs in between.
&lt;br /&gt;
&lt;br /&gt;I have to confess to being pretty busy just now, so it may be a couple of days.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7814"></thr:in-reply-to></entry><entry><id>7850</id><published>2005-04-29T07:45:00.0-05:00</published><updated>2005-04-29T07:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Injecting Transactedness</title><content type="html">So cool - thanks. No rush on my account.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7814"></thr:in-reply-to></entry><entry><id>14780</id><published>2005-09-12T15:55:00.0-05:00</published><updated>2005-09-12T15:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transazioni in .NET 2.0</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7814"></thr:in-reply-to></entry><entry><id>7843</id><published>2005-04-28T21:06:00.0-05:00</published><updated>2005-04-28T21:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Suggestion box</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I've had some good suggestions for posts come on the comments so far.  It struck me that I should encourage that, so here's my suggestion box topic.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Please post comments on some topic that you'd like me to discuss.  There no guarantee that I'll get to any or all of them, but I am interested in what would interest you.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Right now I have 3 suggestions that I want to pull together:&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;Show how to use DependendentTransaction in a multi-threaded environment.&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;Show how to implement support for promotable single phase enlistments.&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size="2" face="Arial"&gt;Show how to build a volatile compensator that is able to run user code at rollback.&lt;/font&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;So, what else would be useful?&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Jim.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>8</thr:total></entry><entry><id>7847</id><published>2005-04-29T03:57:00.0-05:00</published><updated>2005-04-29T03:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">In order of priority :)
&lt;br /&gt;
&lt;br /&gt;#1. Show how to implement support for promotable single phase enlistments. 
&lt;br /&gt;
&lt;br /&gt;#2. Show how to build a volatile compensator that is able to run user code at rollback.
&lt;br /&gt;
&lt;br /&gt;#3. Show how to use DependendentTransaction in a multi-threaded environment. 
&lt;br /&gt;
&lt;br /&gt;I got another one to add - Something that clearly explains nested transaction scopes.
&lt;br /&gt;
&lt;br /&gt;Okay one more - Something that explains Serialization level setting in TransactionScopeOptions in a non-database setting. 
&lt;br /&gt;
&lt;br /&gt;BTW I got a Q 4 U which I have gotten conflicting answers to. In Sql Server 2005, with two databases involved, what is the serialization level that the transactions are run on? (Assuming that the suggested serialization level using TransactionScopeOptions was ReadCommitted).
&lt;br /&gt;
&lt;br /&gt;Thanks for all your help :)
&lt;br /&gt;
&lt;br /&gt;- SM
&lt;br /&gt;PS: I wrote this up - http://www.codebetter.com/blogs/sahil.malik/archive/2005/04/28/62604.aspx - might be incorrect, but would love comments, or maybe the suggestion #1 above will subsume it.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>8438</id><published>2005-05-17T23:04:00.0-05:00</published><updated>2005-05-17T23:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">Sahil, for #1 you can take a look at http://blogs.msdn.com/florinlazar/archive/2005/05/17/418595.aspx
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>9737</id><published>2005-06-03T12:31:00.0-05:00</published><updated>2005-06-03T12:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">Jim-- could you spin up a post explaining System.Environment.FailFast and when it is appropriate to use this mechanism? I'm particularly curious about its usage with respect to building reliable systems.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>10570</id><published>2005-06-07T20:44:00.0-05:00</published><updated>2005-06-07T20:44:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">Thanks Florin. I saw that, you have a fantastic blog I must add.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>11453</id><published>2005-06-19T01:17:00.0-05:00</published><updated>2005-06-19T01:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Understanding nested transaction scopes</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>13407</id><published>2005-07-20T12:40:00.0-05:00</published><updated>2005-07-20T12:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">http://pluralsight.com/blogs/dbox/archive/2005/04/30/7880.aspx said that I should file my grievance with you. We wish that more of the API would provide delegate based extension (eg, like Ruby blocks).
&lt;br /&gt;
&lt;br /&gt;Thanks!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>13805</id><published>2005-08-02T06:31:00.0-05:00</published><updated>2005-08-02T06:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">Jared,
&lt;br /&gt;
&lt;br /&gt;As Don pointed out, that set of choices was one that we agonized over repeatedly when building System.Transactions.  It's a great topic to dive into.  I'll plan to do up an entry on this -- what we were balancing, what an ideal answer might look like, and generally how we thought about it.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>91858</id><published>2010-07-21T10:04:44.0-05:00</published><updated>2010-07-21T10:04:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Suggestion box</title><content type="html">other suggestion:

Show how use Transaction FileSystem in Windows XP: use transaction in database operations and filesystem operations (file.copy, move, create dir, etc..).

Thanks.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7843"></thr:in-reply-to></entry><entry><id>7923</id><published>2005-05-01T08:51:00.0-05:00</published><updated>2005-05-01T08:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Multithreading with DependentTransaction</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;In an earlier &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/04/14/7332.aspx"&gt;article&lt;/a&gt;, I explained that you could use the System.Transaction feature &lt;/font&gt;&lt;font size="2" face="Arial"&gt;DependentTransaction to ensure that a transaction commit was held until all the activity for the transaction had completed.  One scenario that was in our minds was its use in a multithreaded environment.  A commenter asked for an example showing how this could be done.  Below is a simple example:&lt;/font&gt;&lt;/p&gt;&lt;font size="1" color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="2" face="Courier New"&gt;using&lt;/font&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt; System;&lt;br /&gt;&lt;font color="#0000ff"&gt;using&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt; System.Threading;&lt;br /&gt;&lt;font color="#0000ff"&gt;using&lt;/font&gt; System.Transactions;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="2" face="Courier New"&gt;namespace&lt;/font&gt;&lt;font size="2" face="Courier New"&gt; MultiThread&lt;br /&gt;{&lt;br /&gt;    &lt;font color="#0000ff"&gt;class&lt;/font&gt; &lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#008080" face="Courier New"&gt;Program&lt;br /&gt;    &lt;/font&gt;&lt;font face="Courier New"&gt;{&lt;br /&gt;        &lt;/font&gt;&lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#0000ff"&gt;public&lt;/font&gt; &lt;font color="#0000ff"&gt;static&lt;/font&gt; &lt;font color="#0000ff"&gt;void&lt;/font&gt; ThreadProc(&lt;font color="#0000ff"&gt;object&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt; o)&lt;br /&gt;        &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;{&lt;br /&gt;            &lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;DependentTransaction&lt;/font&gt; dtx = (&lt;font color="#008080"&gt;DependentTransaction&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;) o;&lt;br /&gt;&lt;br /&gt;            &lt;/font&gt;&lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#0000ff"&gt;using&lt;/font&gt; (&lt;font color="#008080"&gt;TransactionScope&lt;/font&gt; s = &lt;font color="#0000ff"&gt;new&lt;/font&gt; &lt;font color="#008080"&gt;TransactionScope&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;(dtx))&lt;br /&gt;            &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;{&lt;br /&gt;                // Wait 5 seconds just to make sure this thread&lt;br /&gt;                // completes after the main one.&lt;br /&gt;                //&lt;br /&gt;                &lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#008080" face="Courier New"&gt;Thread&lt;/font&gt;&lt;font face="Courier New"&gt;.Sleep(5000);&lt;br /&gt;&lt;br /&gt;                &lt;/font&gt;&lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;Console&lt;/font&gt;.WriteLine(&lt;font color="#800000"&gt;"About to complete the worker thread's transaction scope"&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;);&lt;br /&gt;                &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;s.Complete();&lt;br /&gt;            &lt;/font&gt;&lt;font size="2" face="Courier New"&gt;}&lt;br /&gt;&lt;br /&gt;            &lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;Console&lt;/font&gt;.WriteLine(&lt;font color="#800000"&gt;"Completing the dependent clone"&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;);&lt;br /&gt;            &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;dtx.Complete();&lt;br /&gt;        &lt;/font&gt;&lt;font size="2" face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#0000ff"&gt;        static&lt;/font&gt; &lt;font color="#0000ff"&gt;void&lt;/font&gt; Main(&lt;font color="#0000ff"&gt;string&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;[] args)&lt;br /&gt;        &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;{&lt;br /&gt;            &lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#008080" face="Courier New"&gt;DependentTransaction&lt;/font&gt;&lt;font face="Courier New"&gt; dtx;&lt;br /&gt;            &lt;/font&gt;&lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;Thread&lt;/font&gt; newThread = &lt;font color="#0000ff"&gt;new&lt;/font&gt; &lt;font color="#008080"&gt;Thread&lt;/font&gt; (&lt;font color="#0000ff"&gt;new&lt;/font&gt; &lt;font color="#008080"&gt;ParameterizedThreadStart&lt;/font&gt;(&lt;font color="#008080"&gt;Program&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;.ThreadProc));&lt;br /&gt;&lt;br /&gt;            &lt;/font&gt;&lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#0000ff"&gt;using&lt;/font&gt; (&lt;font color="#008080"&gt;TransactionScope&lt;/font&gt; s = &lt;font color="#0000ff"&gt;new&lt;/font&gt; &lt;font color="#008080"&gt;TransactionScope&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;())&lt;br /&gt;            &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;{&lt;br /&gt;                &lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;dtx = &lt;/font&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;Transaction&lt;/font&gt;.Current.DependentClone(&lt;font color="#008080"&gt;DependentCloneOption&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;.BlockCommitUntilComplete);&lt;br /&gt;                &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;newThread.Start(dtx);&lt;br /&gt;                &lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;Console&lt;/font&gt;.WriteLine(&lt;font color="#800000"&gt;"About to complete the main thread"&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;);&lt;br /&gt;                &lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;s.Complete();&lt;br /&gt;            &lt;/font&gt;&lt;font size="2" face="Courier New"&gt;}&lt;br /&gt;&lt;br /&gt;            &lt;/font&gt;&lt;font size="2"&gt;&lt;font face="Courier New"&gt;&lt;font color="#008080"&gt;Console&lt;/font&gt;.WriteLine(&lt;font color="#800000"&gt;"Transaction Completed"&lt;/font&gt;&lt;/font&gt;&lt;font face="Courier New"&gt;);&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;        }&lt;br /&gt;    &lt;/font&gt;&lt;font size="2" face="Courier New"&gt;}&lt;br /&gt;&lt;/font&gt;&lt;font size="2" face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;When you run it you get the following output:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;About to complete the main thread&lt;br /&gt;About to complete the worker thread's transaction scope&lt;br /&gt;Completing the dependent clone&lt;br /&gt;Transaction Completed&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="1"&gt;&lt;font size="2" face="Arial"&gt;What is happening is that a DependentTransaction marked to “block commit until it is complete“ is created in the main thread, and then handed off ot the created thread.  The main thread then immediately begins transaction commitment, which stalls awaiting the completion of the DependentTransaction (if you're really interested in internals, this uses what MSDTC called “Phase 0”).  In the worker thread, the transaction continues, and eventually signals completion of the DependentTransaction.  As soon as that happens, the commit processing started on the original thread wakes up and finishes.&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>14</thr:total></entry><entry><id>7958</id><published>2005-05-02T06:58:00.0-05:00</published><updated>2005-05-02T06:58:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Jim,
&lt;br /&gt;
&lt;br /&gt;     Do you find it odd that you have to call complete twice in the thread procedure?  Once on the TransactionScope and one on the dependent clone of the transaction?  Don't you think that the scope, if taking a dependent transaction in the constructor, should commit this for you?  Logically, I can't see why the two would be separated.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>7996</id><published>2005-05-03T06:39:00.0-05:00</published><updated>2005-05-03T06:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Nick,
&lt;br /&gt;
&lt;br /&gt;This is an area that we spent a lot of time discussing.  There were a number of scenarios that we wanted to support efficiently, and we wanted to limit the number of different rules that a developer would need to remember.  Note that we also considered this a somewhat more advanced feature.
&lt;br /&gt;
&lt;br /&gt;Some of the scenarios that we wanted to support centered around how an application environment would use it.  We had in mind a sequence that looked like:
&lt;br /&gt;
&lt;br /&gt;	create the transaction
&lt;br /&gt;	&amp;lt;do some internal work that isn't part of the transaction&amp;gt;
&lt;br /&gt;	start a transaction scope
&lt;br /&gt;		&amp;lt;call user application code&amp;gt;
&lt;br /&gt;	complete the transaction scope
&lt;br /&gt;
&lt;br /&gt;	... iterate as necessary
&lt;br /&gt;
&lt;br /&gt;	&amp;lt;do internal cleanup&amp;gt;
&lt;br /&gt;	commit the transaction
&lt;br /&gt;
&lt;br /&gt;There's an equivalent variant for the cases where the transaction is not getting created, but rather is the target for a propagated transaction.  In the first case, the environment creates a CommittableTransaction, in the second a DependentTransaction.
&lt;br /&gt;
&lt;br /&gt;To support this, we wanted, as much as possible, for the application environment to be able to use the same pattern for both cases.  We also wanted to do so with a minimum of generated garbage (so as few objects as we could).  Finally, we want to support this when the iteration involved an internal state machine, and so wasn't as amenable to using a single outer scope, with inner scopes suppressing the transaction during for the internal work.
&lt;br /&gt;
&lt;br /&gt;All these led us to decide that a transaction scope is responsible for controlling the ambient state, but that it does not assume total control of a transaction object passed to it.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>9620</id><published>2005-05-29T08:01:00.0-05:00</published><updated>2005-05-29T08:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Hi,
&lt;br /&gt;
&lt;br /&gt;Good intoroduction to a great stuff.However i ve few doubts that is what if the spawn thread is not working on timeout mechanism and it never returns?Is n't it produce contention ?
&lt;br /&gt;
&lt;br /&gt;second how the transaction context get passed between threads?
&lt;br /&gt;
&lt;br /&gt;thx
&lt;br /&gt;shreeman
&lt;br /&gt;sndshreeman@rediffmail.com
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>10542</id><published>2005-06-06T07:32:00.0-05:00</published><updated>2005-06-06T07:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Shreeman,
&lt;br /&gt;
&lt;br /&gt;If I can paraphrase your questions:
&lt;br /&gt;
&lt;br /&gt;- What if the new thread doesn't complete (or for that matter, what if any consumer of DependentClone with BlockCommitUntilComplete doesn't complete)?
&lt;br /&gt;
&lt;br /&gt;Both cases are essentially equivalent to any application that fails to finish its transaction work, and therefore doesn't reach a commit decision point.  This should result in the transaction timing out, unless the user has done something specific with their configuration to disable all transaction timeouts.
&lt;br /&gt;
&lt;br /&gt;Put another way, you should think about the BlockCommitUntilComplete feature as helping simplify the application code by allowing it to avoid an exploit resynchronization before intiating commit.
&lt;br /&gt;
&lt;br /&gt;- What does this do for contention?
&lt;br /&gt;
&lt;br /&gt;I don't think it does anything one way or another.  The feature simply allows you to more easily express a worker thread pattern.  All the behaviors in that pattern remain the same.
&lt;br /&gt;
&lt;br /&gt;- How does the transaction get passed between threads?
&lt;br /&gt;
&lt;br /&gt;In the Main method above, it creates a DependentTransaction, and then simply passes that reference to the worker thread.  That transaction then becomes current on the new thread when it is passed into the TransactionScope constructor in the worker method.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>11355</id><published>2005-06-16T07:14:00.0-05:00</published><updated>2005-06-16T07:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Hi Jim
&lt;br /&gt;
&lt;br /&gt;thanks for the explanation thus we ve the scope extended to multiple thread and the transaction time out becomes handful here if the spwn thread didn't return and didn't commit until it get the complete signal fromt he spawn thread.
&lt;br /&gt;I had got the doubt generated  as i din't found any action you ve taken aftre calling new thread that is can't we give the signal back to the main thread here that new thread transaction is complete (any sort of callback...) .In this scenario does n't the main thread wait until the spawn thread complete to commit the transaction?(sync)can we ve a publisher subscriber scenario here too?
&lt;br /&gt;upto how many thread can we pass the dependenttransaction object does this not limit to threadpool(though practically that seems not happen)?
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt; Also the dependenttransaction object is part of com+ itself not of msdtc but can we simulate the functionlity of 2 phase commit out msdtc to the framework with any other class?
&lt;br /&gt;
&lt;br /&gt;thx
&lt;br /&gt;shreeman
&lt;br /&gt;sndshreeman@rediffmail.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>11403</id><published>2005-06-17T07:09:00.0-05:00</published><updated>2005-06-17T07:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Shreeman,
&lt;br /&gt;
&lt;br /&gt;You're correct that the application code does not include any explicit notifications back to the main thread.  That is effectively done from inside DependentTransaction.  As a result, dispose of the TransactionScope will wait until the transaction completes -- either because all the DependentTransactions have completed, or because the transaction has timed out.
&lt;br /&gt;
&lt;br /&gt;There's no inherent limit in the number of DependentTransaction instances that you can create.  You just need to make sure to have one for each thread that you are synchronizing.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;With your last question, I'm not quite sure what you're asking.  System.Transactions is not part of COM+, although it is used by System.EnterpriseServices, which is effectively the managed interfaces for COM+.  If you're asking if this feature can be used by any managed program, the answer is yes.
&lt;br /&gt;
&lt;br /&gt;If you're asking if DependentTransaction can be built out of the rest of the System.Transactions classes and interfaces, then again, the answer is pretty much yes.  It can be largely mimiced through the use of a volatile resource manager that has EnlistDuringPrepareRequired set to true.  [There are some failure cases that require some thought to get right, btw]
&lt;br /&gt;
&lt;br /&gt;If you're asking if you can do something like this for unmanaged code, the answer for DependentTransaction is yes, through the use of a Phase0 enlistment.  However, System.Transactions has done nothing to simplify unmanaged transactions and the OLE-TX interfaces.
&lt;br /&gt;
&lt;br /&gt;I'm not sure if you're asking any of these questions.  If this reply doesn't help, could you please expand on your question?
&lt;br /&gt;
&lt;br /&gt;Thanks,
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>11463</id><published>2005-06-19T06:12:00.0-05:00</published><updated>2005-06-19T06:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Hi Jim,
&lt;br /&gt;Thanks for the NICE explnation and it clear many of my doubts.
&lt;br /&gt;Also sometimes typo mistakes also helps in gaining a lot as i forgot to ask can we use dependent transaction out of ES?? and u d replied.
&lt;br /&gt;
&lt;br /&gt;As per my last question is concerned there was alittle typo mistake..that what i was intend to ask was upto the point when we are dealing with a single RM we can enlist any no. of connection into our transaction scope(this what i typed wrong as com+) but when we ve more then one RM the transaction is promoted to msdtc.
&lt;br /&gt;
&lt;br /&gt;My question was do we ve any option system.transaction (though i didn't found yet..)to implement the core msdtc functionality in c#???
&lt;br /&gt;
&lt;br /&gt;Today the last question is how the transaction scope related to the appdomain per db/user session scenario in yukon..
&lt;br /&gt;
&lt;br /&gt;If possible please post how the dependent transaction can be used out of ES .
&lt;br /&gt;
&lt;br /&gt;Thanks
&lt;br /&gt;shreeman</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>12615</id><published>2005-06-27T11:37:00.0-05:00</published><updated>2005-06-27T11:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Shreeman,
&lt;br /&gt;
&lt;br /&gt;Sorry for the delay in getting back to you.
&lt;br /&gt;
&lt;br /&gt;You asked if DependentTransaction can be used from within System.EnterpriseServices.  As far as System.Transactions is concerned, there's no issue.  You can just get it by calling Transaction.Current.CreateDependentTransaction.
&lt;br /&gt;
&lt;br /&gt;However, EnterpriseServices does have a strong opinion about user threads, so you'd need to be extremely careful about any threads you create.  This isn't an issue with DependentTransaction, but a more general one about a user component fitting in with EnterpriseServices expectations.
&lt;br /&gt;
&lt;br /&gt;You also asked if there's any option for an implementation of the core MSDTC functionality in C#.  There are a couple of different ways of interpreting that question.  
&lt;br /&gt;
&lt;br /&gt;If I look at System.Transactions from the outside, it has the general capabilities of MSDTC, and, in fact transparently promotes to MSDTC as necessary.  From that point of view, System.Transactions does offer the core functionality of MSDTC.
&lt;br /&gt;
&lt;br /&gt;If, however, I look at the internal structure, it is obvious that the full functionality of MSDTC is not fully replicated in the System.Transactions managed code.  That is intentional.  We made a decision to keep the overall stack with as little overlap as possible, and to have the layers integrate.  Our goal has been for there to be one common stack, which applications and resource managers can plug in to -- in other words, we expressly wanted to support managed applications that invoke unmanaged resources or other unmanaged application (i.e. COM+) components.  By leveraging the existing MSDTC services, we were able to both achieve this integration and limit the amount of redundant code designed into the stack.
&lt;br /&gt;
&lt;br /&gt;There are a few features that are not available from managed code -- direct XA support being the most obvious.  There are also some features in managed code that are not yet available in unmanaged code -- DependentTransactions and lightweight transactions being the most obvious.  I would expect that we'd try to resolve these differences over time.
&lt;br /&gt;
&lt;br /&gt;Finally, on the question of per-db/appdomain sessions with Yukon, I'm not quite sure what you're asking.  Can you help me understand what you're looking for better?
&lt;br /&gt;
&lt;br /&gt;Thanks,
&lt;br /&gt;Jim.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>14779</id><published>2005-09-12T15:55:00.0-05:00</published><updated>2005-09-12T15:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transazioni in .NET 2.0</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>21393</id><published>2006-04-09T15:28:00.0-05:00</published><updated>2006-04-09T15:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Phase0 in .Net System.Transactions</title><content type="html">In a previous post (http://blogs.msdn.com/florinlazar/archive/2006/01/29/518956.aspx) I talked about...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>45967</id><published>2007-02-03T00:04:00.0-05:00</published><updated>2007-02-03T00:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Hi, this message is quite old but still I'd like to try to throw in another question:
&lt;br /&gt;
&lt;br /&gt;In the main thread I open a database session (SQL Server), insert a record, Transaction will commit this when it completes.
&lt;br /&gt;
&lt;br /&gt;The thread opens another database session within the same database connection. This way I can query the uncommited record.
&lt;br /&gt;
&lt;br /&gt;However when the thread opens the database connection after the main thread has called s.Complete() (easily achieved by Thread.Sleep(1000)) I get the following exception:
&lt;br /&gt;
&lt;br /&gt;System.Data.SqlClient.SqlException: Distributed transaction completed. Either enlist this session in a new transaction or the NULL transaction.
&lt;br /&gt;   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
&lt;br /&gt;   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
&lt;br /&gt;   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj)
&lt;br /&gt;   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
&lt;br /&gt;   at System.Data.SqlClient.SqlDataReader.ConsumeMetaData()
&lt;br /&gt;   at System.Data.SqlClient.SqlDataReader.get_MetaData()
&lt;br /&gt;   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
&lt;br /&gt;   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
&lt;br /&gt;   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
&lt;br /&gt;   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
&lt;br /&gt;   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
&lt;br /&gt;   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
&lt;br /&gt;   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
&lt;br /&gt;   at NHibernate.Impl.BatcherImpl.ExecuteReader(IDbCommand cmd) in D:\devtest\nhibernate-svn\nhibernate\src\NHibernate\Impl\BatcherImpl.cs:line 181
&lt;br /&gt;   at NHibernate.Loader.Loader.GetResultSet(IDbCommand st, RowSelection selection, ISessionImplementor session) in D:\devtest\nhibernate-svn\nhibernate\src\NHibernate\Loader\Loader.cs:line 1378
&lt;br /&gt;
&lt;br /&gt;Anything I can do to prevent this? I understand that I could let the main thread wait using waitHandles but I thought that was being taken care of by using the DependentTransaction.
&lt;br /&gt;
&lt;br /&gt;Is this a flaw in the DependentTransaction mechanism or in the ADO implementation for SQL Server? Or is it me ;-)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>46031</id><published>2007-02-11T05:51:00.0-05:00</published><updated>2007-02-11T05:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Phase0 in .Net System.Transactions</title><content type="html">In a previous post ( http://blogs.msdn.com/florinlazar/archive/2006/01/29/518956.aspx ) I talked about</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>50797</id><published>2008-04-28T04:28:00.0-05:00</published><updated>2008-04-28T04:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Well I think that is not working.
&lt;br /&gt;
&lt;br /&gt;I made a litte test with two database connections. But very simila to this Example
&lt;br /&gt;
&lt;br /&gt;The Problem is as soon as Complete() is called in the Main TransactionScope every ExecuteNonQuery command gives an "Distributed transaction completed. Either enlist this session in a new transaction or the NULL transaction.
&lt;br /&gt;
&lt;br /&gt;A real Problem is that that eception is not catched by an try/catch in the main funcion. Insted the hole application crashes the bad way.
&lt;br /&gt;
&lt;br /&gt;simplified code:
&lt;br /&gt;Main:
&lt;br /&gt;try
&lt;br /&gt;{
&lt;br /&gt;   //Open two connections
&lt;br /&gt;   using(TransactionScope ts = new TransactionScope(TransactionScopeOption.Requred, TimeSpan.MaxValue)
&lt;br /&gt;   {
&lt;br /&gt;      ThreadPool.QueueUserWorkItem(worker1, Transaction.Current.DependentClone(DependentCloneOption.BlockCommitUntilComplete));
&lt;br /&gt;      ThreadPool.QueueUserWorkItem(worker2, Transaction.Current.DependentClone(DependentCloneOption.BlockCommitUntilComplete));
&lt;br /&gt;      ts.Complete();
&lt;br /&gt;   }
&lt;br /&gt;   //Close the connections
&lt;br /&gt;}
&lt;br /&gt;catch(Exception(ex)
&lt;br /&gt;{
&lt;br /&gt;   //Write Exception
&lt;br /&gt;}
&lt;br /&gt;
&lt;br /&gt;Worker1:
&lt;br /&gt;DepednentTransaction dtx = (DependendTransaction)ar;
&lt;br /&gt;using(TrsansactionScope ts = new TransactionScope(dtx))
&lt;br /&gt;{
&lt;br /&gt;   Thread.Sleep(9000);
&lt;br /&gt;ts.Complete();
&lt;br /&gt;}
&lt;br /&gt;dtx.Complete();
&lt;br /&gt;
&lt;br /&gt;Worker2:
&lt;br /&gt;DepednentTransaction dtx = (DependendTransaction)ar;
&lt;br /&gt;using(TrsansactionScope ts = new TransactionScope(dtx))
&lt;br /&gt;{
&lt;br /&gt;   Thread.Sleep(TimeSpan.FromSeconds(10));
&lt;br /&gt;   //Make An Insert using one of the connections
&lt;br /&gt;ts.Complete();
&lt;br /&gt;}
&lt;br /&gt;dtx.Complete();</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>50835</id><published>2008-05-04T06:32:00.0-05:00</published><updated>2008-05-04T06:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Multithreading with DependentTransaction</title><content type="html">Michael,
&lt;br /&gt;
&lt;br /&gt;Sorry for not replying earlier.  It looks like you have taken this to http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=3260331&amp;amp;SiteID=1, which is a good place to ask about the current product.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7923"></thr:in-reply-to></entry><entry><id>9749</id><published>2005-06-04T16:51:00.0-05:00</published><updated>2005-06-04T16:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Tech Ed next week</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;If you are going, I hope that you get a chance to attend some of the Indigo presentations.  There are also two talks that involve transactions that I've heard about: one by Clemens Vasters and one by Juval Lowry.  I would expect them both to be interesting.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Also, our team will have three people at Tech Ed: Raphael Renous, our program manager; Mike Clark, one of our dev leads, and who drove the implementation of System.Transactions; and Florin Lazar, who is one of our test leads (and also has a really good &lt;a href="http://blogs.msdn.com/florinlazar/default.aspx"&gt;blog&lt;/a&gt;).  These are all great people, and I hope you get a chance to talk to them next week.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Also, I'd personally love to hear your reactions to the transaction content at the conference: any thoughts or ideas on areas where we could improve how we get the information out would be great.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>10856</id><published>2005-06-10T16:19:00.0-05:00</published><updated>2005-06-10T16:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Feeding the hardware monkey</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;Like a lot of people in our industry, I have a certain acquisitiveness with hardware -- I do like new toys every now and then.  I'll admit that compared with many of the people I know, it isn't very high.  I don' t need to upgrade my home machine very often.  For that matter, I have _a_ home machine for myself.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;But every now and then, new hardware is just, well, needed.  In the last six months I've gotten two new bits of hardware that I really like.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;For my personal use, I bought a Samsung color laserprinter.  I really like it.  The print quality has been very good, I've not had any problems with it, and the price was surprisingly low.  I'd really missed having production quality printing.  I just wish the prices had been like this when I had my own company...&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;For work, my laptop expired and it was time to renew.  I've just started using an Acer Ferrari 3400.  I love the speed, the clarity and responsiveness of the screen (and its 64 bit, which is a nice extra bonus).  My only two 'complaints' are that the cover looks so shiny that I take better care of it than any prior laptop, and its a bit heavier than the one it replaced.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;I guess these will hold me for a few more months ;)&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>11451</id><published>2005-06-18T22:14:00.0-05:00</published><updated>2005-06-18T22:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Understanding nested transaction scopes</title><content type="html">&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;The TransactionScope object is central to the System.Transactions model.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;At its simplest, it provides a very easy mechanism for demarcating transactions in the application -- i.e.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope s = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope ())&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt;…&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt;s.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;However, hidden in that is the use of TransactionScopeOption, and the ability to nest TransactionScope regions.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is one area that I've gotten a number of questions on, including the one that showed up in the &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/04/28/7843.aspx"&gt;Suggestion Box&lt;/a&gt;.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;Often the first question is whether or not these are 'nested transactions', in which partial areas of the overall transaction may be rolled back, updated isolated between concurrent subtransactions, and still result in a single commit point for the overall transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;No, nested TransactionScopes in .Net 2.0 do not provide that.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;That then leads into questions about what nesting TransactionScopes mean.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;When we thought about this mechanism, we realized that there are two questions that an application developer has at the point that they would be creating a TransactionScope:&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 1in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;How does the contained code handle errors: does it require a transaction rollback, does it assume that it does the compensation itself?&lt;br /&gt;&lt;/span&gt;
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;How does the contained code relate to its caller: can it reasonably participate in a caller's transaction, or does it require its own?&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;This converts into the three TransactionScopeOption settings:&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 1in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;Required: the contained code depends on a transaction for atomicity, isolation, and compensation, and could be part of a broader transaction.&lt;/span&gt; 
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;RequiresNew: the contained code depends on a transaction, but must be independently committed or rolled back.&lt;/span&gt; 
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;Suppress: the contained code performs its own compensation, so must not be part of a transaction.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: Verdana; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;The first setting is the default, under the assumption that if you are creating a TransactionScope, you probably want a transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In that case, the normal situation is one where the operation you're about to do can be reasonably integrated into a transaction that already active.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;The second setting is for cases where the contained code block does require a transaction for its consistency, and provides a feature that demands that it be separate from any transaction that might already be active.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;One typical example would be a function that provides activity logging to, say, a database.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It may be implemented such that it required a transaction to provide consistency, but it couldn't accept an outer rollback to undo the record of the attempted activity.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;The final setting, Suppress, handles case where the contained code needs to be sure that it is not executing as part of any transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is fairly uncommon for a local operations -- the only real case for this would be if the contained code was designed to handle its own compensation, yet used recoverable resources, such as SQL, to do its actions.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;On the other hand, the one case I can see it normally being useful is if the code is calling a remote operation, either through COM+ or Indigo, that accepts an incoming transaction.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;In that case, the caller could either suppress the current transaction, or create a new one. The latter potentially has a much different performance profile, since the new transaction would still be a distributed one.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The way to avoid that performance overhead, and retain the&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;feature that the called remote operation executed outside the current transaction, would be to suppress any transaction around the outbound call.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;While this helps explain the TransactionScope creation options, the other big question is what does Complete mean?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;When we show a standalone example, it is easy to confuse Complete with Commit -- after all, since the TransactionScope instance is the only one involved, the transaction does commit when it is disposed.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;However, the reality is slightly more subtle.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Complete means just what the name suggests -- that the code within the TransactionScope has completed (successfully) all the operations it intended to do as part of the transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Note that this is also why you can't call Complete twice.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;To do so would mean that at least one of the two calls &lt;span style="FONT-WEIGHT: bold"&gt;wasn't&lt;/span&gt; the last intended operation.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;When a TransactionScope is disposed it first looks to see if it was completed successfully.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If it was not, the transaction is immediately rolled back.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If it was, and this was the TransactionScope that created the transaction in the first place, the transaction is committed.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Finally, in both cases, the current transaction is replaced with the value that was current when the TransactionScope was created.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;Thus we have, for success:&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// no transaction is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="COLOR: blue"&gt;using&lt;/span&gt; (TransactionScope s = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope ())&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope t = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope &lt;br /&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;(TransactionScopeOption.RequiresNew))&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;// transaction 'b' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;t.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;} &lt;span style="COLOR: green"&gt;// the transaction from 's' is put into Current.&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope u = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope ())&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;u.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;} &lt;span style="COLOR: green"&gt;// the transaction from 's' is put into Current.&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;s.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt;// 'a' commits at this point&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// no transaction is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: Verdana; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;For a failure case we have:&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// no transaction is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope s = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope ())&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope t = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope &lt;br /&gt;&lt;span style="mso-spacerun: yes"&gt;                  &lt;/span&gt;TransactionScopeOption.RequiresNew))&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;// transaction 'b' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;t.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: Verdana; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: blue"&gt;using&lt;/span&gt; (TransactionScope u = &lt;span style="COLOR: blue"&gt;new &lt;/span&gt;TransactionScope ())&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;// transaction 'a' is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;&lt;span style="COLOR: green"&gt;//u.Complete ();&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;} &lt;span style="COLOR: green"&gt;// 'a' rolls back here, &lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;      &lt;/span&gt;//the transaction from 's' is put into Current.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// transaction 'a' is current, but aborted here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;s.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;}&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;&lt;span style="COLOR: green"&gt;// 'a' is already aborted, so is just removed at this point&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// no transaction is active here&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: Verdana; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;In both cases, TransactionScope t is for a completely different transaction from scopes s &amp;amp; u.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In the first case, the transaction behind scope u does not commit until its originating scope (scope s) completes.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;In the second case scope u ends without issuing a Complete, so it is aborted at that point. However, when scope s is restored as the current scope, the aborted transaction is made current.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This ensures that any later activity in scope s is attempted under the correct transaction.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>17</thr:total></entry><entry><id>11485</id><published>2005-06-19T22:35:00.0-05:00</published><updated>2005-06-19T22:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Link Listing - June 19, 2005</title><content type="html">Link Listing - June 19, 2005</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>11614</id><published>2005-06-21T14:01:00.0-05:00</published><updated>2005-06-21T14:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">The naming of the transactions in the code and comments is confusing. What is the correspondence between transaction a as specified in the comments and the name of actual the transaction instances, e.g. s? </content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>11615</id><published>2005-06-21T14:14:00.0-05:00</published><updated>2005-06-21T14:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">I think part of the confusion may arise because a TransactionScope is transacted region, rather than a transaction.  This isn't overly obvious for non-nested cases, since a transaction scope that first created the transaction implicitly commits the transaction as part of completing that transaction scope.  However, in the nested case the difference between the transaction lifetime and nested transaction scope lifetimes becomes much more apparent.
&lt;br /&gt;
&lt;br /&gt;So, in the examples, transaction 'a' is created as part of creating TransactionScope 's'.  It is suspended by the creation of TransactionScope 't' (which creates transaction 'b').  When 't' ends, transaction 'b' is committed, and TransactionScope 's' is restored, which makes transaction 'a' active again as a consequence.
&lt;br /&gt;
&lt;br /&gt;When TransactionScope 'u' is created, transaction 'a' remains active because 'u' is also using it.  When 'u' ends, either successfully or unsuccessfully, transaction scope 's' is restored, which again makes transaction 'a' active as a consequence -- regardless of whether or not 'a' has been aborted.
&lt;br /&gt;
&lt;br /&gt;Finally, when 's', which originally created transaction 'a' completes, transaction 'a' is now no longer active -- and, in fact, will have either committed or aborted.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>12778</id><published>2005-06-30T05:08:00.0-05:00</published><updated>2005-06-30T05:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">nested transavtion model</title><content type="html">this site is help ful</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>14778</id><published>2005-09-12T15:55:00.0-05:00</published><updated>2005-09-12T15:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transazioni in .NET 2.0</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>15644</id><published>2005-10-18T07:48:00.0-05:00</published><updated>2005-10-18T07:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Trying this ODP and Beta 2 and complete doesn't matter, transaction is saved. Any idea what is sticky here?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>15663</id><published>2005-10-18T08:40:00.0-05:00</published><updated>2005-10-18T08:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Sanjay,
&lt;br /&gt;
&lt;br /&gt;I'm not sure what you're doing in your test.  Can you send me your source example via mail and I'll take a look at it.  That's probably the best way to figure it out.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>17977</id><published>2006-01-12T07:18:00.0-05:00</published><updated>2006-01-12T07:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Hi Jim. Very useful this page.
&lt;br /&gt;But I am quite confused on the second example.
&lt;br /&gt;Do you mean that because the transaction from 'u' which I would call 'c' has the u.Complete (); line commented and then rolled back automatically the transaction from 's' (the external one) transaction 'a' is rolled back as well? This means that the s.Complete (); is never executed? Or that means that altough it is executed the transaction 'a' (from s) is not commited? 
&lt;br /&gt;As far as I understood transaction 'a' (from scope 's') and 'c' (from scope 'u') will either committed (first example) or aborted (second example). 
&lt;br /&gt;Is that correct?
&lt;br /&gt;
&lt;br /&gt;Thanks
&lt;br /&gt;
&lt;br /&gt;Rosario
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>17993</id><published>2006-01-13T10:00:00.0-05:00</published><updated>2006-01-13T10:00:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Rosario,
&lt;br /&gt;
&lt;br /&gt;The key to the second example is that TransactionScope 'u' does not create a new transaction.  It inherits and uses transaction 'a' from the outer TransactionScope (TransactionScope 's').
&lt;br /&gt;
&lt;br /&gt;That means that when TransactionScope 'u' exits its using block without calling Complete, transaction 'a' is aborted (as this is the transaction that TransactionScope 'u' was handling).
&lt;br /&gt;
&lt;br /&gt;Does this help?
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>18314</id><published>2006-01-27T05:30:00.0-05:00</published><updated>2006-01-27T05:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Jim, 
&lt;br /&gt;
&lt;br /&gt;OK thank you. I understand now what happen in the second example. But what happen in the first example if the transaction 'b' (scope 't') is not completed (aborted)? I think, as far as I understood, that because it is RequiresNew which means that the transaction independently is committed or rolled back this has no effect on the external transaction 'a', is that correct? 
&lt;br /&gt;This page would be more complete if you explained what happens to the transaction 'c' scope 'u' if the transaction 'a' scope 's' is rolled back and also if only the transaction 'b' scope 't' is rolled back, although I think this quite obvious.
&lt;br /&gt;
&lt;br /&gt;Rosario
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>31929</id><published>2006-07-14T22:35:00.0-05:00</published><updated>2006-07-14T22:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Thanks for writing this helpful article</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>48380</id><published>2007-09-05T23:56:00.0-05:00</published><updated>2007-09-05T23:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">I will make a misunderstand that in the sencond example:Does it mean the transaction 'a' will abort,and the transaction 'b' (transactionscope 'u') will commit ? </content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>48383</id><published>2007-09-06T02:15:00.0-05:00</published><updated>2007-09-06T02:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">I know,thanks for Jim's article,it's very helpful</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>56105</id><published>2009-01-09T00:36:01.0-05:00</published><updated>2009-01-09T00:36:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Hi, the acticle is much helpful. Thanks.

But I am still confused with the second example. 
will transaction 'b'(transactionscope 'u') be commited successfully?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>56109</id><published>2009-01-09T09:19:39.0-05:00</published><updated>2009-01-09T09:19:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">In the second example transaction 'b' is created by TransactionScope 't', and committed at the end of that TransactionScope.  

TransactionScopes  's' &amp;amp; 'u' operate on transaction 'a', which aborts at the end of TransactionScope 'u'.

Jim.</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>60285</id><published>2009-04-14T09:59:52.0-05:00</published><updated>2009-04-14T09:59:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Did you "think about" and "realize" or simply regurgitate the transaction scopes that have been around for decades, and prominently so within Java and later .NET? Corollary: skip the example if you aren't willing to bother proof reading your sloppy, confusing comments vis-a-vis names of transactions. Jeezuz. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>62045</id><published>2009-05-01T08:31:58.0-05:00</published><updated>2009-05-01T08:31:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Understanding nested transaction scopes</title><content type="html">Rick,  I assume that you're referring to the declarative transaction attributes that originated in MTS and later moved to Java and .Net?  Yes, I'm well aware of them, and have been for years.  The MTS team certainly introduced a much better assembly construct than transaction monitors had had previously.

However, while you spotted that there's a relationship to declarative transactions, I think you may have missed a couple of notable differences between those features and the TransactionScope class.

First, TransactionScope is about bringing declarative transaction expressiveness to any imperative .Net code.  If you look at MTS, .Net, or Java, the declarative transaction support exists outside of the imperative code.  It is a function of the container, and can only be expressed at entry points into the container.  If a programmer just wants to demarcate some imperative code they have to use a different model (e.g. MSDTC, XA, or some variant thereof).  And those models do not support the composition characteristics found in declarative transactions.

Second, the declarative transactions found in MTS, Java, and .Net do not represent the semantics that I called out in my post.  Specifically, they do not provide the first one ("How does the contained code handle errors: does it require a transaction rollback, does it assume that it does the compensation itself?").  This is a structural limitation --the attribution is available to the system assembler, which means that the attribution does not allow a developer to securely state the atomicity execution requirements of the code.  Instead, it allows the system assembler to state the atomicity environment that they will provide to the code.

[I do realize that in, e.g., JEE 5 you can use attributes placed in the source, but use of these just reverses the problem -- that you _do_ want the system assembler to be able to specify whether a transaction can flow into an exported interface, and just putting it all in the code removes that ability.

This, btw, is why the WCF attribution does not look like that found in MTS, Java, or .Net.  The attribution available to the system assembler is about flow, the attribution reserved solely to the developer is about the atomicity requirements of the code.  But I digress.]

Hope this helps,
Jim.
</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="11451"></thr:in-reply-to></entry><entry><id>13806</id><published>2005-08-02T06:52:00.0-05:00</published><updated>2005-08-02T06:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PDC 2005 is coming!</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;The next PDC is coming in September.  It looks to have a lot of great content: I could do the normal song on all the great stuff on Windows Vista (nee' Longhorn), SQL, Visual Studio, Indigo, Avalon, etc.  However, I won't.  I'd hope that you'd expect that we'd put together a conference with a huge amount of solid content, and that cheerleading from me would be unnecessary.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;What I will say instead is that there will be some great talks on Indigo (the framework built by the overall group I'm in), that presently I'm looking forward to a really cool talk on what we're doing around transactions since .Net 2.0 (i.e. Longhorn and Indigo), including both the transaction management changes and the integration of the transacted file and registry services (currently listed as &lt;font color="#000080"&gt;Windows Vista ("Longhorn"): Improving Reliability with the New System.Transactions Classes, File System and Registry Transactions&lt;/font&gt;).&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Finally, I'm currently scheduled to attend and should be copresenting the transactions talk.  I'll be there the full PDC, and am really looking forward to meeting and talking to people while I'm there.  I hope that if you follow this blog, and are attending the PDC, that you look me up.  I think we've been doing some great work, and look forward to the chance to see how it connects -- and where we should improve.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>14220</id><published>2005-08-16T00:07:00.0-05:00</published><updated>2005-08-16T00:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Intermission</title><content type="html">I suspect that I have managed to set a record for the longest silence after an initial blog post. Except,...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13806"></thr:in-reply-to></entry><entry><id>13807</id><published>2005-08-02T07:02:00.0-05:00</published><updated>2005-08-02T07:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Just back from vacation</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;Partly this is my excuse for not blogging for a while (the pre-going-on-vacation bulge in work, the vacation itself, and now the just-back-from-vacation bulge).  But, we also had a great time, and I wanted to share :)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;We are just back from a stay in Zurich.  My wife and I had been there some 18 years ago, and really liked the area: the city, the countryside, everything.  We always said we'd go back someday again.  After a lot longer than we'd planned, we finally did it.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Zurich is still great: we loved wandering about the old town, the museums, and being out on the lake.  Furthermore, window shopping on the Bahnhofstrasse is still an interesting experience for someone brought up in a midwest farming town ;).  They also have an event going on where they got artists to do up some 600+ teddy bear statues (normally about 5' high), which are placed around the town.  A lot of them were pretty inventive (there's a reproduction of the Abbey Road cover with 4 bears down up as the Beatles), and there were a &lt;strong&gt;lot&lt;/strong&gt; of bad puns in the names.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;We also got out of town (again, doing the tourist thing), and visited Lucerne, including a trip up Mt Pilatus, and then out to the Appenzell, including a trip up Santis.  It was a fantastic few days away.  Even the weather held for pretty much our whole trip.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Now, back to work...&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>2</thr:total></entry><entry><id>13813</id><published>2005-08-02T10:22:00.0-05:00</published><updated>2005-08-02T10:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Just back from vacation</title><content type="html">Bahnhofstrasse, right? ;)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13807"></thr:in-reply-to></entry><entry><id>13815</id><published>2005-08-02T10:27:00.0-05:00</published><updated>2005-08-02T10:27:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Just back from vacation</title><content type="html">Yeah, thanks for pointing that out.  I've fixed it...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13807"></thr:in-reply-to></entry><entry><id>14784</id><published>2005-09-12T14:15:00.0-05:00</published><updated>2005-09-12T14:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Some thoughts on interviewing at Microsoft</title><content type="html">&lt;font size="2" face="Arial"&gt;Over the past 2 1/2 years that I've been at Microsoft I've been in a steady stream of interviews.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;(The overall group that I'm in is large enough that we're pretty much always on the lookout for great people).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've been thinking recently about both my interview, and the interviews that I've been involved with since.&lt;/font&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;During this time, I've noticed a few common themes.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;No one should take this as any sort of guidance -- general or otherwise.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is simply a few things that I wanted the chance to bring out.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Note that like other interviewers that I've talked to, I want you to be successful -- both in the interview and in your job.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Each of the items below are 'survival traits'.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They are aspects of the interviewing process that reflect (IMO) behavior that makes it much more likely that a person will be successful at Microsoft.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;First, a fairly obvious and common point: be interested, and take an active part, in your interview.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I know that part of what I'm always looking for is passion -- what does the person believe in?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;How strongly are they interested in what they've been doing (or what they want to be doing)?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In fact, the one piece of advice that I got before my interview was "have opinions".&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Second, know what you know and admit what you don't know.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;No one knows it all.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The question is how you act when you hit the boundary of what you do know.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Do NOT claim to be an expert at something you are not.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Third, be willing to dive into deep detail.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Especially if you've been in the industry for a few years, I'll be interested in your range -- how abstract can you go, and then how deep, and how comfortable are you in swapping between them?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'll be honest: I'll go over your CV and look for topics that we both know, and then I'll do my best to find out just how comfortable and articulate you are at that topic.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Oh, and if you're an expert at transactions we'll probably have a &lt;span style="FONT-WEIGHT: bold"&gt;GREAT&lt;/span&gt; discussion :).&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Fourth, do be prepared to code on the whiteboard, and do expect that it will be outside of the area for the job you're interviewing with.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That's on purpose.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It's not an IQ test or a gotcha test -- I'm looking to see how you react to a problem that you probably haven't thought a whole lot about, how you approach it, and how you think it through.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've used different coding problems over the last 2 1/2 years, one of which only one interviewee completed.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;There were a lot more than one that got my thumbs up though.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;These are all trying to probe at behaviors that are fairly common here.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;We routinely are pushing the edge of what we know and know how to do.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In the Indigo group, it is very common to realize that there's an area that you don't know, but someone else does, and to seek them out to collaborate on a solution.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Finally, I'm in meetings on a regular basis that will veer from high level architecture to how it looks in the code and back.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This should be enough to get started. :)&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>14934</id><published>2005-09-21T09:20:00.0-05:00</published><updated>2005-09-21T09:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Interviewing at Microsoft</title><content type="html">Jim Johnson has some thoughts on interviewing at Microsoft. Seems reasonable to me, but I'm curious to see what others think....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14784"></thr:in-reply-to></entry><entry><id>20153</id><published>2006-03-15T17:34:00.0-05:00</published><updated>2006-03-15T17:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Some thoughts on interviewing at Microsoft</title><content type="html"> Jim Johnson has posted Some thoughts on interviewing at Microsoft....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14784"></thr:in-reply-to></entry><entry><id>22921</id><published>2006-05-02T11:41:00.0-05:00</published><updated>2006-05-02T11:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Some thoughts on interviewing at Microsoft</title><content type="html">It was a pleasure to have my phone interview with you. It makes me realize that there are things to learn constantly in life (espeically in this industry). </content><author><name>Anonymous</name></author><thr:in-reply-to ref="14784"></thr:in-reply-to></entry><entry><id>14785</id><published>2005-09-12T14:38:00.0-05:00</published><updated>2005-09-12T14:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How I go about picking projects</title><content type="html">&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Over the years I've been in a number of projects that were very interesting for one reason or another.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've been involved in projects that were real breakthroughs, and also in projects where my goal was to learn something significant while building something of value.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;With very few exceptions, I'm happy with each of the efforts that I've been a part of.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;I was recently talking with a few coworkers about how each of us go about picking projects or technologies to get involved in.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I discovered that my approach was a little different from most.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Quite a few years ago (&amp;lt;cue west country accent&amp;gt; "when I were a lad…") I realized that most significant projects take 3-5 years to complete.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've not seen the timeframe vary all that much, although 'significant' certainly has.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Figuring that I didn't really get to seriously mold these projects much before 25, and that I'd be lucky to be driving projects past 55-60, I could see being in 7 to 10 'significant' efforts during my career.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Obviously, like any rule of thumb, that's a simplification.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And like any simplification, it's also mostly true…&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;That has formed the core of my thinking when I look at a project.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I literally ask myself if the goals of a project, the plausibility of its story, and the quality of the people lead me to believe that it deserves to be one of the 7 to 10.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;As time goes on the bar for 'significant' keeps going up.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This approach has rarely let me down.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The couple of times that I have ignored this process have all resulted in experiences that were painful.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;How do you approach choosing areas or projects to work in?&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>14787</id><published>2005-09-12T14:47:00.0-05:00</published><updated>2005-09-12T14:47:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Hope to see you at the PDC!</title><content type="html">&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;I'm at the PDC this week, and hoping to talk to anyone interested in what we're doing around transactions.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Although I'll be generally around the Fundamentals and Communications track lounges, there are some specific times that I certainly be at the Fundamentals lounge.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These times are:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Tuesday 5:30-9:00 PM,&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Thursday 9:30-12:30,&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Friday 8:30-2:30&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;The presentation I'm giving (with Dana Groff) is Thursday @ 5:15.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;We cover the evolution of the transaction technologies, and show how .NET 2.0 (Whidbey), WCF (Indigo), and Windows Vista (Longhorn) all work together.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;There are a lot of new features, and their integration is a very cool amplifier on all that work.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I hope that you can make it.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>14795</id><published>2005-09-13T08:58:00.0-05:00</published><updated>2005-09-13T08:58:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How to get PSPE-like behavior from a non-PSPE database</title><content type="html">&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;One of the new features in System.Transactions is the ability for the transaction manager to delegate directly to a resource manager (known as PSPE for Promotable Single Phase Enlistment). Currently, this is only supported by SQL 2005. That, then, raises the question about SQL 2000 -- does it promote directly to MSDTC, and is there anything that can be done about it?&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;It is the case that SQL 2000 will cause a promotion to MSDTC. This is because the SQL 2000 ADO.Net support does not provide a IPromotableSinglePhaseEnlistment instance, and the SQL 2000 resource manager is located in the SQL server process. Distribution to a second process is one of the actions that causes promotion.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;However, for topologies that only involve a single database connection, there is a fairly simple mechanism that can be built that provides a PSPE-like shim for databases such as SQL 2000. This sort of shim would provide a PSPE interface to System.Transactions, and directly manage a SQL-local transaction behind the scenes. Its main limitation would be that it would for a rollback if the transaction ever needed to be promoted to MSDTC.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;As an example, John Doty from our team has built such a set of classes. These are available for download at &lt;a href="http://download.microsoft.com/download/B/D/0/BD0D4D33-89DC-497E-B3F2-95871A03A5F7/PrivateTransactionAdapter.msi"&gt;&lt;span style="COLOR: blue"&gt;http://download.microsoft.com/download/B/D/0/BD0D4D33-89DC-497E-B3F2-95871A03A5F7/PrivateTransactionAdapter.msi&lt;/span&gt;&lt;/a&gt;. They are pretty heavily commented and provide both a SQL shim and a messaging shim (for use with a transactional queue resource, such as MSMQ).  Note that for SQL 2000, you need to make sure that your connection string has the phrase to prevent global auto-enlistment.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;To use this, you simply:&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;    &lt;span style="COLOR: blue"&gt;using&lt;/span&gt; (TransactionScope scope = &lt;span style="COLOR: blue"&gt;new&lt;/span&gt; TransactionScope ())&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;    {&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;        ...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;        SqlConnection conn = ...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;        DatabaseTransactionAdapter adap = new DatabaseTransactionAdapter (conn);&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;        adap.Begin ();  &lt;span style="COLOR: green"&gt;// This creates the PSPE enlistment and the underlying&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;                        // private database transaction&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;        ...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;        scope.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'courier new'; mso-outline-level: 1"&gt;    }&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;Take a look at these classes, and let me know what you think.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;UPDATE: The msi file above (&lt;a href="http://download.microsoft.com/download/B/D/0/BD0D4D33-89DC-497E-B3F2-95871A03A5F7/PrivateTransactionAdapter.msi"&gt;&lt;span style="COLOR: blue"&gt;http://download.microsoft.com/download/B/D/0/BD0D4D33-89DC-497E-B3F2-95871A03A5F7/PrivateTransactionAdapter.msi&lt;/span&gt;&lt;/a&gt;) has been updated with a couple of bugfixes.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>7</thr:total></entry><entry><id>14857</id><published>2005-09-16T05:17:00.0-05:00</published><updated>2005-09-16T05:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Some really nice posts on System.Transactions</title><content type="html">I've posted about this namespace in the past, and its no secret I think this is a great feature in .NET...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>17473</id><published>2005-12-14T23:56:00.0-05:00</published><updated>2005-12-14T23:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to get PSPE-like behavior from a non-PSPE database</title><content type="html">Hello,
&lt;br /&gt;Thank you fore a good (and short) artickle.
&lt;br /&gt;I would like to make a distributed transaction over two databases (and be able to role back if anything goes wrong). 
&lt;br /&gt;
&lt;br /&gt;Is this possible with SQL Server 2000 and this pattern? I don't like to "mess up" my code with EnterproceServices and COM+.
&lt;br /&gt;
&lt;br /&gt;I have tried to modify your code-example with two connections but I get an exeption that says "Cannot enlist in a distributed transaction", se my code below. What am I doing wrong?
&lt;br /&gt;
&lt;br /&gt;Thank you for helping me ;)
&lt;br /&gt;
&lt;br /&gt;Tomas
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;string connStrAar1Reg1 = GemFunktioner.AnslutningAarRegion(AAR_1);
&lt;br /&gt;connStrAar1Reg1 += "Enlist=false";
&lt;br /&gt;m_connAar1 = new SqlConnection(connStrAar1Reg1);
&lt;br /&gt;m_dbAdapterAar1 = new DatabaseTransactionAdapter(m_connAar1);
&lt;br /&gt;m_connAar1.Open();
&lt;br /&gt;
&lt;br /&gt;string connStrAar2Reg1 = GemFunktioner.AnslutningAarRegion(AAR_2);
&lt;br /&gt;connStrAar2Reg1 += "Enlist=false";
&lt;br /&gt;m_connAar2 = new SqlConnection(connStrAar2Reg1);
&lt;br /&gt;m_dbAdapterAar2 = new DatabaseTransactionAdapter(m_connAar2);
&lt;br /&gt;m_connAar2.Open();
&lt;br /&gt;
&lt;br /&gt;m_dbAdapterAar1.Begin();
&lt;br /&gt;m_dbAdapterAar2.Begin(); // Here I get the exeption "Cannot enlist in a distributed transaction"
&lt;br /&gt;  </content><author><name>Anonymous</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>17640</id><published>2005-12-24T14:40:00.0-05:00</published><updated>2005-12-24T14:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to get PSPE-like behavior from a non-PSPE database</title><content type="html">Tomas,
&lt;br /&gt;
&lt;br /&gt;There are a few different questions and issues here.
&lt;br /&gt;
&lt;br /&gt;First, I'd like to understand what your goals are here.  I can assume that you don't want to build a full COM+ or ES component.  Is that your issue, or is it using MSDTC as the coordinator?  What is the physical topology involved?
&lt;br /&gt;
&lt;br /&gt;My reason for asking is because, in the general case, a transaction that spans two SQL databases will end up coordinated by MSDTC (AFAIK).  You might be able to hide the actual MSDTC mechanism using linked tables and a single SQL connection, but you will still be doing a distributed MSDTC transaction in the end.
&lt;br /&gt;
&lt;br /&gt;Second, the DatabaseTransactionAdapter is limited to supporting transactions that do not promote out of PSPE.  To handle the full promotion range, you really need SQL 2005.  In your example, the call to Begin on the second adapter means that there are two resources, and the transaction needs to promote to MSDTC.  That isn't supported, and hence the error.
&lt;br /&gt;
&lt;br /&gt;To get the transaction in your code sample to work, but not require a COM+ or ES component, the simplest way is to just use SqlConnection, etc calls inside a TransactionScope, and to not bother with the DatabaseTransactionAdapter calls at all.
&lt;br /&gt;
&lt;br /&gt;hth,
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>49676</id><published>2008-01-07T03:30:00.0-05:00</published><updated>2008-01-07T03:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to get PSPE-like behavior from a non-PSPE database</title><content type="html">C# VB.NET SQL Server örnek ve kodlari
&lt;br /&gt;Ahmet Kaymaz
&lt;br /&gt;http://www.ahmetkaymaz.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>63415</id><published>2009-05-24T22:03:24.0-05:00</published><updated>2009-05-24T22:03:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to get PSPE-like behavior from a non-PSPE database</title><content type="html">It's now 4 years since this. Is there any way for that adapter not to have to own the Connection? The suggested approach works when the connections are created in one's code but no suitable for the cases where the connections are created by other resources (we're still talking about the same resource though). Is there a more ubiquaous way similar to what the transactionScope and SqlConnection work. By virtue of creating the scope, my connection knows how to take advantage of that. Can this adapter be adjusted to play a role like that? To ultimately allow programmers use one scope with as many connections within to connect to one single database without having to involve MSDTC? thanks
jeff</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>63714</id><published>2009-05-27T08:19:09.0-05:00</published><updated>2009-05-27T08:19:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to get PSPE-like behavior from a non-PSPE database</title><content type="html">I'm not on the transactions team anymore, so I'm not the best source for an update.  I've forwarded this to them, and hope that they'll give an update here.

Jim.</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>63717</id><published>2009-05-27T11:52:00.0-05:00</published><updated>2009-05-27T11:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to get PSPE-like behavior from a non-PSPE database</title><content type="html">I was pointed at http://blogs.msdn.com/adonet/archive/2008/03/26/extending-lightweight-transactions-in-sqlclient.aspx, which describes some improvements in this space for Sql 2008.

Jim.</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="14795"></thr:in-reply-to></entry><entry><id>14803</id><published>2005-09-13T19:46:00.0-05:00</published><updated>2005-09-13T19:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">&lt;font size="2" face="Arial"&gt;In a previous &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/04/27/7811.aspx"&gt;note &lt;/a&gt;I showed using System.Transactions with the Longhorn transacted file system.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That note had explicit calls to the Win32 services EnterTransactionScope and ExitTransactionScope.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That worked to help show the example, but I want to share a small class that helps simplify the application code.&lt;/font&gt; 
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;So, consider the following sample:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;using System;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;using System.Collections.Generic;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;using System.Text;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;using System.Transactions;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;namespace WindowsVistaSample&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;{&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;class ActiveKernelResourceRegion : IDisposable&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;[System.Runtime.InteropServices.DllImport("kernel32")]&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;internal static extern bool EnterTransactionScope();&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;[System.Runtime.InteropServices.DllImport("kernel32")]&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;internal static extern bool ExitTransactionScope();&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;private TransactionScope scope;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;private bool enteredKernelAmbient = false;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;private bool disposed = false;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;public ActiveKernelResourceRegion()&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;if (Transaction.Current == null)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;throw new InvalidOperationException&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                          &lt;/span&gt;("KernelAmbient requires an existing ambient transaction");&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;this.scope = new TransactionScope(TransactionScopeOption.Required,&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                                              &lt;/span&gt;new TransactionOptions(),&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                                              &lt;/span&gt;EnterpriseServicesInteropOption.Full);&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;if (!EnterTransactionScope())&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;throw new TransactionException&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                          &lt;/span&gt;("Unable to enter the kernel ambient region");&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;this.enteredKernelAmbient = true;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;public void Dispose ()&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;if (!this.disposed)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;if (this.enteredKernelAmbient)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;this.enteredKernelAmbient = false;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;if (!ExitTransactionScope())&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                        &lt;/span&gt;throw new Exception&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                                  &lt;/span&gt;("Fatal error occurred attempting " +&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                                   &lt;/span&gt;"to exit a kernel ambient region");&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;if (this.scope != null)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;this.scope.Complete();&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;this.scope.Dispose();&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                    &lt;/span&gt;this.scope = null;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;                &lt;/span&gt;this.disposed = true;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This class is used to denote a region where the file and registry operations have been attached to the ambient System.Transactions transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The following code shows using it to include a file operation within an active TransactionScope:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;using (TransactionScope scope = new TransactionScope())&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;{&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;using (new ActiveKernelResourceRegion ())&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;StreamWriter stream;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;using (stream = File.CreateText(fileName1))&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;{&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;stream.WriteLine(content);&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;        &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;     &lt;/span&gt;}&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;font size="2"&gt;&lt;span style="mso-spacerun: yes"&gt;     &lt;/span&gt;scope.Complete();&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font size="2" face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;UPDATE: This approach is no longer appropriate as of the Vista RC update.  See &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2006/08/31/36819.aspx"&gt;http://pluralsight.com/blogs/jimjohn/archive/2006/08/31/36819.aspx&lt;/a&gt; for more information.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>17</thr:total></entry><entry><id>14811</id><published>2005-09-14T06:34:00.0-05:00</published><updated>2005-09-14T06:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Some guidelines around using Transactional filesystem versus otherwise would be helpful. I am sure TxFs has it's uses and advantages but it must have some downsides as well.
&lt;br /&gt;
&lt;br /&gt;Also, EnterTransactionScope and ExitTransactionScope &amp;lt;--- are these brand new in Windows Vista? Any chance they will be backported to other versions of Windows?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>14819</id><published>2005-09-14T16:07:00.0-05:00</published><updated>2005-09-14T16:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Sahil,
&lt;br /&gt;
&lt;br /&gt;Thanks for your questions.
&lt;br /&gt;
&lt;br /&gt;The second question is the easiest.  EnterTransactionScope and ExitTransactionScope are Win32 calls that are new in Windows Vista (nee' Longhorn).  While they are part of the kernel transaction management work, they matter only because of the transactional file system and registry.  I would be very surprised if either of those features were to be backported to any earlier version of Windows.
&lt;br /&gt;
&lt;br /&gt;The first question is somewhat more complicated.  Like any use of transactions, there are tradeoffs to consider.  The fact that the data is stored in a file doesn't change the concerns you'd have with transactions anyway: how long can data be locked before it is a problem?  Can you reasonably handle in doubt transactions?  Do you have the storage for the recovery information?
&lt;br /&gt;
&lt;br /&gt;In addition, there are some specific items to think about around using the transacitonal file system.  That's a bit more complicated, though, and I'll put that into its own note -- hopefully tomorrow.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>14822</id><published>2005-09-14T19:13:00.0-05:00</published><updated>2005-09-14T19:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Thank you for your answers Jim. I've learnt a lot from your meaningful blogposts (unlike mine LOL). :)
&lt;br /&gt;
&lt;br /&gt;I'll keep my eyes peeled for your coming blogposts. :)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>14840</id><published>2005-09-15T15:07:00.0-05:00</published><updated>2005-09-15T15:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ssytem.Transactions: Judicious use of Transactional FileSystem in Windows Vista</title><content type="html">So if you've been following my blog for a while, you'd know that I have a dedicated category for System.Transactions&amp;amp;nbsp;....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>14858</id><published>2005-09-16T05:17:00.0-05:00</published><updated>2005-09-16T05:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Some really nice posts on System.Transactions</title><content type="html">I've posted about this namespace in the past, and its no secret I think this is a great feature in .NET...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>17396</id><published>2005-12-11T07:09:00.0-05:00</published><updated>2005-12-11T07:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transactional File System in Vista</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>18186</id><published>2006-01-22T12:32:00.0-05:00</published><updated>2006-01-22T12:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Jim,
&lt;br /&gt;
&lt;br /&gt;do we need to enable anything in Vista 5270 to get this working...? I always get back a 'false' when calling EnterTransactionScope.
&lt;br /&gt;Thanks.
&lt;br /&gt;
&lt;br /&gt;Christian</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>18220</id><published>2006-01-22T18:03:00.0-05:00</published><updated>2006-01-22T18:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Christian,
&lt;br /&gt;
&lt;br /&gt;I wouldn't have thought so.  I don't have a Vista machine with me just now -- I'll check on it tomorrow and get back to you.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>18232</id><published>2006-01-23T09:25:00.0-05:00</published><updated>2006-01-23T09:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Christian,
&lt;br /&gt;
&lt;br /&gt;This is not expected.  Could you send me offline the error code from GetLastError() when the EnterTransactionScope call fails, and the contents of the trace file %windir%\system32\msdtc\trace\ktmrmtrace.log, if one exists?
&lt;br /&gt;
&lt;br /&gt;Thanks,
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>18945</id><published>2006-02-20T05:20:00.0-05:00</published><updated>2006-02-20T05:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">I 've run the code on Vista 5270, no similar error with me, make sure to take the code exactly as it is here.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>26839</id><published>2006-06-06T13:07:00.0-05:00</published><updated>2006-06-06T13:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Same here with build 5384. Configuration problem perhaps?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>27093</id><published>2006-06-08T03:53:00.0-05:00</published><updated>2006-06-08T03:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">Hi,
&lt;br /&gt;
&lt;br /&gt;I have successfully run your example.
&lt;br /&gt;
&lt;br /&gt;What I am attempting to do is to opening a file once only, write into it with multiple transactions, and then close it.
&lt;br /&gt;
&lt;br /&gt;I have not been able to set this to work yet. Can it be done? OR Do I have to Open , modify and close the file all within a single transaction?
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>27097</id><published>2006-06-08T07:32:00.0-05:00</published><updated>2006-06-08T07:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">This is expected behavior.  You have to open, modify, and close the file within a single transaction.  You cannot open the file, then run a sequence of transactions against the open file, and then close it.
&lt;br /&gt;
&lt;br /&gt;Once a transaction commits or rolls back any file or registry handle that was involved in the transaction goes to a state where you can only close it.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>30225</id><published>2006-07-06T04:33:00.0-05:00</published><updated>2006-07-06T04:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">using pattern</title><content type="html">using pattern</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>45996</id><published>2007-02-07T08:11:00.0-05:00</published><updated>2007-02-07T08:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">This is very helpful code but on Vista not work :(
&lt;br /&gt;Someone have solution for this windows?
&lt;br /&gt;Thanks</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>45997</id><published>2007-02-07T08:14:00.0-05:00</published><updated>2007-02-07T08:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">There were some late changes in the TxF API.  Please look at the updated article at http://pluralsight.com/blogs/jimjohn/archive/2006/08/31/36819.aspx.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>51231</id><published>2008-06-27T03:03:01.0-05:00</published><updated>2008-06-27T03:03:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A simple class to help hooking up System.Transactions and the transacted file system in Longhorn</title><content type="html">This is interesting article, I did not it think that it yes. Interesting it knew persons about this how much. Sorry if I wrote bad there now my English is novice and I do not it write yet good.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14803"></thr:in-reply-to></entry><entry><id>14838</id><published>2005-09-15T11:12:00.0-05:00</published><updated>2005-09-15T11:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What should I think about when using transactions with the file system?</title><content type="html">&lt;font size="2" face="Arial"&gt; &lt;/font&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;In a comment Sahil Malik asked:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;"Some guidelines around using Transactional filesystem versus otherwise would be helpful. I am sure TxFs has it's uses and advantages but it must have some downsides as well."&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I interpreted this to be 'what should I think about when using the file system as part of a transaction?'.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is a pretty interesting question, and one that deserved enough space and visibility that I wanted to address it in its own note.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;As I'd mentioned in my reply:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Like any use of transactions, there are tradeoffs to consider.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The fact that the data is stored in a file doesn't change the concerns you'd have with transactions anyway: how long can data be locked before it is a problem?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Can you reasonably handle in doubt transactions?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Do you have the storage for the recovery information?&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;In other words, the introduction of a file system store into a transaction does not relax any of the design concerns that you have whenever you use transactions today.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If it unreasonable to have the data locked in a row in a database, then it is still unreasonable if it is in a file instead.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;There are also some similarities that can be a little surprising.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Today, if you move a database around between systems you generally need to have completed recovery against any distributed (as in multi-resource or network distributed) transactions before doing so.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is also likely to be true with the file system and the registry.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is the nature of things that it is easier to find that you're using multiple volumes, say, than that you're using multiple databases.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That can lead to locked, in doubt data if you move such a volume.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Finally, there are a few ways in which file systems and registry hives differ from databases, however.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;One of the more obvious is that their information may be needed earlier in system startup.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That probably isn't often the case, but if it is in yours, then that you need to think about the what happens if some of the information is indoubt.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If it needs, say, MSDTC to resolve the transaction, can you wait until MSDTC has an opportunity to start up?&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;A second one is that the registry and the file system support the read committed isolation level.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Note that the default isolation level for COM+ is Serializable.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That is the simplest isolation level to understand, but also the most pessimal for execution.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This will occasionally cause a surprise if you are depending on the differences between these two isolation modes (e.g. that reads will lock later writes in another concurrent transaction).&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>14</thr:total></entry><entry><id>14841</id><published>2005-09-15T15:07:00.0-05:00</published><updated>2005-09-15T15:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ssytem.Transactions: Judicious use of Transactional FileSystem in Windows Vista</title><content type="html">So if you've been following my blog for a while, you'd know that I have a dedicated category for System.Transactions&amp;amp;nbsp;....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>14844</id><published>2005-09-15T12:17:00.0-05:00</published><updated>2005-09-15T12:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Thank you Jim. Wow it is news to me that the default isolation level for reg and FS is ReadCommitted. Thanks for pointing that out. Also, I'm guessing TxFs works under Durable Enlistment.
&lt;br /&gt;
&lt;br /&gt;Y'know Sys.Tx opens doors of possibilities, but it is important to understand the responsibilities that come with it. 
&lt;br /&gt;
&lt;br /&gt;Recently, I was having a discussion with someone who insisted on putting DataAdapter.Fill and DataAdapter.Update within the same transaction scope.
&lt;br /&gt;
&lt;br /&gt;My stance was, that is a bad idea, and you should use SqlTransaction over Sys.Tx in that scenario. And it is an EVEN worse idea if you are doing CommitableTransaction instead. 
&lt;br /&gt;
&lt;br /&gt;I'll spare the details (unless you are interested), but due to deadlocks and a higher isolation level, that code would be simply unusable - but on the face of it, it looks so innoccous. 
&lt;br /&gt;
&lt;br /&gt;So to use this judiciously, one must know what implications this may have ... "It just works" is not the right answer. :)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>14852</id><published>2005-09-15T19:22:00.0-05:00</published><updated>2005-09-15T19:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Well said, Sahil. You can't blindly apply this without understanding the implications.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>14862</id><published>2005-09-16T09:24:00.0-05:00</published><updated>2005-09-16T09:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Thanks Robert .. :) .. But nonetheless, Sys.Tx is great .. but y'know possibilities = responsibilities (Thats my Vote for Sahil Catchline). 
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>14884</id><published>2005-09-17T15:09:00.0-05:00</published><updated>2005-09-17T15:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">New and Notable 78 </title><content type="html">&lt;br /&gt;
&lt;br /&gt;Yet another big gap (August 3rd) [:D]. As you can tell from all the latest posts, I am playing a...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>14901</id><published>2005-09-19T22:33:00.0-05:00</published><updated>2005-09-19T22:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Thanks Sahil,
&lt;br /&gt;
&lt;br /&gt;That's a bunch of questions there.  First, by Windows Vista beta 2, the Oletx interface (via the MSDTC proxy) implements support to delegate directly to the KTM component in a manner similar to PSPE.  The KTM (kernel transaction manager) component provides the direct transaction coordination for the kernel resources of the file system and the registry.
&lt;br /&gt;
&lt;br /&gt;This means that transactions that are in a single process and have only the file system or the registry for their durable resource managers will have the transaction move directly from the unmanaged 'LTM' in the MSDTC proxy to the KTM in the kernel.  Much like PSPE, if the transaction then acquires another durable resource or distributes to another process, the transaction will be promoted to MSDTC.
&lt;br /&gt;
&lt;br /&gt;Note that while the effect is much like PSPE, the actual mechanism is more specific and targeted to the KTM component.
&lt;br /&gt;
&lt;br /&gt;Second, yes, there are a number of general rules and guidelines that apply whenever you use two phase commitment.  I'm not sure that I follow that there are that many cases that apply only to System.Transactions.  For instance, if a single SQL transaction is reasonable for the two DataAdapter calls, I don't immediately follow that putting them into a System.Transactions transaction is notably a bad decision.  Can you elaborate?
&lt;br /&gt;
&lt;br /&gt;Finally, ease of use aside, I don't understand the distinction around CommittableTransaction -- that is, in fact, what TransactionScope creates behind the scenes when it is building the outer scope.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>15261</id><published>2005-10-03T22:00:00.0-05:00</published><updated>2005-10-03T22:00:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Jim,
&lt;br /&gt;
&lt;br /&gt;Thank you for your answers, and I apologize for my delay in getting back.
&lt;br /&gt;
&lt;br /&gt;Here is an elaboration to what I was saying above ... 
&lt;br /&gt;
&lt;br /&gt;By putting the two calls to DataAdapter.Fill and Update within the same transaction scope, the following happens.
&lt;br /&gt;
&lt;br /&gt;1. Fill = Open SqlConnection, FILLDATA, Close SqlConnection.
&lt;br /&gt;2. Update = Open SqlConnection, UPDATEDATA, Close SqlConnection.
&lt;br /&gt;
&lt;br /&gt;However, SqlConnection.State = Closed means nothing because the underlying database connection is still open (due to connection pooling), and that connection locks the resources that the data was filled out of. This happens for 1 minute - the default timeout.
&lt;br /&gt;
&lt;br /&gt;So now what happens is that during Update, another connection is opened, which bumps up the isolation level to serializable, everything saves - life is good.
&lt;br /&gt;
&lt;br /&gt;Why is it a problem? Consider the following scenario.
&lt;br /&gt;
&lt;br /&gt;user1:Fill - Connection #1 opened.
&lt;br /&gt;user2:Fill - Connection #2 opened.
&lt;br /&gt;user2:Update - Connection #3 opened - isolation level serializable. goes in a timeout since user1:fill:connection#1 has locked the resource
&lt;br /&gt;user1:Update - Connection #4 opened - isolation level serializable, deadlocks connection #3, but since #3 came first, #4 is made the deadlock victim, and since #3 is blocked by #1, he just times out !! BUMMER !!
&lt;br /&gt;
&lt;br /&gt;So what you have here is - 
&lt;br /&gt;a) A concurrency management scheme that is much more expensive.
&lt;br /&gt;b) Both parties fail in event of concurrent updates.
&lt;br /&gt;
&lt;br /&gt;The above behavior is Sql2k5 BTW, Sql2k would be different (as you already must know that is serializable by default, no promotable enlistment).
&lt;br /&gt;
&lt;br /&gt;Now why is CommitableTransaction important here? Because TransactionScope in a using construct keeps the resources tied up for (hopefully) a short duration - atleast one code scope. CommitableTransaction gives you a programming model that allows for on-demand enlistment, and on-demand commit, i.e. it encourages the programmer to do something like 
&lt;br /&gt;
&lt;br /&gt;load asp.net page - start transaction, 
&lt;br /&gt;wait for user input, 
&lt;br /&gt;postback - commit transaction
&lt;br /&gt;
&lt;br /&gt;Of course the above is do-able via Transactionscope also, but just that CommittableTransaction seems more encouraging :)
&lt;br /&gt;
&lt;br /&gt;Sahil</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>15361</id><published>2005-10-06T09:48:00.0-05:00</published><updated>2005-10-06T09:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Sahil,
&lt;br /&gt;
&lt;br /&gt;Thanks for your explanation.  It clarified the issues you've been presenting quite well.  I have some observations and suggestions to make about this.  Forgive the length of this reply, but you bring up a number of interesting issues.
&lt;br /&gt;
&lt;br /&gt;First, there are many times when a single atomic transaction is inappropriate.  Absolutely.  Some typical examples are:
&lt;br /&gt;
&lt;br /&gt;- When the action is going to run "long", where long is defined by whatever measure holds up too much work for that business; 
&lt;br /&gt;
&lt;br /&gt;- When there are consistent points during the action that you want to make available for other threads or users;
&lt;br /&gt;
&lt;br /&gt;- When the compensation you want to do is not a simple undo, but something else entirely;
&lt;br /&gt;
&lt;br /&gt;There is also a variation that isn't purely part of the consensus protocol, but rather is associated with how the isolation is handled.  That's the case where the isolation level that has been chosen, and the requirements for forward progress do not mesh -- either due to deadlocks or due to too high of a rate of cascading aborts.  Handling this issue is somewhat more difficult, in that atomic transactions may be a legitimate part of the solution.  What is needed is to think about how the application's data flow and progress requirements mesh.  This seems to be part of what your DataAdapter issue is getting at.
&lt;br /&gt;
&lt;br /&gt;All these points are true of any atomic transaction scheme that I know about, and I can agree with them.  I would point out, though, that these are invariant from what API is used to drive that transaction -- in other words, these are generic to transactions, and not specific to System.Transactions.
&lt;br /&gt;
&lt;br /&gt;When I read your first comment, I wasn't sure exactly what the DataAdapter scenarios were.  Let me try to walk through a few.  First, there's one where each thread does:
&lt;br /&gt;
&lt;br /&gt;using (TransactionScope scope = new TransactionScope ())
&lt;br /&gt;{
&lt;br /&gt;    … dataAdapter.Fill ();  // pseudo code
&lt;br /&gt;    … do some stuff ...
&lt;br /&gt;    … dataAdapter.Update ();  // pseudo code
&lt;br /&gt;
&lt;br /&gt;    scope.Complete ();
&lt;br /&gt;}
&lt;br /&gt;
&lt;br /&gt;This is little different, in fact, from doing the same thing with a single SQL transaction.  According to people I've talked to here, this really shouldn't be deadlocking due to object pooling -- System.Data goes to some length to reuse a closed connection that was part of the current transaction.  If you are seeing deadlocks, please send me some details offline and I'll pass them along to someone to look at.  &amp;lt;Btw: I'll talk about locking levels in a second&amp;gt;
&lt;br /&gt;
&lt;br /&gt;The alternative is to split these into different transactions, where the dataAdapter.Fill call and the dataAdapter.Update call do not share a transaction.  Roughly, if I use System.Transactions to represent this out of simplicity, this is:
&lt;br /&gt;
&lt;br /&gt;using (TransactionScope scope = new TransactionScope ())
&lt;br /&gt;{
&lt;br /&gt;    … dataAdapter.Fill ();  // pseudo code
&lt;br /&gt;
&lt;br /&gt;    scope.Complete ();
&lt;br /&gt;}
&lt;br /&gt;
&lt;br /&gt;… do some stuff ...
&lt;br /&gt;
&lt;br /&gt;using (TransactionScope scope = new TransactionScope ())
&lt;br /&gt;{
&lt;br /&gt;    … dataAdapter.Update ();  // pseudo code
&lt;br /&gt;
&lt;br /&gt;    scope.Complete ();
&lt;br /&gt;}
&lt;br /&gt;
&lt;br /&gt;However, this suffers from the problem that if there is any contention on the data, the dataAdapter.Update call may silently overwrite other updates, since the data does not remain locked between the dataAdapter.Fill call and the dataAdapter.Update call.  So, it won't deadlock, but it may silently lose updates.
&lt;br /&gt;
&lt;br /&gt;You also talked about isolation levels changing.  I think I understand what you're saying, but it isn't that the isolation levels change.  I suspect that you're talking about lock promotion.  The idea is that within a given isolation level there are rules about both read and write locks, and for some levels those rules allow read locks to be promoted to write locks.  That promotion could cause deadlocks under the right conditions, and transaction timeout is the traditional way to handle that.
&lt;br /&gt;
&lt;br /&gt;Is that what you're seeing?  If not, again, please send me an example offline.  Thanks.
&lt;br /&gt;
&lt;br /&gt;Finally, I did follow your example with CommittableTransaction.  You're right, that in that case it is hard to not create the raw transaction.  There is another relatively long topic there -- I'll put that as a topic to write about soon.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>15384</id><published>2005-10-07T09:26:00.0-05:00</published><updated>2005-10-07T09:26:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">LOL I like how you describe it .. "raw transaction".
&lt;br /&gt;
&lt;br /&gt;Umm .. I'd like my transaction done Medium-Well please .. thanks !!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>16235</id><published>2005-11-05T11:38:00.0-05:00</published><updated>2005-11-05T11:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">&amp;gt; Umm .. I'd like my transaction done Medium-Well please .. thanks !! 
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;:o)
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&amp;gt; That promotion could cause deadlocks under
&lt;br /&gt;&amp;gt; the right conditions, and transaction 
&lt;br /&gt;&amp;gt;timeout is the traditional way to handle that.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;Hi Jim! :o)
&lt;br /&gt;
&lt;br /&gt;A timeout is probably the easy solution to deadlocks. A deadlock graph algorithm would probably outperform a timeout. I thought the industry used an algorithm, that was interesting to know. If the TM is tightly integrated with the resources, it could abort a deadlocked transaction by using a strict rule. This could probably give the highest performance.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>16361</id><published>2005-11-08T07:12:00.0-05:00</published><updated>2005-11-08T07:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Hello back!
&lt;br /&gt;
&lt;br /&gt;Now talk of deadlock graphs brings back some memories.  Have you looked at the distributed lock manager (DLM) in OpenVMS?  It was a great tool for the environment that it was in.  It never understood transactions, so using it in a resource manager could be 'interesting' at times.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>16362</id><published>2005-11-08T07:14:00.0-05:00</published><updated>2005-11-08T07:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Also, I wanted to close part of this thread with a note that I did put Sahil into contact with some folks in ADO.Net offline.  Last I heard, they had gotten back to him and were discussing the DataAdapter issues with him.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>16646</id><published>2005-11-11T18:56:00.0-05:00</published><updated>2005-11-11T18:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What should I think about when using transactions with the file system?</title><content type="html">Yes Jim and thank you for that :). I will be writing an article for Code-magazine on this topic shortly. It's a tasty article IMO. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>21392</id><published>2006-04-09T15:18:00.0-05:00</published><updated>2006-04-09T15:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Code-Magazine: New Article on System.Transactions</title><content type="html">My new article on System.Transactions should now be available in the newest issue of code-magazine. It...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14838"></thr:in-reply-to></entry><entry><id>15405</id><published>2005-10-09T10:39:00.0-05:00</published><updated>2005-10-09T10:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">The Proclaimers</title><content type="html">&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Last week I went to see the Proclaimers in Seattle at the Tractor Tavern.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If you're on this side of the pond, you may have heard of them as the group that did "500 miles" (Benny &amp;amp; Joon) or "I'm on my way" (Shrek).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If you're on the other, but not Scotland, you've probably also heard of "Letter from America".&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They're good songs, but they miss so much of what the group does.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This is the third time I've seen them live: once in Rothes hall in Glenrothes, Fife; twice in Seattle: the Crocodile Café about a year and a half ago, and the Tractor Tavern last week.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The Reid brothers seem to prefer small venues, and give a great performance.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In all three, the crowd was heavily laced with serious fans -- not quite a Scots version of Parrotheads, but getting there.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It made for a wonderful atmosphere, pretty much a singalong.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I just wish the Seattle shows had had more of the stories about the songs that the Glenrothes one did.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;For those of you who don't know them, they're unabashedly Scots.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They've done little to moderate their accent, and wear their views on Scottish independence openly.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They're seriously anti-stylish.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They're also a very fun band, with their two US hits being pretty typical.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For an American ear, it may take time to get through the accents to get to the lyrics, but they're worth it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;(Ok, I lived in Fife for over 8 years, so I had _lots_ of practice)&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;What I love about their work are their lyrics, and how they juxtapose with the tunes.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;I really like the way they can capture ideas in sound and words.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;My favorite start-the-day song of theirs is "Joyful Kilmarnock Blues"; on the latest album they have a song about growing old and eventually dying called "Some more to go" that has a refrain that captures the theme twice over, and there's a very happy sounding song on the same album called "DIY" -- but take a look at the lyrics :).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And finally, there are the drinking songs …&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;They also have a whole set of political songs.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These can be priceless -- "Throw the 'R' away" is a reaction to being told that they needed to learn a more moderate accent to sell; "Cap in Hand" is pretty much just what it says on the tin; "A land fit for zeros" is one of the most cutting songs about New Labour that I've heard; and "Everybody's a victim" is just classic.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;If you haven't listened to them, do go &lt;a href="http://www.proclaimers.co.uk/2003/"&gt;check them out&lt;/a&gt;.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>6</thr:total></entry><entry><id>15602</id><published>2005-10-15T22:12:00.0-05:00</published><updated>2005-10-15T22:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Proclaimers</title><content type="html">"Some more to go" is actually called "One More Down" and is a terrific song. I've just been to six gigs in a row and I was blown away by every one. There are very few, I feel, who wouldn't have an unbelievable time at these shows, if they just went. They've just been nominated as the best feelgood band who performed at all the UK festivals. 
&lt;br /&gt;
&lt;br /&gt;Buy an album! The words, for those who have trouble with the accents, are always on the insert. Believe me, they're easier to understand than most bands I've heard, and their lyrics are more interesting to listen to. As one blogger said, 'This is music written by adults for adults.' They cover life, death, marriage, love, sex, children, politics, drinking. Thee's often a line or two that will bring a smile to your face. The latest, Restless Soul, has lyrics that made me laugh as well as cry.
&lt;br /&gt;
&lt;br /&gt;The harmonies are beautiful and they sing with passion, honesty, and integrity. Although they still perform I'm Gonna Be (500 Miles) with great strength and joy, they have moved on many miles from there.
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15405"></thr:in-reply-to></entry><entry><id>16343</id><published>2005-11-07T21:28:00.0-05:00</published><updated>2005-11-07T21:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Proclaimers</title><content type="html">While I'm worth, my room on this Earth,
&lt;br /&gt;I will be with you.
&lt;br /&gt;While the Chief, puts Sunshine On Leith,
&lt;br /&gt;I'll thank him, for his work,
&lt;br /&gt;And your birth, and my birth.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;Magic.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15405"></thr:in-reply-to></entry><entry><id>18311</id><published>2006-01-27T01:04:00.0-05:00</published><updated>2006-01-27T01:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Proclaimers</title><content type="html">SUNSHINE ON LEITH IS BY FAR THE BEST PROCLAIMERS SONG</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15405"></thr:in-reply-to></entry><entry><id>21766</id><published>2006-04-15T07:33:00.0-05:00</published><updated>2006-04-15T07:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Proclaimers</title><content type="html">the proclaimers are a great band when you are down. they are a great band no mater what. i love them,my brothers love them,my family loves them,well i just think that every one loves them.if you dont like or love them then you must stop reading this.i listen to them every time i can get. last thing if you are a proclaimer fan then just do one thing, REMEMDER THE PROCLAIMERS do not forget them.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15405"></thr:in-reply-to></entry><entry><id>48097</id><published>2007-07-27T03:50:00.0-05:00</published><updated>2007-07-27T03:50:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Proclaimers</title><content type="html">They are very good. I´ve never had the chance to see them live but I´ve got all his records and most of them are really good. I would highlight some like "Ghost of love", "You meant it then", "Redeemed", "There´s a touch", "Restless soul", "The thing that really matters", etc among those not known by most people. They are honest, intelligent, brilliant. Advisible to listen to.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15405"></thr:in-reply-to></entry><entry><id>74135</id><published>2009-12-29T10:46:24.0-05:00</published><updated>2009-12-29T10:46:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Proclaimers</title><content type="html">I was lucky enough to interview the lads for UK radio and they talk about their writing and Sunshine On Leith. I've pasted a link to it below...

http://www.sittingwith.com/archive.html#c51</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15405"></thr:in-reply-to></entry><entry><id>16065</id><published>2005-10-31T15:30:00.0-05:00</published><updated>2005-10-31T15:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Looking for developers</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I'm currently looking for a developer to join my team.  We've been doing some dramatic things over the last couple of years.  We're currently driving for completion on our Vista work, and we're beginning work on our next wave of developments.  To help make that happen, I'm looking for a bright, ambitious developer who wants to be in a position to drive some extremely cool features.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;To quote the ad:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" color="#0000ff" face="Arial"&gt;Do you want to work on a small team that is working to change the way people write reliable code? Does coming up with really innovative designs and seeing them ship with Windows, CLR and WCF (a.k.a. Indigo) releases sound like your idea of a good time? If so, then you should take a look at the Transactions team in the XML Enterprise Services group. We are currently finishing our current set of deliverables and beginning the planning phase of our next wave (circa ’08) of releases.&lt;br /&gt;&lt;br /&gt;For the last two years our mission has been to make the usage of transactions simple and ubiquitous. We have made transactions easier to use (look at the System.Transactions namespace in Whidbey) and have made dramatic improvements in performance (for in-memory transactions our performance exceeds 1 million TPS!). We have extended the reach of transactions all the way from Web Services (we authored the WS-AtomicTransactions standard and implemented it in Indigo) to the kernel (in Vista we have integrated our transactions stack with the transacted file system and registry).&lt;br /&gt;&lt;br /&gt;But all of this is just the beginning. In our upcoming releases we will continue extend our reach, from ultra-lightweight transactions in one direction to long-running activities with compensation in the other. We will make the usage of transactions pervasive throughout the managed space (from implementing transacted collections to working with MSR on cutting edge technologies). Most importantly, we will continue to ship regularly to get our work into the hands of customers!&lt;br /&gt;&lt;br /&gt;Applicants should be experienced in designing, developing and shipping products and have full understanding of the development cycle. Must have a passion for quality, be creative and be able to write robust, secure and maintainable code. Must be able to work effectively with a team of highly skilled and motivated developers. Must be able to own several features concurrently, make decisions independently, and have strong communication and development skills. Proven and demonstrable skill in C++, C#, or Java is required. An MS degree in computer science, a related degree, or equivalent experience is required. Knowledge of transaction concepts or industry experience with a transaction processing or a reliable messaging technology would be a definite plus.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" color="#000000" face="Arial"&gt;If you're excited by these sorts of challenges, &lt;/font&gt;&lt;font size="2" color="#000000" face="Arial"&gt;&lt;a href="http://members.microsoft.com/careers/search/details.aspx?JobID=413495d6-3d5d-4aa4-b824-d49bb54842f2"&gt;see&lt;/a&gt;&lt;/font&gt;&lt;font size="2" color="#000000" face="Arial"&gt;.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>10</thr:total></entry><entry><id>16197</id><published>2005-11-04T00:03:00.0-05:00</published><updated>2005-11-04T00:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Tx work at MS</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>16358</id><published>2005-11-08T01:06:00.0-05:00</published><updated>2005-11-08T01:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">I love the concept, but I assume that relocation is required?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>16360</id><published>2005-11-08T07:08:00.0-05:00</published><updated>2005-11-08T07:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">Yes, it's a Redmond only position.
&lt;br /&gt;
&lt;br /&gt;I can tell you, though, that I relocated to here a few years ago from the UK, and it has been a great experience.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>16819</id><published>2005-11-15T18:08:00.0-05:00</published><updated>2005-11-15T18:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">"in-memory txn" seems like an oxymoron...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17186</id><published>2005-11-28T22:40:00.0-05:00</published><updated>2005-11-28T22:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">&amp;gt;"in-memory txn" seems like an oxymoron... 
&lt;br /&gt;
&lt;br /&gt;Not if you've got an in-memory database accessed by multiple threads...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17252</id><published>2005-12-02T02:15:00.0-05:00</published><updated>2005-12-02T02:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">Yeh, shame relocation is required :(</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17255</id><published>2005-12-02T08:21:00.0-05:00</published><updated>2005-12-02T08:21:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">Yeah, it's required.  Fwiw, I made a pretty big relo (from Scotland) to come here, and have had a great time with work and really like the area.
&lt;br /&gt;
&lt;br /&gt;And, fwiw, Alan is pretty much dead on -- but ask just how simple that in memory database could be.  There's a lot bubbling in the research area, and it looks be a pretty cool time for transaction technologies.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17312</id><published>2005-12-07T00:56:00.0-05:00</published><updated>2005-12-07T00:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">&amp;gt;but ask just how simple that in memory database could be
&lt;br /&gt;
&lt;br /&gt;Any object... and if you're talking of user-mode, .Net managed code, that means anything...  You sure do want to make that lightweight...
&lt;br /&gt;
&lt;br /&gt;Shame about the relo.
&lt;br /&gt;
&lt;br /&gt;/alan
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17741</id><published>2005-12-30T17:07:00.0-05:00</published><updated>2005-12-30T17:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">&amp;gt;"Not if you've got an in-memory database accessed by multiple threads..."
&lt;br /&gt;
&lt;br /&gt;how do you ensure txn durability/recovery during system failure when it's in (volatile) memory?
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17742</id><published>2005-12-30T19:12:00.0-05:00</published><updated>2005-12-30T19:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Looking for developers</title><content type="html">Let me jump in on that -- I have a prior entry in this blog (http://pluralsight.com/blogs/jimjohn/archive/2005/02/10/5727.aspx) that talks about volatile resources.
&lt;br /&gt;
&lt;br /&gt;Note that since these resources don't exist across system failures, there is nothing to recover.
&lt;br /&gt;
&lt;br /&gt;Now, if there are any non-volatile resources, or any failure modes where the resource can outlive the transaction manager, then the transaction outcome must be recorded persistently.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="16065"></thr:in-reply-to></entry><entry><id>17769</id><published>2006-01-01T10:53:00.0-05:00</published><updated>2006-01-01T10:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How to pass a transaction along a chain of events</title><content type="html">&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;In a couple of previous entries (&lt;/font&gt;&lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/04/14/7332.aspx"&gt;&lt;font face="Arial"&gt;http://pluralsight.com/blogs/jimjohn/archive/2005/04/14/7332.aspx&lt;/font&gt;&lt;/a&gt;&lt;font face="Arial"&gt;, &lt;/font&gt;&lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/05/01/7923.aspx"&gt;&lt;font face="Arial"&gt;http://pluralsight.com/blogs/jimjohn/archive/2005/05/01/7923.aspx&lt;/font&gt;&lt;/a&gt;&lt;font face="Arial"&gt;) that I posted some time ago, I described how you can use System.Transactions in worker thread scenarios.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These cover cases where a master thread wants to farm out work to one or more additional threads, but control will still eventually devolve back to the master thread.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This is a common case, but what about scenarios where there isn't a master thread, but instead a sequence of threads that proceed through events one at a time, eventually completing in some as yet unstarted thread of activity?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Well, there is a pattern that can be used for that.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;span style="FONT-WEIGHT: bold"&gt;Warning: &lt;/span&gt;first a warning about these scenarios: it is generally considered bad practice to have a transaction that spans events that are not tightly constrained to occur 'quickly'.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For instance, you wouldn't want to have a transaction span waiting for user input -- either direct text input or some windows form event.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Allow transactions to be active across unbounded waiting means that important data may be locked for longer than you are willing to accept, or that some other part of the transaction system may time out the transaction (as a side effect of attempting to ensure that data does not remain locked for too long).&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;However, there are cases where this pattern can make sense. For instance, if you are using the asynchronous completion pattern, where you know with reasonable certainty that the event will occur in the near future, then this pattern can be used.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It just needs to be used with care.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Let's start with a non-transacted pattern that uses IAsyncResult and delegates to chain events together.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is roughly going to have a pattern of:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: blue"&gt;void &lt;/span&gt;DoAsyncOperation ()&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// set up context as an object that contains the execution context &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// to run at completion.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;... context = ...;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// Now begin the operation &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;o.BeginInvoke (..., DelegateCompletion, ... context);&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// Now do a few more things before returning&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;... DelegateCompletion (IAsyncResult ar)&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;... context = (...) ar.AsyncState;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// We now have our context back, and can continue the work,&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// including the EndInvoke call&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;(Note that I said this was a pattern, rather than fully formed code :) )&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Now, what if I wanted to begin the operation in a transaction, and have that transaction continue in the completion delegate, and commit there?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;To do that, I'd adjust the pattern as so:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; mso-outline-level: 1"&gt;&lt;span style="FONT-SIZE: 10pt; FONT-FAMILY: Verdana"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span style="FONT-SIZE: 9pt; COLOR: blue; FONT-FAMILY: 'Lucida Console'"&gt;void &lt;/span&gt;&lt;span style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'"&gt;DoAsyncOperation ()&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;   &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;...&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// set up context as an object that contains the execution context &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// to run at completion.&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;... context = ...;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// Create our new transaction, activate it, and place it into the &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// context that will be passed to the completion delegate.&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;CommittableTransaction tx = new CommittableTransaction ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;context.Transaction = tx;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// Note that we use a DependentTransaction here as the delegate&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// can be invoked any time after the BeginInvoke is called.&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;Transaction dtx = tx.DependentClone &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;                     &lt;/span&gt;(DependentCloneOption.BlockCommitUntilComplete);&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope scope = new TransactionScope (dtx))&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: green"&gt;// Now begin the operation &lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;o.BeginInvoke (..., DelegateCompletion, ... context);&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;&lt;span style="COLOR: green"&gt;// Now do a few more things before returning&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;...&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;scope.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;dtx.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;... DelegateCompletion (IAsyncResult ar)&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// Pick out the context, and re-activate the transaction&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;... context = (…) ar.AsyncState;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;CommittableTransaction tx = context.Transaction;&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: Verdana; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="COLOR: blue"&gt;using &lt;/span&gt;(TransactionScope scope = new TransactionScope (tx))&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// We now have our context back, and can continue the work,&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;// including the EndInvoke call&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;...&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;scope.Complete ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; COLOR: green; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;// Finally, attempt to commit the transaction&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;tx.Commit ();&lt;/p&gt;
&lt;p style="FONT-SIZE: 9pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;}&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This pattern starts a transaction to encompass the operations that occur when starting the async operation.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It then passes the commit control to the completion delegate, which is then responsible for re-activating it via TransactionScope and finally committing it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Along the way, we use a DependentTransaction to make sure that a quick completion can't overrun the operations that occur after the BeginInvoke.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Any number of completion steps can be chained together this way.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>21394</id><published>2006-04-09T15:28:00.0-05:00</published><updated>2006-04-09T15:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Phase0 in .Net System.Transactions</title><content type="html">In a previous post (http://blogs.msdn.com/florinlazar/archive/2006/01/29/518956.aspx) I talked about...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17769"></thr:in-reply-to></entry><entry><id>31243</id><published>2006-07-10T11:19:00.0-05:00</published><updated>2006-07-10T11:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to pass a transaction along a chain of events</title><content type="html">You do not dispose tx and dtx. Is this OK?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17769"></thr:in-reply-to></entry><entry><id>46032</id><published>2007-02-11T05:51:00.0-05:00</published><updated>2007-02-11T05:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Phase0 in .Net System.Transactions</title><content type="html">In a previous post ( http://blogs.msdn.com/florinlazar/archive/2006/01/29/518956.aspx ) I talked about</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17769"></thr:in-reply-to></entry><entry><id>18085</id><published>2006-01-17T09:08:00.0-05:00</published><updated>2006-01-17T09:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Transaction information page posted</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;We've posted a new webpage on at &lt;/font&gt;&lt;a href="http://www.microsoft.com/windowsserver2003/appserver/transmgmt.mspx"&gt;&lt;font size="2" face="Arial"&gt;http://www.microsoft.com/windowsserver2003/appserver/transmgmt.mspx&lt;/font&gt;&lt;/a&gt;&lt;font size="2" face="Arial"&gt; which collects together information on the transactions stack, including MSDTC and System.Transactions.  Please take a look at it and either send feedback or post a reply here with any comments about information that you'd like to see it include.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>18087</id><published>2006-01-17T12:35:00.0-05:00</published><updated>2006-01-17T12:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Transaction information page posted</title><content type="html">I would love to see information about Transactional File system and transactional registry. I thought it would be available in Vista (at least that's what I remember from PDC), but there is nothing about that in the article.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18085"></thr:in-reply-to></entry><entry><id>18170</id><published>2006-01-21T12:30:00.0-05:00</published><updated>2006-01-21T12:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">The Resource Manager Project -- Introduction</title><content type="html">&lt;font size="2" face="Arial"&gt;&lt;/font&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;I've been thinking for a while that I should do some posts on building a resource manager -- not just what the interfaces are, but also what the implications and obligations are and what is entailed in meeting them.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The longer I've thought about it, the more that I've realized that it really can't be one post -- instead it needs to be a set, starting with some of the behind the scenes principles.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;So, this isn't going to be the 'how to write a resource manager' post -- it's going to be the 'what topics do I need to think about?' post.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This one will be followed by sections on each of those topics -- at least that's my plan.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;At one level a resource manager is simple: it encapsulates some resource and provides a 'transactionally perfect' view of it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Doing this means that it has to isolate changes appropriately; it has to vote in the commitment process; and it has to recover from any intervening failures.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Once the design has covered these points, then there's room to discuss optimizations available through the System.Transactions or MSDTC interfaces, and how you might decide between a full resource manager or a compensator (e.g. a COM+ CRM).&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;This drove my set of topics.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;My first ones are fairly 'meta', but I believe that they're important to get the design and implementation right.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They are:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;ul type="disc" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 1in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;&lt;font face="Arial"&gt;What is isolation, what does it need to do, and how can I implement it?&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;&lt;font face="Arial"&gt;How should I think about and plan for faults and failures?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Which ones do I need to handle?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;What should my strategy be for recovering from them?&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;&lt;font face="Arial"&gt;What should I do about durability?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;How should I think about logging?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;What are the naming restrictions around durable resources?&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;&lt;font face="Arial"&gt;What are my responsibilities during the two phase commitment process?&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;&lt;font face="Arial"&gt;What if I want to handle unrecoverable resources (also known as real world actions)?&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; FONT-SIZE: 10pt; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle; mso-outline-level: 2"&gt;&lt;span style="FONT-FAMILY: Verdana"&gt;&lt;font face="Arial"&gt;How do I emulate a COM+ CRM?&lt;/font&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: Verdana; mso-outline-level: 2"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Finally, then, my plan is to bring it all together by building up a resource manager that uses System.Transactions and System.IO.Log (available in WCF).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This will be a fairly long series of articles, and I will undoubtedly be covering other topics in amongst them.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>11</thr:total></entry><entry><id>18171</id><published>2006-01-21T12:46:00.0-05:00</published><updated>2006-01-21T12:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Jim,
&lt;br /&gt;  sounds like a pretty ambitious plan - I'm looking forward to reading the instalments!
&lt;br /&gt;
&lt;br /&gt;I have one question: the description you provide would seem to imply a resource manager for a resource which has a short transaction time, e.g., databse, queue entry.
&lt;br /&gt;Have you considered resources with longer transaction times such as workflow entities or travel reservation systems?
&lt;br /&gt;
&lt;br /&gt;Cheers, john</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18221</id><published>2006-01-22T18:06:00.0-05:00</published><updated>2006-01-22T18:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">John,
&lt;br /&gt;
&lt;br /&gt;Yeah, it's a pretty big undertaking.  I'm hoping that I can see it through in a reasonably timely manner.
&lt;br /&gt;
&lt;br /&gt;Right now I am focusing on a simple recoverable resource manager for an atomic transaction.  Assuming I can cover this in a reasonably short timeframe, extending it to include compensations might just be interesting.  For now, though, I don't want to make this any more complex than it is going to be anyway.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18237</id><published>2006-01-24T04:29:00.0-05:00</published><updated>2006-01-24T04:29:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Jim,
&lt;br /&gt;This is something that will be a great reading. I was fortunate to enough to implement a reusable resource manager and the dispenser in the COM world, using &amp;amp; implementing the OLE Transaction interfaces. we had to implemnet this to plug this into our doc management middleware The two phase commit worked like a charm...
&lt;br /&gt;yup extending that to include compensating txn sematics will make it more interesting
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18238</id><published>2006-01-24T04:34:00.0-05:00</published><updated>2006-01-24T04:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">hey John,
&lt;br /&gt;I am not sure OLE Transactions as encapsulated in System.Transactions can be used to model long running transactions 
&lt;br /&gt;Correct me if I am wrong though.
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18239</id><published>2006-01-24T04:51:00.0-05:00</published><updated>2006-01-24T04:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Jim,
&lt;br /&gt;to make your life more difficult -
&lt;br /&gt;can you please enlighten us on these areas as well -
&lt;br /&gt;
&lt;br /&gt;Nested Txns - How are we going to manage them? Are we to treat them as two seperate physical txns in two phase commit yet to provide a relationship semantics that enables to treat the parent and child txns atomic OR treat them as one physical txn as a whole 
&lt;br /&gt;
&lt;br /&gt;Idem Potency - is there a way to see whether we can advertise to RM of concurrent txns that are idem potent, allowing the RM to optimize on locks</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18279</id><published>2006-01-24T20:39:00.0-05:00</published><updated>2006-01-24T20:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Vijay,
&lt;br /&gt;
&lt;br /&gt;YOur resource manager experience sounds interesting.  I'd certainly be interested in what you learned, and what you think could make the process easier.
&lt;br /&gt;
&lt;br /&gt;For this sequence, I'm going to have to try to keep the resource simple, and stick to the mainline designs.  Since System.Transactions, or oletx, don't support nested transactions, I wasn't planning on discussing that.
&lt;br /&gt;
&lt;br /&gt;Idempotency is possibly more relevant.  For right now, let's see how the set of articles ends up going.  It may make sense as one of the perf optimizations that a resource manager author can consider.
&lt;br /&gt;
&lt;br /&gt;Does that make sense?
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18285</id><published>2006-01-25T02:18:00.0-05:00</published><updated>2006-01-25T02:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Jim,
&lt;br /&gt;Just got to see your msg, I am sitting across the globe here in India.
&lt;br /&gt;I am indeed looking forward to have some good learnings from your articles.And would not mind sharing some of my RM code snippets with you if you want to have a look
&lt;br /&gt;
&lt;br /&gt;all of my expriences in building the RM engine was way back in 1999 using COM - ATL/C++ , WIN32 and implementing &amp;amp; using OLETXN Interfaces and MSDTC APIs and I am not sure some of the points that I relate here is relevant anymore. That said here are some of my experience worth sharing - 
&lt;br /&gt;
&lt;br /&gt;we realized that OLETXN object model did not specify how the RD needs to bind with the RM to propagate the connection state (whatever connection that it maintains) during txn enlistment. we had to resort to custom IPC between RD and RM - did that using DCOM itself. would have been great if there was a default channel (like what we have in Remoting)that will serve as an abstraction for us to register our RM and RD. The channel can be an extensibility point allowing RDs to connect to RMs thru arbitary transports.
&lt;br /&gt;
&lt;br /&gt;Definitely one needs to have an automated mechanism to process TXN in conflict (those that lost out in commit phase ). I guess MSDTC does not do much on those txns which failed on commit phase but were sucessful during prepare
&lt;br /&gt;
&lt;br /&gt;Ours was an generic RM engine (implementing OLETXN Interfaces - ITransactionResourceAsync, IResourceManagerSink...). we built this as a generic RM engine that abstracted the common behaviour (including the custom connection between RD &amp;amp; RM exposed thru DCOM)while providing extensbility points (thru the APIs the engine published) to allow arbitary RMs to be implemented and get attached to the engine.
&lt;br /&gt;
&lt;br /&gt;just some thoughts memories of my RM ....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18289</id><published>2006-01-25T07:24:00.0-05:00</published><updated>2006-01-25T07:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Vijay,
&lt;br /&gt;
&lt;br /&gt;Thanks for the summary - it sounds like it was an interesting project.
&lt;br /&gt;
&lt;br /&gt;Fwiw, you do hit on some points that I hope to cover in the sequence.  I'll be interested in feedback and thoughts as it proceeds.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18295</id><published>2006-01-25T08:52:00.0-05:00</published><updated>2006-01-25T08:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">Sure Jim, I will read your articles with utmost interest and looking forward to a good learning excercise  for me
&lt;br /&gt;
&lt;br /&gt;Is there a way for me to get in touch with you over a mail?
&lt;br /&gt;
&lt;br /&gt;Vijay</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18533</id><published>2006-02-02T07:31:00.0-05:00</published><updated>2006-02-02T07:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The Resource Manager Project -- Introduction</title><content type="html">JIm,
&lt;br /&gt;
&lt;br /&gt;I had written to you previously on some what similar to the
&lt;br /&gt;How do I emulate a COM+ CRM?
&lt;br /&gt;
&lt;br /&gt;What I was trying to achieve was to utilise the enterprisesvc usefulness together with system.transaction .That is while i was trying to create a resourcemanager which ll utilize the best of both world .
&lt;br /&gt;
&lt;br /&gt;My stem on this started while replying  a group post but i didn't able to worked on that successfully.Now that you had openedup the topic again i need to know what are your thoughts on the Xa transaction support and will it be fully replacement of msdtc as well as any suggestion on Async operation on transaction to span multiple thread and since the same can be delegated can it be delegated to a different app domain ??
&lt;br /&gt;Sorry for spamming for differnet questions at one go.Here is the old resource manager post pls suggest what could be a solution??
&lt;br /&gt;
&lt;br /&gt;http://groups.msn.com/-netindiagroup/technotes.msnw?action=get_message&amp;amp;mview=0&amp;amp;ID_Message=3153&amp;amp;LastModified=4675552648936951482&amp;amp;all_topics=1
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>21136</id><published>2006-04-05T10:16:00.0-05:00</published><updated>2006-04-05T10:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to implement Resource Manager in SYSTX?</title><content type="html">Following links will help you to write resource manager by using SYSTX classes
&lt;br /&gt;&amp;amp;nbsp;
&lt;br /&gt;http://msdn2.microsoft.com/en-us/library/ms229975(VS.80).aspx...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18170"></thr:in-reply-to></entry><entry><id>18280</id><published>2006-01-24T20:55:00.0-05:00</published><updated>2006-01-24T20:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">The sample resource manager</title><content type="html">&lt;font face="Arial"&gt;&lt;/font&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;The focus of the next few posts won't be focused on the System.Transactions resource manager interfaces.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, in order to be able to ground discussion in some examples, I'm going to lay out the external view of our target resource manager.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Our resource manager will manage a name/value pairs -- it will be a property bag, in other words.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The values can be objects, the names are strings.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It will support the normal CRUD actions: I can insert new names into the bag, I can remove names from the bag, I can read values associated with a name, and I can write new values associated with a name.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;I can access the property bag simultaneously from several threads in several transactions.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Once we've done that, we'll make it durable.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Finally, we'll make it support access from multiple processes.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;So far, the property bag looks like:&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;public class TxPropertyBag&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;{&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;public TxPropertyBag ();&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;public TxPropertyBag (string bagName);&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;public string BagName&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;{&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt;&lt;font face="Courier New"&gt;get;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;public object BagValue (string name)&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;{&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt;&lt;font face="Courier New"&gt;get;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 1in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 3"&gt;&lt;font face="Courier New"&gt;set;&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;public void RemoveBagValue (string name);&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in 0in 0in 0.5in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 2"&gt;&lt;font face="Courier New"&gt;public void AddBagValue (string name, object value);&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: 'Lucida Console'; mso-outline-level: 1"&gt;&lt;font face="Courier New"&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;Note that we could have modeled the bag more closely to a normal collection.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've not done so thus far in order to help keep the focus on how to make the property bag transaction aware.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt;&lt;font face="Arial"&gt;&lt;strong&gt;Update:&lt;/strong&gt; As a final step, we'll extend the property bag interface with an ability to enumerate the properties in the bag.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>8</thr:total></entry><entry><id>18281</id><published>2006-01-24T21:24:00.0-05:00</published><updated>2006-01-24T21:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">Jim -- This is great. This is going to be an interesting story. I'm looking forward to it.
&lt;br /&gt;
&lt;br /&gt;I hope your sample will also show enumeration. It is always challenging to make this performant in a multi-thread multi-transaction environment.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>18288</id><published>2006-01-25T07:09:00.0-05:00</published><updated>2006-01-25T07:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">I hadn't initially planned to.  However, it does bring up a bunch of interesting challenges (I would agree that it is hard to make it performant, partially because it is harder than the other cases to define what it means to make it right :) ).  I'll update this and add that as a final step after distribution.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>18300</id><published>2006-01-26T07:30:00.0-05:00</published><updated>2006-01-26T07:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">Hi Jim,
&lt;br /&gt;How about making the property bag persistent as well, just to ensure that we are being able to make the underlying data (that the bag carries) durable on succesfull completion of the prepare phase.
&lt;br /&gt;
&lt;br /&gt;May be than you may also want to have a semantics similar to locks that this RM hold and release them during the commit phase. Just the way SQL Server or some other RM would work. In that way we can model and test isolation levels as well. what say? :-) </content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>18309</id><published>2006-01-26T19:18:00.0-05:00</published><updated>2006-01-26T19:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">Vijay,
&lt;br /&gt;
&lt;br /&gt;Yes, I do intend to include durability, as a second stage in the project.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>18318</id><published>2006-01-27T14:10:00.0-05:00</published><updated>2006-01-27T14:10:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">Are you the famous Techno Toys Jim Johnson?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>18319</id><published>2006-01-27T14:26:00.0-05:00</published><updated>2006-01-27T14:26:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">No, 'fraid not.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>21135</id><published>2006-04-05T10:16:00.0-05:00</published><updated>2006-04-05T10:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to implement Resource Manager in SYSTX?</title><content type="html">Following links will help you to write resource manager by using SYSTX classes
&lt;br /&gt;&amp;amp;nbsp;
&lt;br /&gt;http://msdn2.microsoft.com/en-us/library/ms229975(VS.80).aspx...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>43606</id><published>2006-11-29T06:38:00.0-05:00</published><updated>2006-11-29T06:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The sample resource manager</title><content type="html">Jim, can MSDN provide a workable, mini resource manager sample? this would be great to help understand MSDTC behavior and trouble shooting.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18280"></thr:in-reply-to></entry><entry><id>22903</id><published>2006-05-01T07:25:00.0-05:00</published><updated>2006-05-01T07:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Whatever happened to Jim?</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;As you may have noticed, I started what looked to be a largish project on this blog, and then promptly stopped posting for 3 months.  There are a number of reasons for that, all of which devolve down to 'things got a little busy at work'.  It's been a pretty eventful, and mostly good, few months.  I thought I'd share a few of the highlights.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;To start with, our overall group went through a reorg.  This was to adjust for the number of projects that are nearing completion, and the number that are just starting up.  I'm not going to go into details on that, except to say that I'm excited by what I see, and believe that the next few years will be at least as exciting as the last few.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;This came at the same time as our midyear 'discussions', which led to somewhat more work around those.  Since I lead a small dev team, that involved some more effort and time.  I came away as impressed as ever with the level of effort that our organization puts into these things.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;I have also gotten involved in some of the future planning, and that, frankly, can take up as much time as I can give it just now. :)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;I also attended a great workshop at Dagstuhl on &lt;a href="http://www.dagstuhl.de/06121/"&gt;Atomicity&lt;/a&gt;.  It was a very interesting three days, and a great opportunity to meet people that I'd only previously read, as well as meet again a few that I did know - even if only marginally.  It was fantastic to be able to step back from the day to day product grind and learn about ideas, and trade thoughts, with this community.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;And, of course, there were a bunch of other detail items that I just won't bother with here.  The upshot is that the last three months have been a series of sprints, and that has kept me from posting until now.  Hopefully, I'll be able to balance this a bit more in the coming months.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>4</thr:total></entry><entry><id>22906</id><published>2006-05-01T09:16:00.0-05:00</published><updated>2006-05-01T09:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Whatever happened to Jim?</title><content type="html">So you're still the transaction dude @ MSFT right?
&lt;br /&gt;
&lt;br /&gt;BTW - WTF is up with WinFS? Their blog has been unusually dead for a while too. That usually means -
&lt;br /&gt;
&lt;br /&gt;a) Either the product is dead (again)
&lt;br /&gt;.. or ..
&lt;br /&gt;b) They are up to some super cool stuff and haven't had a time to talk about it yet.
&lt;br /&gt;
&lt;br /&gt;Which one is it gonna be? .. meet ya shortly after the break.
&lt;br /&gt;
&lt;br /&gt;SM :)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="22903"></thr:in-reply-to></entry><entry><id>22912</id><published>2006-05-01T14:56:00.0-05:00</published><updated>2006-05-01T14:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Whatever happened to Jim?</title><content type="html">Well, my job has not changed in that sense. 
&lt;br /&gt;
&lt;br /&gt;As for WinFS, I really haven't kept up with it recently, so I don't have any information to share. Sorry. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="22903"></thr:in-reply-to></entry><entry><id>32460</id><published>2006-07-22T15:49:00.0-05:00</published><updated>2006-07-22T15:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Whatever happened to Jim?</title><content type="html">Any chance of getting a durable RM example?
&lt;br /&gt;
&lt;br /&gt;The Platform SDK/MSDN is, well, useless.
&lt;br /&gt;
&lt;br /&gt;I'm looking for the .NET 2.0 equivalent of the .NET CRM sample: http://msdn2.microsoft.com/en-us/library/8xkdw05k.aspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="22903"></thr:in-reply-to></entry><entry><id>36320</id><published>2006-08-26T10:57:00.0-05:00</published><updated>2006-08-26T10:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Whatever happened to Jim?</title><content type="html">Michael,
&lt;br /&gt;
&lt;br /&gt;Now that summer is ending, and a few small software projects (e.g. Vista :)) are coming to an end, I certainly hope so.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="22903"></thr:in-reply-to></entry><entry><id>23367</id><published>2006-05-12T07:55:00.0-05:00</published><updated>2006-05-12T07:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">A great start to friday -- A good walk, The Proclaimers, Runrig, and Buffett</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I recently took up nordic walking as a way for me to get some exercise on the way to work.  So far I've enjoyed it, and it has taken about 6 minutes off my walk to work (bringing it down to 19 minutes). Today was an especially good day for this -- it was cool, sunny, and quiet when I headed in.  A very pleasant walk.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;And now I've been in work for a bit, gotten through the morning mail backlog, and started on the day.  Getting in early and having offices means that it is pretty quiet here.  So I've been listening to my 'get going' morning fare which end with three that I really like: Joyful Kilmarnock Blues, which I've mentioned before, and Loch Lomond by Runrig, and Far Side of the World by Buffett.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Now for the rest of the day! :)&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>27620</id><published>2006-06-14T04:49:00.0-05:00</published><updated>2006-06-14T04:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A great start to friday -- A good walk, The Proclaimers, Runrig, and Buffett</title><content type="html">Hi Jim!
&lt;br /&gt;
&lt;br /&gt;What is "nordic walking"? I walked home from work (Siemens in Oslo Norway) this Thuesday. It took me over 50 minutes. The sub had stopped. Is this "nordic walking"? :o)
&lt;br /&gt;
&lt;br /&gt;I'm currently on a WinFX/.Net 3.0 course about WFC/Indigo and transactions. Now the speaker is talking about transactions while he is smashing his hand in "my" LCD-monitor... :o)
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="23367"></thr:in-reply-to></entry><entry><id>36015</id><published>2006-08-25T11:30:00.0-05:00</published><updated>2006-08-25T11:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Spamming -- ugh.</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;You may have noticed that this blog is getting nailed by a spam storm.  The great guys at Pluralsight are working on it, but in the meantime replies have been disabled to try to slow it down.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Hopefully things will be back to normal soon.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Jim.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;UPDATE: Comments have been re-enabled.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>37388</id><published>2006-09-07T23:07:00.0-05:00</published><updated>2006-09-07T23:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Spamming -- ugh.</title><content type="html">I understand how spamming can really affect the system.  I was once victimized and I hope it won't happen again.  I like your blogs by the way.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36015"></thr:in-reply-to></entry><entry><id>36017</id><published>2006-08-25T11:34:00.0-05:00</published><updated>2006-08-25T11:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">An article on 'scopes'</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;Stephen Toub has written an interesting &lt;a href="http://msdn.microsoft.com/msdnmag/issues/06/09/NETMatters/default.aspx"&gt;article&lt;/a&gt; on the construction of generic 'scope-like' classes over at .Net Matters.  It captures a lot of the ideas that were behind TransactionScope and generalizes them nicely.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Jim.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>36819</id><published>2006-08-31T12:03:00.0-05:00</published><updated>2006-08-31T12:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">A Vista update: integration between System.Transactions and the transacted file system and registry</title><content type="html">&lt;p&gt;&lt;font size="2" face="Arial"&gt;I have written earlier (&lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/09/13/14803.aspx"&gt;here&lt;/a&gt; and &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2005/04/27/7811.aspx"&gt;here&lt;/a&gt;) about how to integrate the transactional file and registry services in Vista with System.Transactions.  With the upcoming Vista RC update, there are a number of changes in the APIs for TxF and TxR that impact how to do this integration.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;First, TxF and TxR have changed from APIs that automatically  picked up the ambient kernel transaction and joined it, to one where the developer needs to explicitly show an intention to participate in the transaction.  This is accomplished through the addition of several new APIs, such as CreateFileTransacted.  These new APIs are explicitly transaction-aware.  All existing file and registry APIs return to being explicitly transaction-unaware.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;(For details on the new transaction-aware APIs, see &lt;span style="FONT-SIZE: 10pt; COLOR: navy; FONT-FAMILY: 'Arial','sans-serif'; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA"&gt;&lt;span style="mso-spacerun: yes"&gt; &lt;/span&gt;&lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/fileio/fs/win32_functions_changed_by_transactions.asp"&gt;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/fileio/fs/win32_functions_changed_by_transactions.asp&lt;/a&gt;&lt;/span&gt;.)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;All of the new APIs take a kernel transaction handle as an explicit parameter.  This means that if I want to use these new routines from inside a System.Transactions TransactionScope I will need to do some work.  That is what I want to concentrate on here in the form of a partial example.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Let's start by setting up a couple of helper classes and declarations.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;First, we know that we'll be manipulating a kernel transaction handle, so we'll specialize a SafeHandle appropriately:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;using System.Collections.Generic;&lt;br /&gt;using System.Runtime.ConstrainedExecution;&lt;br /&gt;using System.Runtime.InteropServices;&lt;br /&gt;using System.Runtime.Versioning;&lt;br /&gt;using System.Security.Permissions;&lt;br /&gt;using System.Text;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;namespace TxFile&lt;br /&gt;{&lt;br /&gt;    [SecurityPermission(SecurityAction.LinkDemand,UnmanagedCode=true)]&lt;br /&gt;    public sealed class SafeTransactionHandle: SafeHandleZeroOrMinusOneIsInvalid&lt;br /&gt;    {&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;      private SafeTransactionHandle () : base (true) &lt;br /&gt;      {&lt;br /&gt;      }&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;      public SafeTransactionHandle (IntPtr preexistingHandle, bool ownsHandle)&lt;br /&gt;       : base (ownsHandle)&lt;br /&gt;      {&lt;br /&gt;       SetHandle (preexistingHandle);&lt;br /&gt;      }&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;      [DllImport("Kernel32.dll", SetLastError=true)]&lt;br /&gt;      [ResourceExposure(ResourceScope.Machine)]&lt;br /&gt;      [ReliabilityContract(Consistency.WillNotCorruptState, Cer.Success)]&lt;br /&gt;      private static extern bool CloseHandle (IntPtr handle);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;      [ResourceExposure(ResourceScope.Machine)]&lt;br /&gt;      [ResourceConsumption(ResourceScope.Machine)]&lt;br /&gt;      override protected bool ReleaseHandle ()&lt;br /&gt;      {&lt;br /&gt;          return CloseHandle (handle);&lt;br /&gt;      }&lt;br /&gt;    }&lt;br /&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;We also need to declare the new CreateFileTransacted API.  This looks a lot like CreateFile, but with a couple of extra parameters.  The new declaration is:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;[DllImport("Kernel32.Dll",&lt;br /&gt;           &lt;/font&gt;&lt;font size="2" face="Courier New"&gt;CallingConvention=CallingConvention.StdCall, &lt;br /&gt;           CharSet = CharSet.Unicode)]&lt;br /&gt;internal static extern SafeFileHandle CreateFileTransacted(&lt;br /&gt;    String lpFileName,&lt;br /&gt;    int dwDesiredAccess,&lt;br /&gt;    int dwShareMode,&lt;br /&gt;    IntPtr lpSecurityAttributes,&lt;br /&gt;    int dwCreationDisposition,&lt;br /&gt;    int dwFlagsAndAttributes,&lt;br /&gt;    SafeFileHandle hTemplateFile,&lt;br /&gt;    SafeTransactionHandle txHandle,&lt;br /&gt;    IntPtr miniVersion,&lt;br /&gt;    IntPtr extendedOpenInformation&lt;br /&gt;   );&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Our final declaration is to define the new COM interface that DTC supports, IKernelTransaction.  This interface is available off MSDTC's ITransaction objects.  It's declaration looks like:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;[ComImport]&lt;br /&gt;[Guid("79427A2B-F895-40e0-BE79-B57DC82ED231")]&lt;br /&gt;[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]&lt;br /&gt;public interface IKernelTransaction &lt;br /&gt;{&lt;br /&gt;    void GetHandle( out SafeTransactionHandle ktmHandle );&lt;br /&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;With these helpers and declarations out of the way, we can look at what to do in the mainline code to use CreateFileTransacted in a TransactionScope.  We know that we need the transaction handle, that we can get that from IKernelTransaction, and we know that we can get that from a DTC ITransaction.  That turns into:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;SafeTransactionHandle txHandle;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;IKernelTransaction kernelTx =&lt;br /&gt;   (IKernelTransaction) TransactionInterop.GetDtcTransaction&lt;br /&gt;    (Transaction.Current);&lt;br /&gt;kernelTx.GetHandle (txHandle);&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;Putting it all together, we would get a TransactionScope pattern that looks like:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;using (TransactionScope s = new TransactionScope ())&lt;br /&gt;{&lt;br /&gt;  SafeTransactionHandle txHandle;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;  IKernelTransaction kernelTx =&lt;br /&gt;   (IKernelTransaction) TransactionInterop.GetDtcTransaction&lt;br /&gt;    (Transaction.Current);&lt;br /&gt;  kernelTx.GetHandle( txHandle );&lt;br /&gt;  ...&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;  // Do the Win32 file operation such as...&lt;br /&gt;  SafeFileHandle fileHandle = CreateFileTransacted(..., txHandle, null );&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Courier New"&gt;  s.Complete ();&lt;br /&gt;}&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>5</thr:total></entry><entry><id>37252</id><published>2006-09-05T14:32:00.0-05:00</published><updated>2006-09-05T14:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Using TxF in Vista RC1</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="36819"></thr:in-reply-to></entry><entry><id>37253</id><published>2006-09-05T14:33:00.0-05:00</published><updated>2006-09-05T14:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Using TxF in Vista RC1</title><content type="html">Jim Johnson has a new post about how to use TxF with the new model in Vista RC1. You will obviously need...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36819"></thr:in-reply-to></entry><entry><id>37358</id><published>2006-09-07T13:24:00.0-05:00</published><updated>2006-09-07T13:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A Vista update: integration between System.Transactions and the transacted file system and registry</title><content type="html">Gee! Naively, I thought that the new transaction classes were easy and should bring transaction to the masses. I was apparently wrong. Reading this article, with the amount of lines of code, just to do a simple transactional file operation -- this look unecessarily complex (and therefore unusable)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36819"></thr:in-reply-to></entry><entry><id>37434</id><published>2006-09-08T13:08:00.0-05:00</published><updated>2006-09-08T13:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transaction Resources List</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="36819"></thr:in-reply-to></entry><entry><id>42332</id><published>2006-11-21T19:18:00.0-05:00</published><updated>2006-11-21T19:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A Vista update: integration between System.Transactions and the transacted file system and registry</title><content type="html">Jim,
&lt;br /&gt;
&lt;br /&gt;I just posted something to the Channel9 thread in which Surendra Verma explains TxF/TxR. I found his justification of the API changes completely convincing, although, I am kind of sad that this wasn't as simple as I expected.
&lt;br /&gt;
&lt;br /&gt;I have an idea for a possible solution, though maybe it is a stupid one. This in an exerpt of my post on Channel9:
&lt;br /&gt;
&lt;br /&gt;http://channel9.msdn.com/ShowPost.aspx?PostID=259679#259679
&lt;br /&gt;
&lt;br /&gt;What I have in mind is:
&lt;br /&gt;
&lt;br /&gt;1.    The original version of the API supports an ambient transaction and you mentioned that you could still expose that transaction handle at the thread level. I am not sure where things landed in the final Vista build.
&lt;br /&gt;
&lt;br /&gt;2.    Apparently, all the Win32, COM+ and .NET APIs that could take advantage of (optional) transactional semantics, take a file name (or key name for TxR) as a parameter at some point, and ultimately call a Win32 API with a file (key) name as a parameter.
&lt;br /&gt;
&lt;br /&gt;So, what if you could define a special, “transactional” moniker that you would need to preppend to the file name or registry key parameter in order to get “implicit” transactional semantics? I can imagine something like “txfile:”, but it could be something else.
&lt;br /&gt;
&lt;br /&gt;I think this would have a few significant effects: 
&lt;br /&gt;
&lt;br /&gt;1.    The non-transactional semantics of existing code would be preserved even in the presence of an ambient transaction, because hardcoded and existing strings would be lacking the moniker.
&lt;br /&gt;
&lt;br /&gt;2.    You would get back the possibility of using transactions with any existing API that takes a file name (or a key name) from Win32 through the .NET Framework while requiring minimal changes. 
&lt;br /&gt;
&lt;br /&gt;3.    If you included something like this in a later version of Windows, you could still mix explicit, Vista-like calls, with implicit, moniker based, calls in the same transaction. 
&lt;br /&gt;
&lt;br /&gt;Do you think it makes some sense?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36819"></thr:in-reply-to></entry><entry><id>36863</id><published>2006-09-01T11:47:00.0-05:00</published><updated>2006-09-01T11:47:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Vista: An MSDTC proxy enhancement (MLTM)</title><content type="html">&lt;font size="2" face="Arial"&gt;&lt;/font&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;MSDTC has had a structure where there is a proxy (msdtcprx.dll) located in the user's process.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This implemented the Oletx API, managed some local state, and a set of communication channels back to the MSDTC service (msdtc.exe).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Much of the processing went on in the MSDTC service -- almost all of it, in fact.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;Given the transaction topologies that MSDTC would be involved in, this had been a reasonable design choice.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Transactional resources were located in server processes, so multiple processes, and quite often multiple systems, were involved.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That meant that these transactions were going to migrate to the MSDTC service process anyway.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The only thing that could be up for debate was whether or not the transaction went to the MSDTC service when it was created, or a millisecond or so later.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;That began to change with System.Transactions.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The amount of logic in the user process went up, the capability went up, and new mechanisms (such as the promotable single phase enlistment) were introduced that kept the transaction local to the process, even if it involved a database.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Even if the transaction should promote to Oletx, System.Transactions would continue to do what it could to limit the amount of information that would flow back to the MSDTC service.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For instance, volatile enlistments and transaction outcome notifications are multiplexed in the user process, and may not be represented back at the MSDTC service at all.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;With Vista, we also had some new topologies to consider, most especially ones that involved the transactional file system (TxF) or registry (TxR).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In those cases the transacted resource is not in another process.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;More importantly, there is no failure mode where TxF or TxR can fail catastrophically and the user process not be impacted.&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;Consequently, we've added logic in the MSDTC proxy to be able to create transactions, multiplex voters and outcomes, and manage TxF or TxR resources without going to the MSDTC service.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Much like System.Transactions, the proxy will automatically promote to the MSDTC service if the topology requires it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This feature is internally called "MLTM".&lt;/font&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri; mso-outline-level: 1"&gt;&lt;font size="2" face="Arial"&gt;Consider the implications of this.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If you look at the example code shown &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2006/08/31/36819.aspx"&gt;here&lt;/a&gt;, you'll note that System.Transactions acquires the DTC ITransaction interface in order to pick up the kernel transaction handle.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Prior to Vista, this would have promoted the transaction to the MSDTC service, but no longer.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That example should never leave the user process, never add any additional log writes, and only involve the minimal transaction mechanisms in order to execute.&lt;/font&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>4</thr:total></entry><entry><id>37433</id><published>2006-09-08T13:08:00.0-05:00</published><updated>2006-09-08T13:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Transaction Resources List</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="36863"></thr:in-reply-to></entry><entry><id>49901</id><published>2008-01-12T21:09:00.0-05:00</published><updated>2008-01-12T21:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Vista: An MSDTC proxy enhancement (MLTM)</title><content type="html">How do I reinstall  MSDTC?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36863"></thr:in-reply-to></entry><entry><id>49904</id><published>2008-01-13T14:38:00.0-05:00</published><updated>2008-01-13T14:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Vista: An MSDTC proxy enhancement (MLTM)</title><content type="html">You don't really.  There are commands that you can issue to msdtc.exe that effectively reset its configuration, but that's not quite the same thing.  What is the issue that you are facing?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36863"></thr:in-reply-to></entry><entry><id>57771</id><published>2009-03-17T01:25:30.0-05:00</published><updated>2009-03-17T01:25:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Vista: An MSDTC proxy enhancement (MLTM)</title><content type="html">I recently came across your blog and have been reading along. I thought I would leave my first comment. I don't know what to say except that I have enjoyed reading. Nice blog. I will keep visiting this blog very often.

Ruth

http://ramupgrade.info </content><author><name>Anonymous</name></author><thr:in-reply-to ref="36863"></thr:in-reply-to></entry><entry><id>49581</id><published>2007-12-31T11:39:00.0-05:00</published><updated>2007-12-31T11:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Where has Jim been?</title><content type="html">&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I have clearly been away for a while.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This blog effectively shut down about 18 months ago.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For the last few months I've been trying to figure out if I should reopen it, and I set a date of Jan 1 to make that decision.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've decided to attempt to return to writing entries in this blog.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;&lt;strong&gt;So what happened?&lt;/strong&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;At work, the simple answer is that I got extremely busy.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;There was a 12-15 month period where I had a series of projects with very short term deadlines.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Almost none of them involved my normal day job (which also pretty much stopped for that same period).&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;At one level it was a pretty interesting period -- I got involved with teams and people that I normally wouldn't have, and was exposed to technologies and groups that I'd previously been fairly ignorant of.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I always enjoy the opportunities to be exposed to an learn new things.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, it did come with the cost that it was extremely time consuming and very exhausting.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And I'm glad that it mostly seems to be over for now.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;About 10 months ago the biggest time sinks came to an end, and I returned to thinking about the transactions directions and what we could be doing next.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Because so much time had passed, we were now in a rush to get our planning in shape for the next round of releases.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I spent the next few months getting a set of a feature ideas birthed for that next round.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That was as intense a period as any that previous year.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The team is now off making them real, and I believe that they'll prove to be exciting when they ship.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Then, having gotten the work moving, I took stock of where I was.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I realized that I needed a change -- that while I loved the technology and the team, the excitement was ebbing.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I needed to push my envelope again and try something that would stretch me.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;So, about six months ago I changed teams and took a position with the team that does messaging infrastructure -- from the WCF channels through to our enterprise messaging work (which includes MSMQ).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is a very different role for me in many ways: it is more breadth based, while I've been mostly a depth-first architect.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It involves technologies that I've been aware of, but don't have the same level of involvement that I've had with transactions.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And it is with different people, although, again, it is with folks that have been nearby in the past.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I can't say that life has gotten slower.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'm still on a learning curve.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I do, however, think that I understand the slope more than I did when I started.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I &lt;span style="FONT-STYLE: italic"&gt;think&lt;/span&gt; I'll be able to find time for this blog now.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;We'll have to see.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;&lt;strong&gt;What does this mean for this blog?&lt;/strong&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I intend to continue writing here about transactions.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is still a long standing passion of mine.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, you should expect to see a somewhat broader mix of postings.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Some may even be about messaging…&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I'll try to make sure that I mix in articles with code (since those seem to get the highest readership ;)), but I've never posted purely coding articles, and won't start now.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Oh, and, time willing, I will return to the resource manager project series.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>49586</id><published>2008-01-01T02:04:00.0-05:00</published><updated>2008-01-01T02:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Where has Jim been?</title><content type="html">Jim, it is really good to have you back and I am looking forward to your future entries, especially those on messaging...
&lt;br /&gt;Perhaps taking an initial look at AMQP and where it might play a role with MS' plans?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="49581"></thr:in-reply-to></entry><entry><id>49591</id><published>2008-01-01T14:35:00.0-05:00</published><updated>2008-01-01T14:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Where has Jim been?</title><content type="html">Thanks much!  I'll keep the AMQP point in mind for some future post.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="49581"></thr:in-reply-to></entry><entry><id>49593</id><published>2008-01-02T00:23:00.0-05:00</published><updated>2008-01-02T00:23:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Where has Jim been?</title><content type="html">Jim, good to hear from you again :-) I am looking forward to your postings particularly on your experiences with WCF - Messaging Infrastructure. Oh yes you could still consider the RM that you planned . . .  </content><author><name>Anonymous</name></author><thr:in-reply-to ref="49581"></thr:in-reply-to></entry><entry><id>49582</id><published>2007-12-31T11:41:00.0-05:00</published><updated>2007-12-31T11:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">The end of an era</title><content type="html">  
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I &lt;a href="http://www.openvms.org/stories.php?story=07/12/12/8359748"&gt;read&lt;/a&gt; a couple of weeks ago that HP is closing ZKO (Spitbrook Road, Nashua).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I have a lot of fond memories of working in VMS development in ZKO1/1 (and later ZKO3/4) in the 80's and early 90's.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It's sad to see that it is going.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Of course I miss the people -- too many to try to count.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It was a great place to work, and I'm proud of the work that we did back then.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;VMS was an excellent product for its time, and portions of it compare favorably to anything being done today.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I miss the DEC traditions around April 1st, especially those that Andy had invested in.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In ZKO, the decision to name conference rooms after people I'd heard of, and the quotes they picked -- some of which I use to this day (e.g. "anything not worth doing is not worth doing well").&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I also wonder what will happen to the nonpaged pool behind the cafeteria, or the 7-bit ASCII colored bars at the main entrance (that used to say "DigitalSoftwa Reengineering" due to an unfortunate line break).&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;And, yes, I enjoyed DEC, but despaired of Digital.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Finally, one small personal tidbit: I remember giving a lecture on 'what is this 2PC thing anyway' to some VMS devs around 1990.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The thing that makes it memorable was that it was in the [Nancy] Lynch conference room.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The quotes on the walls were at least as good as anything in my slides :).&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>50294</id><published>2008-02-22T19:14:00.0-05:00</published><updated>2008-02-22T19:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The end of an era</title><content type="html">Yes, it was sad to hear about ZKO closing. We all had many good years in ZKO1 and ZKO3. But what made it special has been waning for years: the people. Luckily, it's not too hard to keep in touch with many of them. I remember you working in RMS and then getting into transactions. IIRC, I had a polo shirt that said something like DECTPC: We Are Committed, but that's an old memory and likely to be incorrect.
&lt;br /&gt;
&lt;br /&gt;Best of luck with your change in direction. I hope that you find it as rewarding as it promises to be.
&lt;br /&gt;
&lt;br /&gt;Best wishes,
&lt;br /&gt;-b</content><author><name>Anonymous</name></author><thr:in-reply-to ref="49582"></thr:in-reply-to></entry><entry><id>50344</id><published>2008-02-29T07:03:00.0-05:00</published><updated>2008-02-29T07:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The end of an era</title><content type="html">Ben,
&lt;br /&gt;
&lt;br /&gt;Thanks!  It's great to hear from you.  And yes, I remember those shirts as well.
&lt;br /&gt;
&lt;br /&gt;Hope things are well.
&lt;br /&gt;Jim.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="49582"></thr:in-reply-to></entry><entry><id>52674</id><published>2008-08-22T02:47:46.0-05:00</published><updated>2008-08-22T02:47:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: The end of an era</title><content type="html">Ah, Spitbrook - was there '85-'87 and lived up in Francestown. Now that takes me back a piece...

RIP...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="49582"></thr:in-reply-to></entry><entry><id>50334</id><published>2008-02-28T11:49:00.0-05:00</published><updated>2008-02-28T11:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Building the transaction protocol documents</title><content type="html">&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;You've undoubtedly read about the &lt;a href="http://www.microsoft.com/presspass/presskits/interoperability/default.mspx"&gt;announcement&lt;/a&gt; last week to publish our protocol documents on msdn.  If you've gone and &lt;a href="http://msdn2.microsoft.com/en-us/library/cc203350.aspx"&gt;looked&lt;/a&gt;, there's an extensive set of documents posted.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;You may also remember that I mentioned that I'd been involved in some projects that had taken up quite a bit of my time over the past 18 months.  One of those projects involved some of those documents -- the MSDTC protocols &lt;a href="http://msdn2.microsoft.com/en-us/library/cc224892.aspx"&gt;[MS-CMPO]&lt;/a&gt;, &lt;a href="http://msdn2.microsoft.com/en-us/library/cc224824.aspx"&gt;[MS-CMP]&lt;/a&gt;, &lt;a href="http://msdn2.microsoft.com/en-us/library/cc229116.aspx"&gt;[MS-DTCO]&lt;/a&gt;, and others.  If you take a look at these documents, you'll find that they describe a fairly complex set of messages, state machines, and inter-component interactions.  Constructing this documentation was a pretty interesting challenge, and one that I thought might interest you.  What follows are my personal observations about what we did to produce these transaction documents.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;Much like the product code, the transaction feature team was responsible for the construction of these documents.  We were the experts on the code, and therefore made the best sense for understanding what the content of the documents needed to be.  There were ancillary groups that provided editing, review, and formatting support.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;One of the first big tasks we faced was how to describe 'the protocol'.  Like all transaction managers, we had a set of interlocking protocols and state machines that arbitrated operations between applications, resource manager, and other transaction managers.  Each arm typically has one or more 'protocols', but their operation is dependent on the aggregate state across them.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;Or, to put it another way, if I only look at, say, a resource manager to transaction manager exchange in isolation I'll find nondeterministic behavior around whether or not a transaction enlist request will succeed.  What makes it nondeterministic is that the failure is a result of the aggregate state the transaction is in, which is effectively invisible to our particular exchange (for instance, the app may have already requested that the transaction commit, and the transaction manager may have already issued request to prepare messages to the other participants).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;This is a problem that the various standards have faced.  In my experience, none have dealt with it terribly well.  WS-AtomicTransactions takes a stab in the state tables at identifying the existence of this aggregate state, but is pretty terse on how it works.  XA is a bit more verbose, but it is also pretty hard to work out the aggregate state machine from its various tables.  Frankly, we had to find a way to do better.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;Before I go on, please do note that this is not a criticism of these standards -- it's more a side effect of the inherent tradeoffs a standards org has to make in the face of multiple vendors with differing implementations.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;The second big task was to then determine exactly how the protocols worked.  What we needed to ensure was that the documents reflected the actuality of how the protocol was implemented, across the range of Windows versions.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;There's pretty obviously only one solution -- go to the code.  The dev team writes the support fixes for MSDTC, so it had current experience with the various code bases.  That helped, inasmuch as it made the archeology effort more efficient.  Of course, most of the changes were additions.  The protocols are pretty much upwardly compatible, after all.  But still, over the years there have been quite a few changes.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;At this point the team had an outline for the documents, and a large amount of data that it had accumulated.  The actual authoring and revising then began, and were run essentially like any other project.  There was a coordinator that assigned out tasks, monitored progress, and kept an eye on how the docs were shaping up.  As we learned details, he oversaw ensuring that this information was quickly shared with the rest of the team.  This allowed us to produce the documents on the aggressive time schedule that were required for delivery.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;One special aside is that when you look at the documents you'll note that section 4 contains examples of message exchanges.  What we did was to assign section 4 to one of our senior testers.  He took the draft documents, constructed specialized test programs that spoke the protocols, and captured the actual message contents in the samples.  This turned out to be an effective early QA test of the document, and found a couple of product bugs as well.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;This was an intense period of activity.  I'm happy with the technical content of the transaction documents.  I’m also proud of how the team came together to produce them.  But you have to ask, who might want to use it?  I can't speak for anyone here, but I know folks that could have used it to construct transaction bridges to OpenVMS, and I could imagine one or more of the J2EE vendors doing so today.  Only time will tell.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: 'Calibri','sans-serif'"&gt;Jim.&lt;/span&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>2</thr:total></entry><entry><id>50383</id><published>2008-03-06T10:18:00.0-05:00</published><updated>2008-03-06T10:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Building the transaction protocol documents</title><content type="html">Jim,
&lt;br /&gt;  welcome back!
&lt;br /&gt;A great set of documents, I only wish I understood the half of them.
&lt;br /&gt;
&lt;br /&gt;Cheers, john</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50334"></thr:in-reply-to></entry><entry><id>52699</id><published>2008-08-23T12:29:54.0-05:00</published><updated>2008-08-23T12:29:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Building the transaction protocol documents</title><content type="html">Intense period of activity indeed! It made me smile reading through the docs for a bit.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50334"></thr:in-reply-to></entry><entry><id>50484</id><published>2008-03-15T14:44:00.0-05:00</published><updated>2008-03-15T14:44:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">MSDTC changes in WS2008, Part 1: Introduction</title><content type="html">&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Windows Server 2008 has a number of significant changes to MSDTC, addressing issues from performance, simplicity, and reach.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These changes are the culmination of a stream of work that began with Vista, and was heavily influenced by .Net from 2.0 onwards.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The changes in WS2008 had the following goals:&lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Support the use of transacted NTFS and transacted Registry operations.&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Increase flexibility of deployment, predictability of performance in a Windows cluster.&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Improve the diagnostics available for troubleshooting.&lt;/span&gt;&lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Be a 'good Windows citizen'.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Much of the visible changes to support transacted NTFS and registry operations showed up in Vista.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The changes in WS2008 are largely to support those features in a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'll talk about them in passing as part of the overall cluster changes.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The biggest set of changes, by far, had to do with the cluster support.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is what I'm going to focus on in parts 2 &amp;amp; 3.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Through WS2003, MSDTC could only have a single instance on a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This paralleled the single-instance-per-node assumption that holds for non-clustered systems.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, it meant that entering a cluster meant that the local MSDTC was disabled, thus preventing it from completing any outstanding recovery.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It also meant that you could be very asymmetric performance patterns depending on where failovers had taken the recovery resource, such as a SQL server instance, and the MSDTC instance.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;As you can imagine, you'd get much better performance when they happened to be on the same system vs. when they weren't.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;In WS2008 the underlying assumption has been removed.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;You can have any number of MSDTC cluster resources, they can be affinitized to other cluster resources (so that you can keep the transaction on the same system, regardless of failover patterns), you can retain the use of the local (per-node) MSDTC instances for those cases where the application is not cluster-aware, and you can split a cluster safely without requiring that all transactions be resolved.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Finally, there were two sets of changes that we made that should be considered largely internal.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;One was a set of changes to unify and extend the advanced diagnostic tracing features that PSS would typically use when resolving a customer problem.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The other was a set of changes related to the quality and feature expectations for any component going into Windows.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Although neither should directly impact any customers, I'll touch on those in part 4.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Jim.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>2</thr:total></entry><entry><id>51361</id><published>2008-06-29T07:15:24.0-05:00</published><updated>2008-06-29T07:15:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Windows Server 2008的MSDTC改进</title><content type="html">事务处理作为企业级开发必备的基础设施，WindowServer2008在事务处理上的改进也是很大的，无论是开发还是配置管理方面都得到了极大的改进。有几篇关于WindowsServer2008的...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50484"></thr:in-reply-to></entry><entry><id>56788</id><published>2009-02-17T17:45:57.0-05:00</published><updated>2009-02-17T17:45:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to Configure Multiple Instances of Distributed Transaction Coordinator (DTC) on a Windows Server Failover Cluster 2008</title><content type="html">What we will be going over in this blog is one of the improvements of Distributed Transaction Coordinator</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50484"></thr:in-reply-to></entry><entry><id>50489</id><published>2008-03-16T10:24:00.0-05:00</published><updated>2008-03-16T10:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">MSDTC changes in WS2008, Part 2: Cluster requirements</title><content type="html">&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;As a preamble, I have to point out that most customers have little to no trouble with MSDTC in a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It has been a great solution for those that need transactional consistency and high availability.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Nothing in this description should suggest otherwise.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;However, one fact of life is that Windows shows the power of large numbers.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;We have vastly more users than I've encountered in any previous company.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Because of that, you can see trends and identify opportunities for improvement much more easily than I've seen in the past.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The clustering changes came about as a response to a number of issues that we'd been seeing with MSDTC in a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They basically fell into three categories:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Complexity of setting up a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Setting up a cluster with MSDTC was complex -- it involved a number of steps, those steps had a fragility in how they related to setting up other cluster resources, such as SQL Server, and they required that the system actually degrade in capability as an initial step.&lt;br /&gt;&lt;br /&gt;To put it another way, setting up a cluster first disabled the MSDTC instances you did have, then you had to know to create a cluster MSDTC instance, and then you could add in new transaction-aware cluster resources (e.g. SQL Server).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The fewer steps and the fewer ordering dependencies that we could get to, the better.&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Asymmetric performance patterns.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Once the cluster was correctly set up, there was a second surprise.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;As the cluster lived through node failures, and depending on the application design, the performance of e.g. SQL Server or MSMQ could change significantly from one failover point to the next.&lt;br /&gt;&lt;br /&gt;We all know that full distributed transactions have overhead.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In some cases, quite considerable overhead.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;That's why so much of the industry's work is and has been around optimizations.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In the case of MSDTC, the performance when MSDTC is on the same node as the application and / or resource managers is higher than when it is on its own node.&lt;br /&gt;&lt;br /&gt;Given that there is one MSDTC cluster instance, any reasonably complex configuration will have SQL or MSMQ instances that move from being remote to that MSDTC instance to being on the same system as MSDTC, and then back.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;As that happens the performance profile for their interactions with MSDTC change significantly.&lt;br /&gt;&lt;br /&gt;This means that you should do your performance planning against the case when MSDTC is located on another node from the application and resource managers.&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Migration of nodes into and out of a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Note above that the local MSDTC is disabled upon entry into a cluster, and the MSDTC cluster instance replaces the role of that local MSDTC.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This has a direct implication that when a node joins a cluster it needs to be fully recovered, and the same is true when it permanently leaves.&lt;br /&gt;&lt;br /&gt;Frequently this isn't a problem when joining, if you assume that nodes that are put into a cluster are pretty much idle nodes anyway.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is only in more dynamic load management cases that this one could be a concern.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;At the root of each of these points was a longstanding design decision to have only one active MSDTC instance in a cluster -- and it had to be a cluster resource.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This was the cluster representation of the assumption that topologies were pretty much fixed: that a resource manager would be in a configuration where they were always using the same transaction manager, and likewise for the applications.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;And to be clear, this wasn't a bad assumption for how systems have actually worked.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It reflected how systems were configured, how COM+ was configured, and how the hardware tended to be deployed.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Beginning around .Net 2.0, though, we began to explore ways to remove or reduce this assumption.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This was driven by an assumption that we'll be seeing increased mobility of applications, and a desire to be able to isolate one application, or one resource, from another.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;First, we had to deal with the assumption as present in the MSDTC proxy.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It would bind to the MSDTC instance specified by the first call in that process.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Until the last few years, you've not been able to find out which one that was.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Now you can for any version that supports the &lt;a href="http://msdn2.microsoft.com/en-us/library/ms687122(VS.85).aspx"&gt;ITmNodeName&lt;/a&gt; interface.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Next, in Vista we changed the proxy further to bind to multiple MSDTC instances, once per unique MSDTC name specified.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;With this in place, you could change MSDTC instances on a per transaction basis, both in normal operation and during recovery.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;This was a sufficient basis to then begin working through the various design issues to handle multiple MSDTC instances in a cluster.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Interestingly, most came from configuration choices or management operations.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;On the other hand, the protocol had sufficiently abstracted the idea of an MSDTC instance that I can't remember any protocol changes that were needed specifically for this, although I'll admit that I've not checked recently.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The design issues that I remember being at the top were:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;What is a 'good' MSDTC instance to pick?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If I take an application or resource running today, it won't specify which MSDTC instance to use.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I don't want to just use a cluster-wide default, or I'll get largely what I get today -- one cluster instance handling everything.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;So, how should a particular instance be picked?&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;What does the cluster default MSDTC instance mean?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Is it anything more than an instance that happens to have the same name as the cluster alias, or is it deeper than that?&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;What configuration needs to be consistent across all MSDTC instances, and what should be specific to a given instance?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Also, much more mundanely, where should all this configuration data go?&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;What are the management changes to support these configurations?&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;What are the command line changes, and what are the MMC plugin changes?&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I'll pick up with how we approached these questions in part 3.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Jim.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>6</thr:total></entry><entry><id>50506</id><published>2008-03-18T01:34:00.0-05:00</published><updated>2008-03-18T01:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 2: Cluster requirements</title><content type="html">Jim,
&lt;br /&gt;Very very interesting and thought provoking observations on how MS-DTC clustering works and how it scales well when RM, MSDTC-Cluster instance is hosted on the same node . . .
&lt;br /&gt;
&lt;br /&gt;while I have not practically worked on MS-DTC clustering to get the first hand "feel" of the scalability, i was wondering what were your experiences when MS-DTC cluster instance had to hand shake with other TM (like XA) (root of the commit tree still being MS-DTC) either thru Host Integeration Server or by other native means. Waiting to hear and learn from your experiences. Thanks - </content><author><name>Anonymous</name></author><thr:in-reply-to ref="50489"></thr:in-reply-to></entry><entry><id>50517</id><published>2008-03-19T08:44:00.0-05:00</published><updated>2008-03-19T08:44:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 2: Cluster requirements</title><content type="html">Vijay,
&lt;br /&gt;
&lt;br /&gt;Thanks for your comment.  I'm glad that you're finding the entries interesting.  Fyi, I should be posting part 3 this weekend.
&lt;br /&gt;
&lt;br /&gt;I've not personally used HIS directly, but I have worked with tests that either drive and XA resource, or are driven by an XA TM (there might be an interesting article or two in how those configurations work…)
&lt;br /&gt;
&lt;br /&gt;While there is some additional logic around translating back and forth, the overall topology is pretty much the same as any other distributed transaction.  I've not measured it, so I can't say that the performance is the same.  All I can say is that it doesn't add any new remote connections, which is what I was trying to point out around the cluster behavior.
&lt;br /&gt;
&lt;br /&gt;Yes, this would be a basis for an interesting article.  I'll put it on the list :)
&lt;br /&gt;
&lt;br /&gt;Thanks,
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50489"></thr:in-reply-to></entry><entry><id>51362</id><published>2008-06-29T07:15:47.0-05:00</published><updated>2008-06-29T07:15:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Windows Server 2008的MSDTC改进</title><content type="html">事务处理作为企业级开发必备的基础设施，WindowServer2008在事务处理上的改进也是很大的，无论是开发还是配置管理方面都得到了极大的改进。有几篇关于WindowsServer2008的...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50489"></thr:in-reply-to></entry><entry><id>56789</id><published>2009-02-17T17:46:02.0-05:00</published><updated>2009-02-17T17:46:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to Configure Multiple Instances of Distributed Transaction Coordinator (DTC) on a Windows Server Failover Cluster 2008</title><content type="html">What we will be going over in this blog is one of the improvements of Distributed Transaction Coordinator</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50489"></thr:in-reply-to></entry><entry><id>73871</id><published>2009-12-07T17:22:04.0-05:00</published><updated>2009-12-07T17:22:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 2: Cluster requirements</title><content type="html">Jim,

I'm a little confused about the statement ' the local MSDTC is disabled upon entry into a cluster, and the MSDTC cluster instance replaces the role of that local MSDTC'.  What happens if there is no MSDTC cluster resource, but simply local MSDTC services running on each of the cluster nodes (in our case just 2 nodes)?

Is that a supported (or sound) SQL 2008 cluster implementation (i.e. no cluster MSDTC resource)?

Also, if we were in the middle of a distributed transaction when the primary node failed and the cluster migrates to the failover node, what happens to the distributed transaction?
</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50489"></thr:in-reply-to></entry><entry><id>74634</id><published>2010-02-18T16:48:27.0-05:00</published><updated>2010-02-18T16:48:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 2: Cluster requirements</title><content type="html">First, to be clear, the quote is about the behavior of pre-WS2008 versions, and was about what happened when a system configuration was changed to have it join a cluster.

In those versions, once you had a cluster MSDTC instance, the local instance became unaddressable (the 'local' msdtc instance would always resolve to the cluster one).  So, if you had unrecovered/unresolved transactions, then you had a problem.

There were some differences between WS2000 and WS2003, but the above is the basic thrust.  One difference, IIRC (and I'm not near the code or docs just now, so use a grain of salt), is that in WS2003 the local instance was proactively disabled when the system was configured into a cluster.

As of WS2008, you can safely have local and cluster MSDTC instances coexisting.  However, you need to recognize that local instances are not highly available.  So, if you have a clustered SQL instance using the local MSDTC instances, then you run the risk that some recovery/resolution operations will be delayed until the original system reboots.

So, no, I wouldn't consider having a clustered SQL server using a system-local MSDTC as a good topology.

Oh, and for the last question, if the transaction is active when the primary node fails, it will abort.  If the participants (e.g. SQL) on the primary node had voted, then recovery will occur on the failover node -- that recovery information will identify the MSDTC instance to contact for recovery.

Hope that helps,
Jim.

</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="50489"></thr:in-reply-to></entry><entry><id>50536</id><published>2008-03-23T11:52:00.0-05:00</published><updated>2008-03-23T11:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;As I mentioned in parts &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2008/03/15/50484.aspx"&gt;1&lt;/a&gt; &amp;amp; &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2008/03/16/50489.aspx"&gt;2&lt;/a&gt;, WS2008 clusters are designed to have more than one functioning MSDTC instance.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Once the DtcGetTransactionManager[Ex] had been upgraded to connect to multiple MSDTC instances simultaneously, the issues next focused on configuration and management.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;MSDTC Configuration&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;An MSDTC instance is defined by the information to establish an RPC connection, a log file, and some security and accessibility information.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The connection information consists of a NetBIOS name and four GUIDs, also known as connection IDs, or CIDs.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In a non-clustered system, the NetBIOS name is the one used by the system, and the rest of the information is located in the local registry.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The CIDs and log file information can be found under HKLM\Software\Classes\CID, and the pretty much the rest can be found under HKLM\Software\Microsoft\MSDTC.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;These settings represent three roles: what does the MSDTC service need to configure itself, what does the system provide, and what does the MSDTC proxy need to contact the MSDTC service.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;On a single node system it can be hard to tell these apart.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;But then you look at a pre-WS2008 cluster and you'll see that some of the settings, specifically the CIDs, the security settings, and the log location, have been migrated into the cluster registry hive (the name is calculated, so there isn't a simple path to point out).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Information pertaining to the capabilities of an individual system, such as tracing, XA DLL registration, and version information remain in the various local hives.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The MSDTC proxy understands when it is in a cluster, so that information is not a clearly derived.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;At one level, the WS2008 changes amounted to supporting multiple entries in the cluster registry, each of which is attached to a different cluster resource.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For backwards compatibility, one of the MSDTC cluster instances is designated the default cluster instance, and uses the cluster alias as the NetBIOS name.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Add a command line feature to start an MSDTC service for a specific configuration, and we're done.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Picking 'the right MSDTC'&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;There's a big problem with the solution so far.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If the application or resource manager specifies the MSDTC instance in DtcGetTransactionManager[Ex], then the correct MSDTC instance will be used, and you'll get the benefits of from being able to spread the traffic around, from the instance always being local to your resource, and so forth.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Unfortunately, almost no one specifies the MSDTC instance to use.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is partially due to the assumption that there was just one, hardened by the MSDTC proxy behavior to bind to the first MSDTC instance specified in the process.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Figuring out how to select a 'good' MSDTC instance was the next big hurdle.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;A good MSDTC is one that isn't overly remote from the caller, that has the same availability characteristics, or better, of the caller, and one that doesn't add additional MSDTC instances for no good reason.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Oh, and did I mention that existing programs need to continue to work?&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;This then produced the following rules:&lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;Any caller that does not specify whether it is a local application or a cluster resource uses the default cluster instance.&lt;/span&gt; 
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;If the caller is specified as a local application, the local MSDTC instance, if available, is used.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Otherwise the cluster default instance is used.&lt;/span&gt; 
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;If the caller is specified as aligned with a specific cluster resource:&lt;/span&gt; 
&lt;ul type="disc" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;If there is an MSDTC instance that is part of that cluster resource, it will be used.&lt;/span&gt; 
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;If not, and there is a cluster default MSDTC instance available, it will be used.&lt;/span&gt; 
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;If there are no cluster instances available, then a local MSDTC instance will be used with a notification of a potential loss of availability.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.75in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;A caller can be identified in two ways: programmatically or via configuration.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;For the first, the DtcGetTransactionManagerEx call has been extended.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The call has the signature:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;EXTERN_C EXPORTAPI __cdecl DtcGetTransactionManagerEx (&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;tchar * pszHost,&lt;span style="mso-spacerun: yes"&gt;      &lt;/span&gt;// NetBIOS name of the MSDTC instance, or null&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;tchar *pszTmName,&lt;span style="mso-spacerun: yes"&gt;     &lt;/span&gt;// must be null&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;REFIID riid,&lt;span style="mso-spacerun: yes"&gt;          &lt;/span&gt;// IID for the interface to retrieve&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;DWORD grfOptions,&lt;span style="mso-spacerun: yes"&gt;     &lt;/span&gt;// Configuration options&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;void * pvConfigParams,// Configuration parameters&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;void **ppvObject&lt;span style="mso-spacerun: yes"&gt;      &lt;/span&gt;// returned object instance&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Consolas"&gt;);&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 1.875in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The structure passed in pvConfigParams is what has been extended to now look like:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;typedef struct _OLE_TM_CONFIG_PARAMS_V2&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;DWORD&lt;span style="mso-spacerun: yes"&gt;           &lt;/span&gt;dwVersion;&lt;span style="mso-spacerun: yes"&gt;         &lt;/span&gt;// Must be set to 2&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;DWORD&lt;span style="mso-spacerun: yes"&gt;           &lt;/span&gt;dwConcurrencyHint; // Set to 0&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;APPLICATIONTYPE applicationType;&lt;span style="mso-spacerun: yes"&gt;   &lt;/span&gt;// Specifies alignment to local or not&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;GUID&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;clusterResourceId; // If not local, align to this resource&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;} OLE_TM_CONFIG_PARAMS_V2;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;typedef enum APPLICATIONTYPE&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;{&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;LOCAL_APPLICATIONTYPE,&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;    &lt;/span&gt;CLUSTERRESOURCE_APPLICATIONTYPE&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Consolas"&gt;};&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Note that the call to DtcGetTransactionManagerEx can specify the specific MSDTC instance to use.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The new configuration parameter settings allow for a different approach.  Rather than having the caller specify the MSDTC instance to use, by name, these new settings allow a caller to make statements about itself that the MSDTC proxy will use to select a reasonable MSDTC instance.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The assumption is that statements that a caller makes about itself are less likely to change due to a configuration change in the cluster, and leaves more leeway for later optimization algorithms -- such as continuing to use an existing cluster MSDTC instance if it is already in use for that transaction.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;It is also important to realize that in the case of the CLUSTERRESOURCE_APPLICATIONTYPE what the caller is specifying is the preferred cluster resource to align to.  In the case of a cluster resource this is most likely to be itself.  In the case of, say, a node-local COM+ component, this could well be the cluster resource that the SQL Server that it uses is in.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;&lt;br /&gt;The second way that a caller can be identified is via external configuration settings known as TM mappings.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The configuration specifies executables, COM+ application IDs, and cluster resource IDs that are to be mapped to specific MSDTC instances.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These settings are used when the caller to DtcGetTransactionManagerEx supplies neither the name of an MSDTC instance or a OLE_TM_CONFIG_PARAMS_V2 structure.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The configuration settings can be found under HKLM\Cluster\MSDTC\TMMappings.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The values can be set, viewed, and deleted via options on msdtc.exe, as follows:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;To set up a mapping, use &lt;br /&gt;msdtc.exe -tmMappingSet -name &lt;MAPPING name="name"&gt;&lt;/MAPPING&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.75in; FONT-FAMILY: Calibri"&gt;[-exe &amp;lt;pathname&amp;gt; &lt;FULL exe="exe" name="name"&gt;| -service &amp;lt;full service name&amp;gt; &lt;SERVICE name="name"&gt;| -complusappID  &amp;lt;app ID&amp;gt;&lt;APPID&gt;]&lt;/APPID&gt;&lt;/SERVICE&gt;&lt;/FULL&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.75in; FONT-FAMILY: Calibri"&gt;[-local|-clusterResourceName &amp;lt;resource name&amp;gt;]&lt;CLUSTER dtc="dtc" resource="resource" name="name" p="p"&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.75in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;ul type="circle" style="MARGIN-TOP: 0in; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in; DIRECTION: ltr; unicode-bidi: embed"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;To view a mapping, use&lt;br /&gt;msdtc.exe -tmMappingView -name &lt;MAPPING name="name"&gt;&lt;br /&gt;&lt;/MAPPING&gt;&lt;/span&gt;  
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;To view all known mappings, use&lt;br /&gt;msdtc.exe -tmMappingView *&lt;br /&gt;&lt;/span&gt;  
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;To delete a mapping, use&lt;br /&gt;msdtc.exe -tmMappingClear -name &lt;MAPPING name="name"&gt;&lt;br /&gt;&lt;/MAPPING&gt;&lt;/span&gt;  
&lt;/li&gt;&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="FONT-SIZE: 11pt; FONT-FAMILY: Calibri"&gt;To delete all known mappings, use&lt;br /&gt;msdtc.exe -tmMappingClear *&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;For instance, let's say that I have a application "JoesGarageShopApp.exe" that only works against local files and only on a single node.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'd like that application to only use the local MSDTC instance, whichever that one is.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'd do that with:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri"&gt;msdtc.exe -tmMappingSet -name JoesGarageShopMapping -exe JoesGarageShopApp.exe -local&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;What happens to resource managers?&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;From the point of view of the resource manager, effectively nothing.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They make the calls to the MSDTC proxy, and receive notifications in the way that they always have.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;There are two significant changes, but they are done transparently behind the MSDTC proxy interface.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The first is that a transaction passed into a resource manager from an application may be using a different MSDTC instance than the one that the resource manager wishes to use.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If that is the case, the MSDTC proxy will emulate the operations to pull the transaction to the new MSDTC instance (see &lt;a href="http://blogs.msdn.com/florinlazar/archive/2004/10/02/236965.aspx"&gt;http://blogs.msdn.com/florinlazar/archive/2004/10/02/236965.aspx&lt;/a&gt; for a good description of how this normally works).&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;The second change is that pPrepInfo presented at &lt;a href="http://msdn2.microsoft.com/en-us/library/ms679213(VS.85).aspx"&gt;IResourceManager::Reenlist&lt;/a&gt; may specify a different MSDTC instance than the one that is currently being used.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In that case, the MSDTC proxy, as part of handling the&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Reenlist request, will internally issue the correct DtcGetTransactionManagerEx call to connect to that MSDTC instance as well.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Kernel Transaction Support&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;As something of a detail point, there is some underlying plumbing in place to handle failover of transacted NTFS and transacted registry resource managers.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The overall logic is the same as I've talked about above.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The one difference is that the kernel interfaces are not themselves remotable, so there is an agent service (the KtmRm service) that acts as the intermediary between the MSDTC instance and the kernel transaction manager.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Jun 1, 2008: Updated to fix a bug in the msdtc.exe command line syntax. &lt;/p&gt;&lt;/CLUSTER&gt;&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>21</thr:total></entry><entry><id>50642</id><published>2008-04-02T07:16:00.0-05:00</published><updated>2008-04-02T07:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Jim,
&lt;br /&gt;Pl help me understand this. For those existing RM's that would have made DtcGetTransactionManager calls (instead of DtcGetTransactionManagerEx), would they be able to reap the same performance benefit since they would have acquired the proxy of the default TM instance and it is possible that RM and the TM instamce would have been deployed on different nodes. I kind of missed my understanding on this part when i went thru your explanation. Thanks . . .</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>50645</id><published>2008-04-02T11:17:00.0-05:00</published><updated>2008-04-02T11:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">They can take advantage of the new features, but not without help.  Basically, DtcGetTransactionManager defaults several of the options in DtcGetTransactionManagerEx.  One of those is to use the default TM instance.
&lt;br /&gt;
&lt;br /&gt;However, that does mean that if you use the administrative tools described above (e.g. msdtc -tmMappingSet ...), then you can change what the default TM is for a caller.  It is not as precise as the programmatic approach, but it is a way that such code can make use of the new cluster features.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>50650</id><published>2008-04-03T06:54:00.0-05:00</published><updated>2008-04-03T06:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Jim,
&lt;br /&gt;Thanks ... 
&lt;br /&gt;was wondering if we can have a seperate discussion particularly on what it entails to scale up custom RMs and Resource Dispensers to reap the full benefit at a solution level. I do know that there are some areas that may require special attention while scaling up RM/RD instances. Particularly i want to understand more on how we will manage better scalebility on the custom connection (DCOM, Socket whatever) that we generally employ when connecting RD with RM to export transaction-ids for RMs to enslist the same with the TM. I know that OLETXN object model (atleast the version that I used way back in 1999) is silent on how Resource Manager and Resource Dispensers connect among themselves .. Also RD being stateful, are there any special considerations that we need to factor when scaling RD instances.. Thanks Jim </content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>50668</id><published>2008-04-06T18:05:00.0-05:00</published><updated>2008-04-06T18:05:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Vijay,
&lt;br /&gt;
&lt;br /&gt;Yes, I'd be happy to do so.  Please send me email and let's discuss it.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>51069</id><published>2008-05-29T06:58:00.0-05:00</published><updated>2008-05-29T06:58:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Jim,
&lt;br /&gt;Excellent information on MSDTC changes in WS2008. In the "msdtc.exe -tmMappingSet" command, -resourceName is not a valid option. The option is -clusterResourceName. Can you give an example of mapping MSDTC resource to SQL Server 2005 resource? OR can you validate if the following is correct?
&lt;br /&gt;Example- We have a SQL Server 2005 resource with service name MSSQLServer and have two MSDTC resources called MSDTC-win2k8msdtc and MSDTC-MSDTC. And I want the SQL Server resource to use MSDTC-win2k8msdtc. Is the below command correct?
&lt;br /&gt;
&lt;br /&gt;Msdtc.exe –tmMappingSet –name MyMapping –service MSSQLServer –clusterresourcename MSDTC-win2k8msdtc
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>51088</id><published>2008-06-01T16:03:00.0-05:00</published><updated>2008-06-01T16:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Uttam,
&lt;br /&gt;
&lt;br /&gt;Thanks much.  You're right, there was a late change in the command line.  That's what I get for doing the article away from the code.  I've corrected the text of the post to reflect that.
&lt;br /&gt;
&lt;br /&gt;The command you specified should probably work, based on some assumptions.  The service name is the full SQL Server service name.  It follows a pattern of MSSQLServer[number], so if this is the first SQL Server service, then that would be the right name.  You should verify if it is on your system.
&lt;br /&gt;
&lt;br /&gt;Second, the cluster resource name can be the MSDTC cluster resource, but I'm assuming that you have the MSDTC cluster resource in the same group as the SQL resource.  In that case you could use the SQL cluster resource name.  Then MSDTC would automatically attempt to use the MSDTC cluster resource that is in the same group.
&lt;br /&gt;
&lt;br /&gt;Hope this helps,
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>51363</id><published>2008-06-29T07:15:59.0-05:00</published><updated>2008-06-29T07:15:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Windows Server 2008的MSDTC改进</title><content type="html">事务处理作为企业级开发必备的基础设施，WindowServer2008在事务处理上的改进也是很大的，无论是开发还是配置管理方面都得到了极大的改进。有几篇关于WindowsServer2008的...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>52646</id><published>2008-08-20T22:46:58.0-05:00</published><updated>2008-08-20T22:46:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Thanks Jim. This is very helpful. As I was testing, I had created two MSDTC resources in seperate groups (different from the SQL Server group). In that case the cluster resource name needs to be the MSDTC cluster resource, right? If not then how will it know which MSDTC to map to. 

Also, is there a way we can test if SQL Server is infact using the right MSDTC resource?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>53139</id><published>2008-09-16T08:52:51.0-05:00</published><updated>2008-09-16T08:52:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">I find it strange that you manage to compile with this definition of _OLE_TM_CONFIG_PARAMS_V2. I am including xolehlp.h in my code and the compiler (VS 2008 SP1) yells:

Error	6	error C2061: syntax error : identifier 'APPLICATIONTYPE'	c:\program files\microsoft sdks\windows\v6.1\include\xolehlp.h	65	MyTxnPrj

The problem seems to be with the enum definition for APPLICATIONTYPE which is (as you wrote):

typedef enum APPLICATIONTYPE
{
    LOCAL_APPLICATIONTYPE,
    CLUSTERRESOURCE_APPLICATIONTYPE
};

but should have been:

typedef enum APPLICATIONTYPE
{
    LOCAL_APPLICATIONTYPE,
    CLUSTERRESOURCE_APPLICATIONTYPE
} APPLICATIONTYPE;

Makes me wonder what setting am I missing to make it work...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>53141</id><published>2008-09-16T09:16:16.0-05:00</published><updated>2008-09-16T09:16:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Note that the APPLICATIONTYPE enum definition will give you trouble if you write in C rather than in C++. For anyone using C to call this fix the definition in xolehlp.h to:

typedef enum APPLICATIONTYPE
{
    LOCAL_APPLICATIONTYPE,
    CLUSTERRESOURCE_APPLICATIONTYPE
} APPLICATIONTYPE;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>53991</id><published>2008-10-20T17:40:20.0-05:00</published><updated>2008-10-20T17:40:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">&lt;p&gt;[Jim: I asked the transactions team to look into this.  Vikram took at look at it and posted this reply.]&lt;/p&gt;
&lt;p&gt;Hi Dror,&lt;/p&gt;
&lt;p&gt;You are right.  The enum definition should indeed be:&lt;/p&gt;
&lt;p&gt;typedef enum APPLICATIONTYPE&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;  LOCAL_APPLICATIONTYPE,&lt;/p&gt;
&lt;p&gt;  CLUSTERRESOURCE_APPLICATIONTYPE&lt;/p&gt;
&lt;p&gt;} APPLICATIONTYPE;&lt;/p&gt;
&lt;p&gt;Fortunately, as you mentioned, the work-around is quite simple.  If you are using C, then replace the enum definition in xolehlp.h with the one I typed above.&lt;/p&gt;
&lt;p&gt;-Vikram&lt;/p&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>56086</id><published>2009-01-06T16:43:42.0-05:00</published><updated>2009-01-06T16:43:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">I have a question on mapping a MSDTC resource to SQL Server and was hoping to get some clarification.

Scenario
Windows 2008 cluster
Two SQL Server groups – SQL1 and SQL2
We create two MSDTC resources – MSDTC1 in SQL1 group and MSDTC2 in SQL2 group
Will MSDTC1 be automatically mapped to SQL1 and MSDTC2 mapped to SQL2?

My understanding is that by default, SQL1 and SQL2 will get mapped to the default cluster coordinator. Say MSDTC1 was configured first then MSDTC1 will become the default cluster coordinator and both SQL1 and SQL2 will use MSDTC1. In order to configure SQL2 to use MSDTC2, we will explicitly need to use the msdtc.exe command with the –tmMappingSet option.

Is my understanding correct? Can someone confirm? 

How can I tell which MSDTC resource is being used by SQL?

Say we somehow know that SQL1 is using MSDTC1, what happens if MSDTC1 fails. Will SQL1 use MSDTC2 or will it use the local MSDTC?

Thanks for your response in advance.
</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>56110</id><published>2009-01-09T09:26:10.0-05:00</published><updated>2009-01-09T09:26:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">My understanding is that your question was handled offline by the transactions team.  In the interest of sharing, here's my quick answers:

First, in order to get the mapping to work, you'll need to use the -tmMappingSet feature, define mappings for both SQL instances.  Roughly, the commands will be of the form:

msdtc –tmMappingSet –name MyMapping –service SQL$&lt;xxxx&gt; -clusterResource &lt;cluster name="name" resource="resource"&gt;

where SQL$&lt;xxxx&gt; is the SQL service instance for the particular server group.

The only way I know to tell which resource is being used by SQL is to use the MSDTC UI to see which one gets activity when you try a transaction against a particular SQL instance.

Finally, since MSDTC1 is a cluster resource in the SQL1 cluster group, if it fails, the group fails and restarts.  So, if SQL1 is running, you should be able to assume MSDTC1 is running as well.

Hope this helps,
Jim.&lt;/xxxx&gt;&lt;/cluster&gt;&lt;/xxxx&gt;</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>56790</id><published>2009-02-17T17:46:03.0-05:00</published><updated>2009-02-17T17:46:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to Configure Multiple Instances of Distributed Transaction Coordinator (DTC) on a Windows Server Failover Cluster 2008</title><content type="html">What we will be going over in this blog is one of the improvements of Distributed Transaction Coordinator</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>61764</id><published>2009-04-27T15:38:29.0-05:00</published><updated>2009-04-27T15:38:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">If the caller (clustered application) doesn't specify if it is local or clustered (SQL Server 2005 in this case), and you don't have any clustered DTC instances configured, will it default to the local DTC instance on the node the application is running on?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>62052</id><published>2009-05-01T15:32:26.0-05:00</published><updated>2009-05-01T15:32:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Yes.

Do remember that this will not be highly available, though.

Jim.</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>72082</id><published>2009-08-19T13:24:15.0-05:00</published><updated>2009-08-19T13:24:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">Jim

For the -service parameter of the msdtc.exe command, do I use the actual SQL instance name? or is it the Service name (found under Administrator Tools &amp;gt; Services)?

For example,

I have two SQL 2005 instances named Marketing and Research running in a Windows 2008 cluster. These are actual name listed under Services and Applications in Failover Cluster Management.

Under Windows 2008 Services, they are MSSQL$Marketing and MSSQL$Research.

Which name should I be using for the -service parameter here?

Thanks.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>72808</id><published>2009-09-24T17:53:36.0-05:00</published><updated>2009-09-24T17:53:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 3: Cluster features</title><content type="html">My recollection (I'm OOF and away from the code just now) is that it is the Service name.</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>73957</id><published>2009-12-12T11:58:16.0-05:00</published><updated>2009-12-12T11:58:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">En bunt med bra l??nkar &amp;amp;laquo;  SQL Service</title><content type="html">Pingback from  En bunt med bra l??nkar «  SQL Service</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>101496</id><published>2011-07-29T06:10:17.0-05:00</published><updated>2011-07-29T06:10:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Msdtc cluster | Jamieswrinkles</title><content type="html">Pingback from  Msdtc cluster | Jamieswrinkles</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>103985</id><published>2011-10-06T07:29:49.0-05:00</published><updated>2011-10-06T07:29:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Import of Microsoft Distributed Transaction Coordinator (MS DTC) transaction failed: 0x8004d00e(XACT_E_NOTRANSACTION)</title><content type="html">You may run into an issue when running JDBC XA transactions against SQL Server 2008 on Windows Server</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50536"></thr:in-reply-to></entry><entry><id>50667</id><published>2008-04-06T18:02:00.0-05:00</published><updated>2008-04-06T18:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">MSDTC changes in WS2008, Part 4: Miscellaneous features</title><content type="html">&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Parts &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2008/03/15/50484.aspx"&gt;1&lt;/a&gt;, &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2008/03/16/50489.aspx"&gt;2&lt;/a&gt;, and &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2008/03/23/50536.aspx"&gt;3&lt;/a&gt; covered most of the mainline MSDTC features that show up in WS2008.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And now we come to the end with three more, relatively minor, topics: VSS integration, changes in XA support, and some changes in MSDTC tracing.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;VSS Integration&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;This isn't strictly speaking a WS2008 feature, as it was mostly present in Vista.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, it is a good example of a 'good Windows citizen' change.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Traditionally, transaction managers have had little to do with backup.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They manage a log that is assumed to hold very short lived data.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;In turn, that data only makes sense in conjunction with other data stores (i.e. either other transaction manager or resource manager logs).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And, there is normally no automated way to handle the multiple data stores being out of sync.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;MSDTC is no different in any of these regards, and all of these reasons are still valid with Vista.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;However, there is a role that a transaction manager can play.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Consider taking a live backup of a volume where you have a number of transaction aware resources.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The ideal backup is no longer a crash consistent point in time view of the data.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It is a crash consistent point in time where all the active resource managers will recover their transactions in the same way on restore -- in other words, a transaction consistent point in time.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;VSS, the Kernel Transaction Manager, and MSDTC were changed during Vista to support this mode.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;VSS now asks the transaction managers at the appropriate times to establish a transaction consistent point.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is one where all impacted resources that have received a phase 2 (commit) notification have acknowledged processing it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Once that has been reached, all the resources are directed to take their snapshots, and then the transaction manager is released to continue processing.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Each resource manager, when recovering from a VSS restore, will automatically abort all transactions that were in flight or in doubt.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This means that they will all restore to the same logical point in time, given the volume a transaction consistent restore.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;XA Support&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;In part &lt;a href="http://pluralsight.com/blogs/jimjohn/archive/2008/03/23/50536.aspx"&gt;3&lt;/a&gt;, I described how MSDTC now automatically reconnects to the correct MSDTC instance during recovery for any given transaction.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;By default, that feature also works for XA-based resource managers.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;In order for MSDTC to do this, it had to add some data to both the PrepareInfo structure and to the XA XID.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The PrepareInfo structure was already variable length, but the XA XID was packed into a format that had typically been more static in its size.  Normally, there is no problem with the new fields.  However, the format and size of these structures did change, and that could cause some resource managers difficulty.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Because of this, as of Vista SP1 and Windows Server 2008, MSDTC supports a degraded mode of operation which restricts a resource manager to both the pre-Vista recovery data formats and to working with, and only with, the default cluster resource MSDTC instance.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;In order to select this mode, the resource manager needs to call DtcGetTransactionManagerEx as follows:&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Consolas"&gt;hr = DtcGetTransactionManagerEx (&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;NULL, NULL, riid, &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;OLE_TM_FLAG_NOAGILERECOVERY, // 0x00000002&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; COLOR: black; FONT-FAMILY: Consolas"&gt;&lt;span style="mso-spacerun: yes"&gt;            &lt;/span&gt;NULL, &amp;amp;pvRiidObject);&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;As you can see, this requires that the default be selected, and the flag will force this to use the default cluster resource instance.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Changes in tracing&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;MSDTC has long had both the administrative transaction tracing and a growing set of fault analysis trace features.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The latter are increasingly useful in tracking down issues quickly and resolving them.  During Vista and Windows Server 2008, the transactions team worked on rationalizing the tracing, extending it to cover more of our own problem resolution scenarios, and incorporating suggestions and feedback from PSS.  From what I saw, we ended up with much more extensive tracing than we'd previously had, with a result that we were able to debug problems during development much more quickly than in the past.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;&lt;span style="mso-spacerun: yes"&gt;&lt;/span&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;&lt;span style="mso-spacerun: yes"&gt;&lt;/span&gt;While they are mostly meant for internal consumption, they might be interesting for some intrepid spelunker.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I was going to provide a rundown of the traces, but I ran across &lt;a href="http://support.microsoft.com/default.aspx/kb/926099"&gt;http://support.microsoft.com/default.aspx/kb/926099&lt;/a&gt;, which already does that, and better.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;And that brings my lap around the changes in MSDTC to a close.  It has some very significant new features, ones that I believe and hope will prove useful to many customers.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Jim.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>5</thr:total></entry><entry><id>50710</id><published>2008-04-12T10:19:00.0-05:00</published><updated>2008-04-12T10:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 4: Miscellaneous features</title><content type="html">Jim, one other REALLY miscellaneous feature that was deprecated for Windows 2008 is support for the Transaction Internet Protocol (TIP).  I only know 2 people that ever implemented it in production software (and I'm one of them).  
&lt;br /&gt;
&lt;br /&gt;The feature technically still exists, but the UI to configure it was removed.  I just wanted to mention it because the change wasn't in the MSDTC feature changes list for WS2008.  </content><author><name>Anonymous</name></author><thr:in-reply-to ref="50667"></thr:in-reply-to></entry><entry><id>50711</id><published>2008-04-12T11:45:00.0-05:00</published><updated>2008-04-12T11:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 4: Miscellaneous features</title><content type="html">Erik,
&lt;br /&gt;
&lt;br /&gt;Yes, that's correct.  TIP control was removed from the UI.  It has been disabled by default for a number of versions, and, as I understand it, the intent is to deprecate it.
&lt;br /&gt;
&lt;br /&gt;Have you looked at the WS-AtomicTransaction protocol?  It supports more of the MSDTC feature set than TIP, and does so with better security.
&lt;br /&gt;
&lt;br /&gt;Jim.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50667"></thr:in-reply-to></entry><entry><id>51364</id><published>2008-06-29T07:16:07.0-05:00</published><updated>2008-06-29T07:16:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Windows Server 2008的MSDTC改进</title><content type="html">事务处理作为企业级开发必备的基础设施，WindowServer2008在事务处理上的改进也是很大的，无论是开发还是配置管理方面都得到了极大的改进。有几篇关于WindowsServer2008的...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50667"></thr:in-reply-to></entry><entry><id>56791</id><published>2009-02-17T17:46:04.0-05:00</published><updated>2009-02-17T17:46:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to Configure Multiple Instances of Distributed Transaction Coordinator (DTC) on a Windows Server Failover Cluster 2008</title><content type="html">What we will be going over in this blog is one of the improvements of Distributed Transaction Coordinator</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50667"></thr:in-reply-to></entry><entry><id>90304</id><published>2010-07-01T13:15:42.0-05:00</published><updated>2010-07-01T13:15:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: MSDTC changes in WS2008, Part 4: Miscellaneous features</title><content type="html">IS it possible to create the MS-DTC object in AD first then use it during install?  We have a domain issue which will not allow us via policy to create the ad object during the install from the server...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="50667"></thr:in-reply-to></entry><entry><id>51085</id><published>2008-05-31T19:30:00.0-05:00</published><updated>2008-05-31T19:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Jim Gray</title><content type="html">&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;There was a &lt;a href="http://www.eecs.berkeley.edu/IPRO/JimGrayTribute/"&gt;tribute earlier today for Jim Gray at Berkley&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I want to share some thoughts about Jim.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I have had the privilege to know a lot of great engineers, a number of scarily bright people, a smaller number of truly wise people, and some solidly good people.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And very, very few that are all of these.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Jim is one.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;I have met Jim maybe 2-3 dozen times over the last 15 years, and I've exchanged a similar number of emails with him.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;But his effect on me, and on my career, was far larger than those numbers would suggest.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;He has provided guidance and advice, to which I am seriously indebted.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;His only charge was that I pay it forward when I could.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And I try.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;If it isn't clear from my other posts, I am basically a plumber.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I build piping, and worry about how to hook stuff together so that it works, and so that it goes reasonably fast (or so I hope).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And, I'd have to say that I wasn't really a professional at this game until I'd put 5 years or so under my belt.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Indirectly, Jim was partially responsible for that transition.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;My first exposure to Jim was the same as a lot of people's, I'd imagine.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It was through his writing.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;At the time I was a young developer working in the VMS OS group working on its distributed cache management layer (inside RMS).&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Steve Beckhardt gave me a copy of a paper and told me to read it -- that it would explain what the purpose of the lock manager was.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;The paper was "Notes on Database Operating Systems" by Gray, et al.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It was stunning -- it was clearly an academic paper, but… it was written so that it spoke to plumbers like me.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Eventually I met Jim in person.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Others have written much more eloquently than I could about how Jim can immediately connect with a person.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;All I can say is that was my experience.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;He was inspirational, helpful, and seemed honestly pleased to meet me.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Over the following years I've met Jim occasionally -- sometimes years would pass between times.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And every time we picked up from where we left off.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've always been amazed that he could keep track of what I'd been up to.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And every time we talked I came away the better for it.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;On the day that Jim was reported missing I came into the office with a question for him.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I was working on the email when I heard the news.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I still haven't asked my question, and I miss his counsel.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;Jim.&lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 11pt; MARGIN: 0in; FONT-FAMILY: Calibri"&gt;PS: While writing this I came across &lt;a href="http://blogs.msdn.com/pathelland/archive/2008/04/25/knowledge-and-wisdom-a-tribute-to-jim-gray.aspx"&gt;Pat's post&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;As usual, Pat is very eloquent.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I can only recommend that you read it.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>54265</id><published>2008-11-05T07:07:34.0-05:00</published><updated>2008-11-05T07:07:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Plumbing 101: A bookshelf list</title><content type="html">As I mentioned in a previous post , I'm essentially a plumber. I work on infrastructure software</content><author><name>Anonymous</name></author><thr:in-reply-to ref="51085"></thr:in-reply-to></entry><entry><id>51469</id><published>2008-07-03T15:04:00.0-05:00</published><updated>2008-07-03T15:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Upcoming webcasts</title><content type="html">&lt;p&gt;There are some WCF-related webcasts coming up during July, with monday's one on transactional WCF support.  You can find links to them on the &lt;a class="null" href="http://www.microsoft.com/events/series/msdnnetframework35.aspx?tab=webcasts&amp;amp;id=liveall"&gt;MSDN Webcasts&lt;/a&gt; site.  This month's talks are:&lt;/p&gt;
&lt;p&gt;
&lt;table class="MsoNormalTable  " style="margin-left: 30.2pt; width: 677pt; border-collapse: collapse;" cellspacing="0" cellpadding="0" width="903" border="0"&gt;
&lt;tbody&gt;
&lt;tr style="height: 15pt;"&gt;
&lt;td style="padding-right: 5.4pt; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; width: 450.35pt; padding-top: 0in; height: 15pt; border: windowtext 1pt solid;" valign="bottom" width="600"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Webcast Title&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 135pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="bottom" width="180"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Date/ Time&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 91.65pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="bottom" width="122"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Presenter&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 15pt;"&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 450.35pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="600"&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="color: black;"&gt;&lt;a class="null" href="http://www.microsoft.com/events/series/detail/webcastdetails.aspx?seriesid=124&amp;amp;webcastid=1032381607" target="_blank"&gt;&lt;span style="color: #0000ff;"&gt;Transactional Windows Communication Foundation Services with Juval Lowy&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 135pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="180"&gt;
&lt;p class="MsoNormal" style="text-align: right;" align="right"&gt;&lt;span style="color: black;"&gt;7/7/2008 10:00 AM &lt;/span&gt;PST&lt;span style="color: black;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 91.65pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="122"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Juval Lowy&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 15pt;"&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 450.35pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="600"&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="color: black;"&gt;&lt;a class="null" href="http://www.microsoft.com/events/series/detail/webcastdetails.aspx?seriesid=124&amp;amp;webcastid=1032381609" target="_blank"&gt;&lt;span style="color: #0000ff;"&gt;Using Windows Workflow Foundation to Build Services with Jon Flanders&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 135pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="180"&gt;
&lt;p class="MsoNormal" style="text-align: right;" align="right"&gt;&lt;span style="color: black;"&gt;7/9/2008 10:00 AM &lt;/span&gt;PST&lt;span style="color: black;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 91.65pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="122"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Jon Flanders&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 15pt;"&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 450.35pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="600"&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="color: black;"&gt;&lt;a class="null" href="http://www.microsoft.com/events/series/detail/webcastdetails.aspx?seriesid=124&amp;amp;webcastid=1032381611" target="_blank"&gt;&lt;span style="color: #0000ff;"&gt;WCF Extensibility Deep Dive with Jesus Rodriguez&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 135pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="180"&gt;
&lt;p class="MsoNormal" style="text-align: right;" align="right"&gt;&lt;span style="color: black;"&gt;7/11/2008 10:00 AM &lt;/span&gt;PST&lt;span style="color: black;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 91.65pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="122"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Jesus Rodriguez&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style="height: 15pt;"&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 450.35pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="600"&gt;
&lt;p class="MsoNormal"&gt;&lt;span style="color: black;"&gt;&lt;a class="null" href="http://msevents.microsoft.com/CUI/EventDetail.aspx?EventID=1032381674&amp;amp;Culture=en-US" target="_blank"&gt;&lt;span style="color: #0000ff;"&gt;Bringing Enterprise Data to Life with SharePoint Server and Windows Communication Foundation&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 135pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="180"&gt;
&lt;p class="MsoNormal" style="text-align: right;" align="right"&gt;&lt;span style="color: black;"&gt;7/18/2008 10:00 AM &lt;/span&gt;PST&lt;span style="color: black;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; background: #dbe5f1; padding-bottom: 0in; border-left: medium none; width: 91.65pt; padding-top: 0in; border-bottom: windowtext 1pt solid; height: 15pt;" valign="top" width="122"&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt;&lt;span style="color: black;"&gt;Joe Klug&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/p&gt;
&lt;p class="MsoNormal"&gt;&lt;b&gt; &lt;/b&gt;&lt;/p&gt;
&lt;p&gt;Update (July 14, 2008): I've updated the links to the talks.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>51839</id><published>2008-07-14T12:56:49.0-05:00</published><updated>2008-07-14T12:56:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Upcoming webcasts</title><content type="html">Jim, any idea if these webcasts have been recorded and made available? The URLs you provide are for pages no longer available "page not found".

Cheers, John</content><author><name>Anonymous</name></author><thr:in-reply-to ref="51469"></thr:in-reply-to></entry><entry><id>51845</id><published>2008-07-14T16:11:36.0-05:00</published><updated>2008-07-14T16:11:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Upcoming webcasts</title><content type="html">It looks like at least some are.  I went to the MSDN webcasts page (using the link above) and looked at the on-demand list.  I found Juval's, for instance, at http://www.microsoft.com/events/series/detail/webcastdetails.aspx?seriesid=124&amp;amp;webcastid=1032381607

I've updated the links.

Jim.</content><author><name>jim-johnson</name></author><thr:in-reply-to ref="51469"></thr:in-reply-to></entry><entry><id>52703</id><published>2008-08-23T12:32:54.0-05:00</published><updated>2008-08-23T12:32:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Upcoming webcasts</title><content type="html">Hey Jim, just to prod you a bit, any chance of you giving any insight into what the Transactions team is working on nowadays?

Miguel</content><author><name>Anonymous</name></author><thr:in-reply-to ref="51469"></thr:in-reply-to></entry><entry><id>54216</id><published>2008-11-02T09:31:00.0-05:00</published><updated>2008-11-02T09:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">I'm late -- the PDC was last week</title><content type="html">&lt;p&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;I had meant to file something before PDC, but never quite got around to it.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Our group had a few people at the event, and had a presentation based on what we've been doing.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If you didn’t see it, please go check out the &lt;a href="http://channel9.msdn.com/pdc2008/BB54/"&gt;channel 9 video of Max Feingold's talk&lt;/a&gt; on building for scale.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;We've been building some base scaling and messaging infrastructure for the .Net services in Azure.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Max's talk describes some of that technology, and also talks about design considerations that we've seen to work well for scaling -- both with our infrastructure and in general.  I hope that you'll find it interesting.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Please take a look at the talk.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>54264</id><published>2008-11-05T06:46:00.0-05:00</published><updated>2008-11-05T06:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Plumbing 101: A bookshelf list</title><content type="html">&lt;p&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;As I mentioned in a &lt;a href="/community/blogs/jimjohn/archive/2008/05/31/51085.aspx"&gt;previous post&lt;/a&gt;, I'm essentially a plumber.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I work on infrastructure software, and have focused mostly on how to hook things together to get work done reliably.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'm&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;a reasonably literate plumber, though.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I've worked, with moderate success, to stay up to date.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I personally think that this is key to being successful in the sorts of roles that I've had.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Like pretty much everyone else that I know, I've built up a reading list over time.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This varies from foundational books through to insightful and subversive papers.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;So, let's imagine that you're starting on a team that builds transactional infrastructure.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;What should be on your reading list?&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;First, there are the journeyman books that you probably already know about.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They'll tell you about the tools you have, and how to best use them to produce a product.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Aside from the your-favorite-language books, you'd undoubtedly want a couple like &lt;a href="http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1225892912&amp;amp;sr=8-1"&gt;Code Complete&lt;/a&gt; and &lt;a href="http://www.amazon.com/Writing-Secure-Second-Michael-Howard/dp/0735617228/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1225892985&amp;amp;sr=1-1"&gt;Writing Secure Code&lt;/a&gt;.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Next, you'll need at least one of the foundational texts.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;My personal favorite is Gray &amp;amp; Reuter, &lt;a href="http://www.amazon.com/Transaction-Processing-Concepts-Techniques-Management/dp/1558601902/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1225893082&amp;amp;sr=1-1"&gt;Transaction Processing&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It's an imposing black book with a picture of the Rosetta Stone on the front.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Frankly, it weighs almost as much as the Rosetta Stone.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;However, it is the first real 'how to' book for building a TP system.  It's almost 15 years old and still highly relevant.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I'd also recommend getting Weikum &amp;amp; Vossen, &lt;a href="http://www.amazon.com/Transactional-Information-Systems-Algorithms-Concurrency/dp/1558605088/ref=pd_bxgy_b_text_b"&gt;Transactional Information Systems&lt;/a&gt;.  It is also a truly excellent how to book, and newer.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;[A brief aside: I started working on transactions some years before these came out, at a time when transaction management was a pretty active area of research.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Consequently, I got into the habit of reading the journals, and saving the ones that had some key insight.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I suspect I was typical.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;I had my stack of papers and notes that I referred back to as needed.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It was all too reminiscent of Dr. Jones' grail diary.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;When Gray &amp;amp; Reuter came out, much of the need to build your own grail diary disappeared.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Man did that make lists like this much simpler to construct!]&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;With these texts in hand, there are two old papers, both by Butler Lampson, as it happens, that I'd recommend as part of any basic library:&lt;/p&gt;
&lt;ul style="MARGIN-TOP: 0in; unicode-bidi: embed; DIRECTION: ltr; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in" type="circle"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Lampson, &lt;a href="http://research.microsoft.com/lampson/27-AtomicTransactions/27-AtomicTransactionsAbstract.htm"&gt;"Atomic Transactions"&lt;/a&gt;, Distributed Systems-Architecture and Implementation.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;This is a real gem of a paper.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It derives the two phase commit from a world where anything can fail, which is why I first read it.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;Along the way gives you a great way of thinking about the edges of any design, which is why I recommend it.&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Lampson, &lt;a href="http://research.microsoft.com/lampson/33-Hints/Abstract.html"&gt;"Hints for Computer System Design"&lt;/a&gt;. This is a paper that anyone building system software simply must read.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;And anyone building commercial software should read.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Then there are a couple of more recent items that you should understand.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These are:&lt;/p&gt;
&lt;ul style="MARGIN-TOP: 0in; unicode-bidi: embed; DIRECTION: ltr; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in" type="circle"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Lamport, &lt;a href="http://research.microsoft.com/users/lamport/pubs/paxos-simple.pdf"&gt;"Paxos Made Simple"&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;If you're working on consensus protocols these days you should understand Paxos, and this is straightforward introduction to the topic.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;You can also pick up Gray &amp;amp; Lamport, &lt;a href="http://research.microsoft.com/research/pubs/view.aspx?tr_id=701"&gt;"Consensus on Transaction Commit"&lt;/a&gt;, which relates Paxos and 2PC.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;ul style="MARGIN-TOP: 0in; unicode-bidi: embed; DIRECTION: ltr; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in" type="circle"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Brewer, &lt;a href="http://www.cs.berkeley.edu/~brewer/cs262b-2004/PODC-keynote.pdf"&gt;"Towards Robust Distributed Systems"&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;These are slides from the talk that described the "CAP conjecture" -- the inevitable tradeoff between consistency, availability, and tolerance to partitioning.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;It's something that I think (hope) was reasonably widely recognized, but not clearly stated before this.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Finally, there are a couple of papers that I tend to recommend because they talk about ideas that are a little different.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;They're good ideas, and they helped me flex my imagination when I read them:&lt;/p&gt;
&lt;ul style="MARGIN-TOP: 0in; unicode-bidi: embed; DIRECTION: ltr; MARGIN-BOTTOM: 0in; MARGIN-LEFT: 0.375in" type="circle"&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;O'Neil, &lt;a href="http://portal.acm.org/citation.cfm?doid=7239.7265"&gt;"The Escrow Transaction Method"&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;A clear example of where you can get to if you don't assume that locking implies CRUD.&lt;br /&gt;&lt;/span&gt; &lt;/li&gt;
&lt;li style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px; VERTICAL-ALIGN: middle"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Haskin, et al, &lt;a href="http://portal.acm.org/citation.cfm?doid=35037.35060"&gt;"Recovery Management in QuickSilver"&lt;/a&gt;.&lt;span style="mso-spacerun: yes"&gt;  &lt;/span&gt;A pretty old paper, but one that asks what if transactions could be baked really deeply into your system.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="MARGIN: 0in 0in 0in 0.375in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Finally, these days, pretty much anything by &lt;a href="http://research.microsoft.com/~tharris/"&gt;Tim Harris&lt;/a&gt; on transactional memory.&lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt; &lt;/p&gt;
&lt;p style="MARGIN: 0in; FONT-FAMILY: Calibri; FONT-SIZE: 11pt"&gt;Jim.&lt;/p&gt;</content><author><name>jim-johnson</name></author><thr:total>2</thr:total></entry><entry><id>54387</id><published>2008-11-12T11:29:51.0-05:00</published><updated>2008-11-12T11:29:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Plumbing 101: A bookshelf list</title><content type="html">Distributed Algorithms by Nancy Lynch is also an excellent book.

http://www.amazon.com/Distributed-Algorithms-Kaufmann-Management-Systems/dp/1558603484/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1226514458&amp;amp;sr=1-1

</content><author><name>Anonymous</name></author><thr:in-reply-to ref="54264"></thr:in-reply-to></entry><entry><id>54391</id><published>2008-11-12T14:11:21.0-05:00</published><updated>2008-11-12T14:11:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Plumbing 101: A bookshelf list</title><content type="html">One other book, the second edition of which is to be published shortly, is "Principles of Transaction Processing" written by Eric Newcomer and Phil Bernstein (http://www.amazon.com/Principles-Transaction-Processing-Kaufmann-Management/dp/1558604154/ref=sr_1_4?ie=UTF8&amp;amp;s=books&amp;amp;qid=1226524155&amp;amp;sr=8-4).
Somewhat lighter (pun intended) reading than the Gray book and an excellent complement to it.

Cheers, John</content><author><name>Anonymous</name></author><thr:in-reply-to ref="54264"></thr:in-reply-to></entry><entry><id>62065</id><published>2009-05-03T14:16:00.0-05:00</published><updated>2009-05-03T14:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Interlude: The Day the Earth Stood Still</title><content type="html">&lt;p&gt;
&lt;/p&gt;&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I'll admit it.&lt;span&gt;  &lt;/span&gt;I made a huge mistake.&lt;span&gt;  &lt;/span&gt;It isn't like I wasn't warned.&lt;span&gt;  &lt;/span&gt;I read enough reviews that panned it.&lt;span&gt;  &lt;/span&gt;But, being the optimist, I went ahead and
bought the 2 DVD set with both the new and the old version.&lt;span&gt;  &lt;/span&gt;After all it was only a few dollars more, and
I love the old version.&lt;span&gt;  &lt;/span&gt;Then I sat down
to watch, hoping that the new version wasn't as bad as claimed.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;The good news is
that it wasn't.&lt;span&gt;  &lt;/span&gt;The bad news is that it
was worse.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;It was so bad I
immediately watched the old version just to get the new version out of my
system.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Didn't work.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;But watching the two
movies back to back showed in stark contrast a very well done movie and a very
poorly done copy.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I don't blame Keanu
Reeves here.&lt;span&gt;  &lt;/span&gt;He wasn't bad, per se, as
Klaatu.&lt;span&gt;  &lt;/span&gt;The emotionless "doesn't
fit in his skin" persona is something that he does.&lt;span&gt;  &lt;/span&gt;And here he had a character that called for
that.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I also don't blame
the special effects.&lt;span&gt;  &lt;/span&gt;Again, per se.&lt;span&gt;  &lt;/span&gt;The ship was truly unworldly, and Gort was a
nice BSG-ish update on the prior Gort.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;No, I blame the
writing, and whoever had any oversight on the script.&lt;span&gt;  &lt;/span&gt;That would have to include the director and
the producers, but probably doesn't stop there.&lt;span&gt;  I don't quite blame the printers, but it's a close run thing.  &lt;/span&gt;But let me be clear: the writing is what makes the old version great and the new version
awful.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Where to start?&lt;span&gt;  &lt;/span&gt;The new script is self loathing, rather than
hopeful.&lt;span&gt;  &lt;/span&gt;And that self loathing kills
the plot.&lt;span&gt;  &lt;/span&gt;Klaatu is coming to Earth to
destroy it (yes, I know, humanity.&lt;span&gt;  &lt;/span&gt;But I
is one, and proud of it).&lt;span&gt;  &lt;/span&gt;So why arrive
at all? Why set down?&lt;span&gt;  &lt;/span&gt;Why have _any_
dialogue whatsoever?&lt;span&gt;  &lt;/span&gt;From virtually the
first scene the script makes no sense.&lt;span&gt; 
&lt;/span&gt;There's no commitment to any internal consistency.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Compare this to the
old version.&lt;span&gt;  &lt;/span&gt;Klaatu is coming to deliver
a warning.&lt;span&gt;  &lt;/span&gt;Now _that's_ a reason to
arrive and to attempt to engage in dialogue.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;In both, Klaatu is
shot almost immediately.&lt;span&gt;  &lt;/span&gt;In the both, he
restrains Gort.&lt;span&gt;  &lt;/span&gt;Again, the old version
makes sense -- hold off on the trigger, if the purpose is to engage.&lt;span&gt;  &lt;/span&gt;In the new one, and after allowing for the
script already being seriously stupid by this point, this event should have
been enough to immediately destroy humanity.&lt;span&gt; 
&lt;/span&gt;Yet still we wait.&lt;span&gt;  &lt;/span&gt;Why?&lt;span&gt;  &lt;/span&gt;To be blunt, there is no reason ever given
why the final credits should not be rolling at this point.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;There's an eventual
throwaway about a sleeper agent.&lt;span&gt;  &lt;/span&gt;But by
then we've already seen that Klaatu can, from orbit, pull plants and animals
from the surface.&lt;span&gt;  &lt;/span&gt;Why don't they use that
to pick up the agent?&lt;span&gt;  &lt;/span&gt;I know that I repeat myself, but it's just an
incredibly poorly plot.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;But a silly,
incoherent plot that violates its own internal logic in the very first scene is
not the only or even the most conspicuous failing of the script.&lt;span&gt;  &lt;/span&gt;It is the loss of inference and wonder.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Go back and watch
the old version.&lt;span&gt;  &lt;/span&gt;You'll see very little
on screen action. But you'll see a very tight plot.&lt;span&gt;  &lt;/span&gt;A lot of the 'action' takes place off screen
and is mentioned in passing, or it is shown in second long shots, or, best of
all, it is just left to the audience to infer.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Let me take two
examples.&lt;span&gt;  &lt;/span&gt;First, Klaatu's escape from
the hospital.&lt;span&gt;  &lt;/span&gt;In the new movie we get to
see Klaatu overpower and disable the security apparatus and the guards.&lt;span&gt;  &lt;/span&gt;We are shown it in some detail, the special
effects team got work to do, and the movie spends time on it.&lt;span&gt;  &lt;/span&gt;Very flashy.&lt;span&gt; 
&lt;/span&gt;Very visual.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;But in the old
version, you hear him say that he should leave, and he's told that he
can't.&lt;span&gt;  &lt;/span&gt;The next shots are of them
finding that he is gone and seeing him walking down a street, apparently a free
man.&lt;span&gt;  &lt;/span&gt;By seeing how Klaatu leaves, the
script makes him a more limited character.&lt;span&gt; 
&lt;/span&gt;You now have an idea of what he can do.&lt;span&gt; 
&lt;/span&gt;In the old version, you have no idea, and that is the point that the
sequence hammers home to you.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Then there's
Gort.&lt;span&gt;  &lt;/span&gt;The new Gort looked a lot better,
which is why I don't blame the special effects folks.&lt;span&gt;  &lt;/span&gt;But they couldn't just leave Gort to be Gort.&lt;span&gt;  &lt;/span&gt;He had to do something.&lt;span&gt;  &lt;/span&gt;Ugh.&lt;span&gt; 
&lt;/span&gt;In the old version, there are mentions that they've 'tried everything'
to either break into the ship or Gort.&lt;span&gt; 
&lt;/span&gt;And Gort has just stood there.&lt;span&gt;  &lt;/span&gt;In
the new version, we get to watch Gort take out a set of missiles and drive a
couple of predators into tanks.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Gort in the old
version, AFAIR, never attacked to defend itself.&lt;span&gt;  &lt;/span&gt;It did for Klaatu.&lt;span&gt;  &lt;/span&gt;The very strong message was that humanity was
simply beneath its notice.&lt;span&gt;  &lt;/span&gt;The new Gort,
by taking out the missiles, reduced itself.&lt;span&gt; 
&lt;/span&gt;Significantly.&lt;span&gt;  &lt;/span&gt;From a godlike
destroyer of worlds to a self arming anti-missile system.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;And I won't even go
into the main event: the nanite attack vs. the selective disabling of
electricity worldwide.&lt;span&gt;  &lt;/span&gt;That one is just
too easy.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;In the end, the
scriptwriter in the old version understood Clarke's Law, and trusted that the
audience implicitly understood it as well. The one for the new version either
didn't (probable) or didn't believe the audience could (also highly probable).&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Jim.&lt;/p&gt;
</content><author><name>jim-johnson</name></author><thr:total>3</thr:total></entry><entry><id>62066</id><published>2009-05-04T02:49:18.0-05:00</published><updated>2009-05-04T02:49:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Interlude: The Day the Earth Stood Still</title><content type="html">My review. In it I agree with you!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="62065"></thr:in-reply-to></entry><entry><id>62073</id><published>2009-05-05T00:34:04.0-05:00</published><updated>2009-05-05T00:34:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Interlude: The Day the Earth Stood Still</title><content type="html">I 100% agree. The old version was more a message for peace and against cold war. The new one is rather quite agressive. The new GORT is pretty cool in terms of special fx, but it's mean! that's a total nonsense.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="62065"></thr:in-reply-to></entry><entry><id>75473</id><published>2010-03-15T23:42:40.0-05:00</published><updated>2010-03-15T23:42:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Interlude: The Day the Earth Stood Still</title><content type="html">I can't agree with you more.The old version is much better than the new one.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="62065"></thr:in-reply-to></entry><entry><id>63713</id><published>2009-05-27T08:14:00.0-05:00</published><updated>2009-05-27T08:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Designing protocols</title><content type="html">&lt;p&gt;
&lt;/p&gt;&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;A few of us have
been recently been working on a new set of protocols for the project I'm
currently on.&lt;span&gt;  &lt;/span&gt;The protocols themselves
are unimportant, except that they're pretty involved, and for various reasons
we're trying to both build and explain them.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;It's fun to be doing
something like this again, and I've found myself pulling a couple of old tools
out of the toolbox to help me with it.&lt;span&gt; 
&lt;/span&gt;These have been repeatedly useful to me; I figured they might be for
others.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I find it useful to
take the design in three passes (normally quite informally).&lt;span&gt;  &lt;/span&gt;In the first pass:&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;ul type="circle" style="margin-left: 0.375in; direction: ltr; unicode-bidi: embed; margin-top: 0in; margin-bottom: 0in;"&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Describe the protocol in the
     abstract.&lt;span&gt;  &lt;/span&gt;There's actually a lot of
     good structure in the &lt;a href="http://www.microsoft.com/protocols/default.mspx" title="protocol documentation"&gt;protocol documentation&lt;/a&gt; that we've
     built.&lt;span&gt;  &lt;/span&gt;The ideas of an ADM and an
     abstract state machine are generally useful.&lt;span&gt;  &lt;/span&gt;By first working on the protocol at that
     level, I find that I can keep from being distracted by message layout
     questions.&lt;span&gt;  &lt;/span&gt;It also means that I
     have a natural place to explain why each message exists.&lt;br /&gt;
          &lt;/span&gt; &lt;/li&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Ignore optimizations until
     you have correctness.&lt;span&gt;  &lt;/span&gt;I actively work to
     defer optimizations to a later pass, and j&lt;span&gt;&lt;/span&gt;ust worry about correctness.&lt;span&gt;  My goal is to e&lt;/span&gt;stablish the invariants, and get the minimum mechanism in place to
     cover them.&lt;span&gt;  &lt;/span&gt;It makes it more likely
     I'll get correctness in the first place, and it gives me a baseline to
     measure the complexity overhead vs. benefit for any individual protocol
     optimization.&lt;br /&gt;
          &lt;/span&gt; &lt;/li&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Drop messages for error
     handling.&lt;span&gt;  &lt;/span&gt;In some ways this is an
     extension of the previous point.&lt;span&gt;  &lt;/span&gt;I
     always worry about the error paths, especially for a distributed system.&lt;span&gt;  &lt;/span&gt;I've consistently found that if I
     initially say that the only error signaling action I can take is to
     abandon the processing of a message, and the only error detection
     mechanism I have is lack of expected message arrival, I'm ahead.&lt;span&gt;  &lt;/span&gt;This is because losing a message is the
     one error case that I will have to handle, regardless.&lt;span&gt;  &lt;/span&gt;By making this the only error case, I'm
     forcing myself to cleanly design for this absolutely required case.&lt;br /&gt;
          &lt;/span&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;In the second pass:&lt;/p&gt;
&lt;ul type="circle" style="margin-left: 0.375in; direction: ltr; unicode-bidi: embed; margin-top: 0in; margin-bottom: 0in;"&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Begin adding in sunny day
     optimizations.&lt;span&gt;  &lt;/span&gt;I'll add them in one
     by one, verifying that the invariants continue to hold (or by specifically
     loosening them and verifying that they're still consistent with the actual
     use in the first pass).&lt;span&gt;  &lt;/span&gt;I can come
     up with some pretty baroque stuff, so I'll often abandon an optimization
     when faced with the actual complexity/benefit tradeoff.&lt;br /&gt;
          &lt;/span&gt; &lt;/li&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Begin adding in error
     messages.&lt;span&gt;  &lt;/span&gt;Now that the sunny day
     and the one required error case is handled, I'll look to add in error
     messages for specific cases.&lt;span&gt;  &lt;/span&gt;Each
     time I'll ensure that it is purely informational, and can trivially be
     lost.&lt;br /&gt;
          &lt;/span&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Finally, in the
third pass:&lt;/p&gt;
&lt;ul type="circle" style="margin-left: 0.375in; direction: ltr; unicode-bidi: embed; margin-top: 0in; margin-bottom: 0in;"&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;Create the concrete protocol
     specification.&lt;span&gt;  &lt;/span&gt;Now that I have a
     completed ADM and an abstract state machine that I'm happy with, I can
     build the concrete protocol message formats and the specific retained
     state.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;This advice may look
reasonably obvious, and yes, I frequently do most of this informally.&lt;span&gt;  &lt;/span&gt;The one exception is that I do try to hold to
the 'first only drop messages for error handling' rule.&lt;/p&gt;
</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>63923</id><published>2009-05-29T02:47:12.0-05:00</published><updated>2009-05-29T02:47:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Designing protocols</title><content type="html">Don't forget the need for profiles as well as protocols !  They are often overlooked...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="63713"></thr:in-reply-to></entry><entry><id>72857</id><published>2009-09-28T22:16:00.0-05:00</published><updated>2009-09-28T22:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">The Things We Learn</title><content type="html">&lt;p&gt;
&lt;/p&gt;&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;For most of the last
six months, I've been responsible for disposing of an estate.  The estate
is small and, as these things go, fairly uncomplicated.  Stressful, at
times, but uncomplicated.  Probably the biggest logistical complication has
been that I live some 2000 miles away.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;As in any new
situation where you're just thrown in, there are a number of things that you
learn - some good, some useful, and a few not so good.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I'll start with a
serious bit of advice: get a power of attorney set up before you need it. 
For a few days, I had the problem that the person was in a coma, but had not
recorded any powers of attorney.  I discovered that there are very efficient
mechanisms for handling medical decisions, but there are no simple or quick
ways to handle the finances.  This can be a big headache if you find
yourself needing to forward mail, pay bills, etc.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I also found that
the Hospice carers are simply amazing people.  I only met them a few
times, and I was left just impressed every time.  They have a truly awful
job, yet every one was helpful, cheerful, and very, very professional.  I
just can't say enough for them.  I can only imagine how many people
they've helped in their final days.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Hospice was not the
only profession that I'd not been overly aware of in the beginning.  It
turned out that once the estate was opened, I had to figure out how to dispose
of much of the property.  There was a house and a huge garage to clean out,
and many things to sell.  Because of the distance, I really needed someone
who could do this.  I was fortunate to locate a company that provided a
full end-to-end service.  They did a huge job cleaning the property,
sorting through the contents, as well as arranging and executing the sale --
all with appropriate care and dignity.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;There were also some
things that were, well, ironic -- generally because the left hand didn't know
what the right hand was doing.  The mail is currently forwarded, and the
deceased has received:&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;ul type="circle" style="margin-left: 0.375in; direction: ltr; unicode-bidi: embed; margin-top: 0in; margin-bottom: 0in;"&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;A voter registration form a
     few months ago from the same lot that issued the death certificate. 
     I sent it back with a letter explaining why there was no longer a need for
     a voter registration.&lt;/span&gt;&lt;/li&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;A driver's license renewal
     form last week from the same  lot.  I'll again be explaining why
     it is unlikely that this is needed.&lt;/span&gt;&lt;/li&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;The weekly church newsletter
     from the (small) church whose pastor spoke at the remembrance
     service.  It took some work to find a polite way to explain this one.&lt;/span&gt;&lt;/li&gt;
&lt;li style="margin-top: 0pt; margin-bottom: 0pt; vertical-align: middle;"&gt;&lt;span style="font-family: Calibri; font-size: 11pt;"&gt;… and a set of renewal forms
     that arrived months after I canceled the subscriptions due to the obvious
     cause.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;The first time this
happens, it is a bit shocking.  By the fourth or fifth, it is just funny
in a very macabre way.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;But finally there
were some things that were moral hazards for the deceased that I had to clean
up.  I found maxed out credit cards, overdrawn bank accounts, long overdue
bills, and unopened packages (some recent purchases, some not).  It was quickly
obvious that the solvency of the estate was marginal.  So, of course,
there were also an ongoing stream of further pre-approved credit.  Like
pushing booze to an alcoholic.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I've now dealt with
almost all of it.  In theory, the estate should be able to close in the
next week.  And it could if it were not for the biggest moral hazard of
them all.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;The person had taken
a reverse mortgage.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Now I understand,
and agree wholeheartedly with the goal of keeping people in their homes. 
Because of that, I'd never taken much of a look at how it works.  I wish
now that I had.  It is one long chain of moral hazards in its own right.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;The basic idea is
that you can stay in your home, by taking out a mortgage that just increases in
debt month to month.  The house secures the loan.  Furthermore, you
can draw down on the accrued equity, so that if you have specific expenses (real
estate taxes, for instance), you can have them covered as well.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;And every month,
pretty much as you'd expect, the balance due goes up by an interest payment and
an 'administrative charge'.  I'm sure that this represents profit for the
mortgage company, but, you know, I'm good with that.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Now, I'm sure you're
already asking the obvious question: what happens when the house goes
underwater?  Well, nothing.  The balance just continues to
grow.  It just can't really be secured by the house anymore, so the
government steps in and secures the rest.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Ok, this sounds
right given the goals.  But let's think about the dynamics of this. 
First, if I take out such a mortgage I get to live in my house until I die, and
(assuming I'm in moderately good health) most likely the house will be underwater
by then whether I draw down or not.  So why not draw down?  From my
point of view, it is literally free money.  I've found nothing that limits
or restricts that.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Second, if I'm the
mortgage company I'm now assured of a payoff when the house sells.  So
long as I haven't repossessed the property from the estate, that payoff
increases month by month (I'm not sure if it increases if it has been
repossessed, fwiw).  It is in my interest (no pun intended) to try to
avoid quick sales unless they can hit the amount that the government won't
cover.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Note that in both
cases, any excess debt is covered by the taxpayer.  As far as I can tell,
the size of that debt is kept in check by individuals and organizations not
acting in their own self interest.  Look, I buy the original goal. 
But I don't buy that this is the best approach that anyone could take.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;In the end, it has
admittedly been a stressful experience, certainly at times.  I've learned
some things I'd have preferred to not know.  But I've also met a number of
thoughtful, dedicated people.  I've learned how to help my kids avoid some
of the difficulties I've faced.  And finally, my family has been a great
source of strength through this, for which I am hugely grateful.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Jim.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;</content><author><name>jim-johnson</name></author></entry><entry><id>73009</id><published>2009-10-03T08:43:00.0-05:00</published><updated>2009-10-03T08:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Transacted memory as a security tool?</title><content type="html">&lt;p&gt;
&lt;/p&gt;&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I read a fascinating
article yesterday: &lt;a href="http://www.cs.utexas.edu/ftp/pub/techreports/tr08-50.pdf"&gt;OS Transactions&lt;/a&gt;
by Porter, et al.&lt;span&gt;  &lt;/span&gt;It is about adding
support in a Linux kernel for transacted memory, and then making many of the OS
services transaction aware.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;I've long been
convinced that TM has a huge potential, but I've not been sure what the killer
use would be.&lt;span&gt;  &lt;/span&gt;I have had a strong
suspicion that it wouldn't be a traditional TP sort of role.&lt;span&gt;  &lt;/span&gt;The interesting point in this paper wasn't
that they'd put transaction support into the underlying system (that's been
done before).&lt;span&gt;  &lt;/span&gt;It was a scenario that
they called out.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;The article talks
about how transacted memory, combined with transaction aware services, can form
a systemic solution to TOCTTOU (time-of-check-to-time-of-use) security
holes.&lt;span&gt;  &lt;/span&gt;That was a pretty interesting,
and in retrospect, intuitively obvious, conclusion.&lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt; &lt;/p&gt;
&lt;p style="margin: 0in; font-family: Calibri; font-size: 11pt;"&gt;Jim.&lt;/p&gt;
</content><author><name>jim-johnson</name></author><thr:total>1</thr:total></entry><entry><id>76587</id><published>2010-05-12T01:16:30.0-05:00</published><updated>2010-05-12T01:16:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Transacted memory as a security tool?</title><content type="html">Thanks for linking to the paper.  I've also long been convinced that TM has a huge potential, but I've never really known what kind of M should be T'd.  (This reminds me of a certain filesystem... .)
</content><author><name>Anonymous</name></author><thr:in-reply-to ref="73009"></thr:in-reply-to></entry></feed>