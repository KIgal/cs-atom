<!--Generated by a crappy script that Craig Andera wrote : https://github.com/candera/cs-atom--><feed xmlns="http://www.w3.org/2005/Atom" xmlns:thr="http://purl.org/syndication/thread/1.0"><id>feed-id</id><updated>2011-12-25T08:44:55.713-05:00</updated><title type="text">Blog Title Here</title><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><entry><id>7859</id><published>2005-04-29T17:56:00.0-05:00</published><updated>2005-04-29T17:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Context</title><content type="html">&lt;div style="PADDING-RIGHT: 0in; MARGIN-TOP: 0in; PADDING-LEFT: 0in; FONT-SIZE: 12pt; MARGIN-BOTTOM: 6pt"&gt;&lt;em&gt;The skill of writing is to create a context in which other people can think&lt;/em&gt; – Edwin Schlossberg. One of my aims in creating this blog is to create a context for thinking about distributed software architecture. To that end, I begin with some context about this blog and me.&lt;/div&gt;
&lt;div style="PADDING-RIGHT: 0in; MARGIN-TOP: 0in; PADDING-LEFT: 0in; FONT-SIZE: 12pt; MARGIN-BOTTOM: 6pt"&gt;I want to make a contribution to the ongoing discussion about designing, building, and operating distributed systems. That discussion provides the focus for this blog, and I don't intend for the conversation to stray very far from it.  I'm mainly concerned with systems that are distributed to enable people to work together towards a common goal. In the jargon of software developers, these systems are usually called business systems and are often developed by people called corporate IT developers using unfashionable languages (such as BASIC and COBOL). &lt;/div&gt;
&lt;div style="PADDING-RIGHT: 0in; MARGIN-TOP: 0in; PADDING-LEFT: 0in; FONT-SIZE: 12pt; MARGIN-BOTTOM: 6pt"&gt;My approach to designing distributed systems is founded in a conceptual view of how best to model business systems. Most business systems can be decomposed into people, processes, documents, actions, messages, services, and reports. This blog will be primarily devoted to exploring the interrelationships of those entities and how we translate them into executable code. One point I want to make clear is that those entities don't translate directly into either an object-oriented model or a relational database model. Understanding the limits of those two common ways of looking at software design is crucial to building successful business systems.&lt;/div&gt;
&lt;div style="PADDING-RIGHT: 0in; MARGIN-TOP: 0in; PADDING-LEFT: 0in; FONT-SIZE: 12pt; MARGIN-BOTTOM: 6pt"&gt;I came to the field of software development in a quite roundabout fashion. In college, I studied English and History and had only a bit of exposure to computing (BASIC, FORTRAN, and Assembler). My first career was outside of computing, but I became enamored of the creativity that was possible with personal computers. I made a slow transition from user to developer to architect. I've found that my background gives me a perspective on software development that is distinctly different from the norm in our community. Too many of us suffer from a lack of historical and social understanding and that infects much of our software with a short-sighted and almost misanthropic attitude. What you read here will be influenced by my background in the liberal arts and my experiences as a developer, consultant, system administrator, and "software architect". I work mostly on the Microsoft platform, although I do a fair amount of work integrating with other platforms.&lt;/div&gt;
&lt;div style="PADDING-RIGHT: 0in; MARGIN-TOP: 0in; PADDING-LEFT: 0in; FONT-SIZE: 12pt; MARGIN-BOTTOM: 6pt"&gt;Finally, I want to take this opportunity to thank Aaron Skonnard and the rest of the PluralSight folks for their kindness in hosting this blog.&lt;/div&gt;
&lt;div style="PADDING-RIGHT: 0in; MARGIN-TOP: 0in; PADDING-LEFT: 0in; FONT-SIZE: 12pt; MARGIN-BOTTOM: 6pt"&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>2</thr:total></entry><entry><id>17979</id><published>2006-01-12T12:57:00.0-05:00</published><updated>2006-01-12T12:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to build a distributed application: Preface</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7859"></thr:in-reply-to></entry><entry><id>18051</id><published>2006-01-16T06:59:00.0-05:00</published><updated>2006-01-16T06:59:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How to build a distributed application: Preface</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7859"></thr:in-reply-to></entry><entry><id>7981</id><published>2005-05-02T22:58:00.0-05:00</published><updated>2005-05-02T22:58:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Yes, Clemens, there is a Service Oriented Architecture</title><content type="html">&lt;div&gt;Clemens Vaster &lt;a href="http://staff.newtelligence.net/clemensv/PermaLink,guid,535d4a96-2cc3-4306-8b56-9a96c7c6fa39.aspx"&gt;doesn't think SO Architecture is real&lt;/a&gt;. Roy Osherove &lt;a href="http://weblogs.asp.net/rosherove/archive/2005/05/02/405297.aspx"&gt;agrees&lt;/a&gt;. Udi Dahan &lt;a href="http://udidahan.weblogs.us/archives/027854.html"&gt;disagrees&lt;/a&gt;. &lt;a href="http://blogs.msdn.com/richardt/archive/2005/05/02/414026.aspx"&gt;Rich Turner&lt;/a&gt; and &lt;a href="http://samgentile.com/blog/archive/2005/05/02/12613.aspx"&gt;Sam Gentile&lt;/a&gt; seem to be squarely in "let's drop the A in SOA" camp. This all reminds me of a conversation I had with Ted Neward on &lt;a href="http://www.neward.net/ted/weblog/index.jsp?date=20041003#1096870464001"&gt;his blog back in October&lt;/a&gt;. Before we get to the fundamental reasons for keeping the "A" in SOA, let's dispense with a couple of particularly silly arguments against SOA:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;ul type="disc" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;SOA is bogus because there's a lot of hype around it.&lt;/li&gt;
&lt;li&gt;SOA is bogus because it's nothing new&lt;/li&gt;&lt;/ul&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;The amount of hype around a particular technology is completely orthogonal to the value of that technology. I don't mind if folks want to criticize the hype surrounding SOA, but if you turn that into a criticism of SOA itself, you are part of the problem. If can't separate the hype from the technology, you're not thinking clearly.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;The fact that SOA is not new is perhaps its greatest strength. Unlike most folks in this business, I'm suspicious of anything new. I want to build my applications on proven concepts, not the latest fads. It's more important for software architects  to understand Aristotle than it is to understand Don Box. You'll learn more about SOA by reading about Max Weber's work on modern bureaucracy than you will by reading anybody's blog.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;&lt;font color="#000000"&gt;Service Oriented Architecture and Bureaucracy&lt;/font&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Seriously. Go read &lt;a href="http://www.humanities.mq.edu.au/Ockham/y64l09.html"&gt;this&lt;/a&gt;. Now, read it again and where it says "bureau", think service. Where it says "sending and receiving messages", think, hmm, sending and receiving messages. SOA is just another way of describing bureaucracy. Go find Microsoft's &lt;a href="http://msdn.microsoft.com/msdnmag/issues/04/01/Indigo/default.aspx"&gt;four tenets of service orientation&lt;/a&gt;. Those tenets are just a rehash of Weber's analysis of bureaus (of course, Don uses a lot of fancy computer science terminology that Weber would not recognize). The important thing here is that Weber realized that bureaus only made sense within larger system of bureaucracy. It was the whole system of autonomous units working together that made the system so efficient. If you want to achieve the larger benefits of service orientation, you need to develop an architecture that allows services to flourish.  Next up, I'll discuss how you can grow an SOA for an organization.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>4</thr:total></entry><entry><id>7984</id><published>2005-05-03T00:11:00.0-05:00</published><updated>2005-05-03T00:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yes, Clemens, there is a Service Oriented Architecture</title><content type="html">Clemens' post on my blog entry states that SOA does not necessarily include "autonomous computing", what he might define as services working totally in parallel. I think that that may be quibbling the definition, but from an architecture point of view, distributed systems don't make sense without this kind of parallelism.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7981"></thr:in-reply-to></entry><entry><id>7989</id><published>2005-05-03T03:14:00.0-05:00</published><updated>2005-05-03T03:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yes, Clemens, there is a Service Oriented Architecture</title><content type="html">I wonder when Clemens changed his mind. Last year his view[1] was much like yours and mine. 
&lt;br /&gt;
&lt;br /&gt;[1] http://staff.newtelligence.net/clemensv/CommentView,guid,0339fe35-2328-44be-93e6-f004bd869a84.aspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7981"></thr:in-reply-to></entry><entry><id>8014</id><published>2005-05-03T20:45:00.0-05:00</published><updated>2005-05-03T20:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">What is SOA? Huh?</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="7981"></thr:in-reply-to></entry><entry><id>10619</id><published>2005-06-08T06:47:00.0-05:00</published><updated>2005-06-08T06:47:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yes, Clemens, there is a Service Oriented Architecture</title><content type="html">RePost:
&lt;br /&gt;http://www.yeyan.cn/Programming/ServiceOrientedArchitecture.aspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="7981"></thr:in-reply-to></entry><entry><id>8099</id><published>2005-05-07T21:37:00.0-05:00</published><updated>2005-05-07T21:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Taking up the Turner Challenge or Once more into the breach!</title><content type="html">&lt;div&gt;Rich Turner &lt;a href="http://blogs.msdn.com/richardt/archive/2005/05/04/414833.aspx"&gt;doesn't believe SOA exists&lt;/a&gt; and challenges SOA advocates to draw him a picture:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&lt;font color="#ff0000"&gt;This applies to anyone out there - if you've got an architecture that will help solve real business problems, then show me the picture. Don't list products to me - show me the generally applicable architecture and principles which drive that architecture! &lt;/font&gt;&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I'm happy to take up this challenge for a number of reasons. First, I'm a corporate IT application architect. I have no products to sell, but solving real business problems is what my employer expects me to do every day. Second, I find SOA to be an excellent architecture for individual applications and inter-application integration. Third, I've become increasingly frustrated with my inability to communicate my requirements for building distributed systems to the Indigo team. Now, this inability is not from lack of trying on my part or the Indigo team's part. I've engaged various members of the team in a variety of forums. Every person I've interacted with has been smart, dedicated, and genuinely interested in what I have to say. And yet, every conversation has left me feeling as if I dealing with people from some alternate universe. We use the same language, but our frames of reference are completely different. Perhaps this will help bridge that gap.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;What is software architecture?&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Part of the problem in defining SOA is that there is no generally accepted &lt;a href="http://www.sei.cmu.edu/architecture/definitions.html"&gt;definition for software architecture&lt;/a&gt;. Here's the working definition that I use:&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;A system's architecture is comprised of the relationship between the individual elements of the system, the patterns by which those elements exchange information, and the mechanisms used for that exchange.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;One of the nice things about this definition is that it "scales" all the way from the assembly language instructions and electrical pulse flowing through wires up to cross-enterprise business processes. As an application architect, I'm most interested in the architecture of distributed systems where those individual elements are mapped to processes running on various systems in a network, but I also delve into architecture on smaller scales as well. My job as an architect is to map the functional and system requirements of an application on to a set of technologies. That mapping is constrained by numerous factors (existing systems, fiscal constraints, company standards, the capabilities of my team, etc.). My answer to Rich's challenge is that service orientation is a useful architectural style that helps me better meet the business requirements within the context of the constraints.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;What is Service Oriented Architecture?&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;In SOA, the architect makes a conscious decision to model the individual elements of a system as services which communicate via a set of asynchronous message exchange patterns. What real business problems does that solve? If you take a look at how most businesses work, you'll find that they are organized into specialized subunits. Each subunit takes responsibility for a particular business function (or set of functions). As businesses become more complex, they take on increasingly stylized forms of communications. Rules are established to describe the allowable types of exchanges between these subunits. Many of these subunits are even common across widely varying businesses. Almost any business of a sufficient size will have an HR department, a Finance Department, a Sales organization, etc. I find it very easy to map the requirements of various business units (even if they belong to separate organizations) to a service oriented architectural model. For example, it's very easy to explain to the non-technical business user that the Inventory service accepts an Inventory Request Message and returns an Inventory Level Message. It's easy to think of interacting with a service by imagining walking up to a person sitting behind a window, handing them a filled form, getting a slip of paper with a number (a correlation identifier), and then waiting for your number to be called to pick up the response. From there you can discuss how things are different if you want to be able to drop off the form and know that it will be processed or stand there at the window, waiting for a response or if you need to sit down for an interview to fill out the form. &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Conversely, from the technology side, services and messages map quite well to a variety of constructs up and down the abstraction level stack. Typically, a service will map to a computer process, messages to some sort of network payload. The particular abstractions I like to use include a reliable messaging and queuing infrastructure, a text-based format for messages, and a common formatting/datatyping mechanism. I work primarily on Microsoft's platform, but I do have to integrate with other platforms. Although I've rolled my own implementation of each of these at times in the past, I'm really looking to Microsoft to provide solid, high-performance, wire-format-interoperable implementations. As such, one would think I'd be happy with Indigo, but I'm not.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;What's wrong with Indigo?&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;The fundamental problem with Indigo is reflected in this statement by &lt;a href="http://galactic-patrol.blogspot.com/2005/02/serviceoperation-wheres-message.html"&gt;Bruce Williams &lt;/a&gt;(a member of the Indigo Team):&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;&lt;font color="#ff0000"&gt;we've found that when using a language like C# that has objects and methods as its native constructs, the easiest, most accessible way of exposing our distributed services is via (you guessed it) objects and methods. &lt;/font&gt;&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Uh, no! The best way to model services is with, well, services: messages and operations. Because the Indigo team desperately wants to hide all this stuff from the developer, Indigo doesn't really support SOA. To make life (allegedly) easier for the developer, Indigo makes it impossible for the application architect who wants to build true services. Even though all the underlying constructs are there in the Indigo model, they are completely hidden by this enormous pile of OO attribute-driven goo. Indigo assumes that if you're interested in messages, you want to process XML, WSDL, and SOAP. If you want to put the "A" in SOA, you're forced to muck around among the angle brackets. Why, oh why can't I design a message in Indigo without being forced into angle brackets or square brackets? Why oh why am I forced to slurp another service's operations and messages directly into my object model (just like the current ASMX infrastructure)? Have you guys ever heard of loose coupling? &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;What BizTalk gets right!&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;I really wish the Indigo would take a walk over to the BizTalk group and have a look at the Mapper. It's a little crude, but at least it acknowledges that there's an important visualization of XML Schema that can help in designing messages and that I might not want to pull some other service's view of the world directly into mine. The great thing about the Mapper is that it lets me build a nice, self-contained façade between services. This is absolutely essential when dealing with external services, legacy internal services with their own idiosyncratic view of things, or those really nasty beasts, the third-party systems (ERP, CRM, etc.). Just because they expose some WSDL doesn't mean I want my tools crufting up object models based on those things. I need to be able to insulate my service from that stuff. BizTalk does that really well. Unfortunately, not everybody (or every application) needs the rest of BizTalk's rich feature set and rather steep price. Don't get me wrong. BizTalk rocks and is well worth the investment, if you need even half its features. &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Where to from here?&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Here's what I'd like to see from Indigo. Stop pushing the [DataContract] and [ServiceContract] stuff as the primary way of developing with Indigo. Let us have direct, non-bracket-intermediated access to the Indigo message. Let us control the mapping between the external message format and our internal processing model. &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>8</thr:total></entry><entry><id>8138</id><published>2005-05-09T17:16:00.0-05:00</published><updated>2005-05-09T17:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">On SOA, Indigo and Services</title><content type="html">John Cavnar Johnson&amp;amp;nbsp;posted an article entitled "Taking up the Turner Challenge or Once more into...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8139</id><published>2005-05-09T16:17:00.0-05:00</published><updated>2005-05-09T16:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Taking up the Turner Challenge or Once more into the breach!</title><content type="html">Hey John. Had to reply to your interesting post. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8492</id><published>2005-05-20T23:02:00.0-05:00</published><updated>2005-05-20T23:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">AJAX, SOA, and FWCAR</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8493</id><published>2005-05-20T23:04:00.0-05:00</published><updated>2005-05-20T23:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">AJAX, SOA, and FWCAR</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8498</id><published>2005-05-21T20:54:00.0-05:00</published><updated>2005-05-21T20:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">AJAX, SOA, and FWCAR</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8499</id><published>2005-05-21T20:59:00.0-05:00</published><updated>2005-05-21T20:59:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">AJAX, SOA, and FWCAR</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8500</id><published>2005-05-21T21:03:00.0-05:00</published><updated>2005-05-21T21:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">AJAX, SOA, and FWCAR</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>10624</id><published>2005-06-08T06:51:00.0-05:00</published><updated>2005-06-08T06:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Taking up the Turner Challenge or Once more into the breach!</title><content type="html">RePost:
&lt;br /&gt;http://www.yeyan.cn/SoftwareEngineering/ServiceOrientedArchitectureWSDL.aspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8099"></thr:in-reply-to></entry><entry><id>8149</id><published>2005-05-09T21:09:00.0-05:00</published><updated>2005-05-09T21:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">A Failure to Communicate</title><content type="html">&lt;div&gt;Rich Turner &lt;a href="http://blogs.msdn.com/richardt/archive/2005/05/09/415878.aspx"&gt;replies&lt;/a&gt; and I'm more confused than ever. He's wearing his Indigo-colored glasses and misreads just about everything I wrote. I'll leave aside the SOA discussion for now and concentrate on Indigo. I'll try to make this as plain as I can.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I want to design and build services with Indigo. I want services, messages, and operations to be first-class citizens in the programming model. I'm perfectly happy to use XML as the serialization format for messages and XML Schema as the schema language for describing messages. I'd rather not have to deal directly with the XML and Schema in the programming model. I want to work with a higher-level abstraction. Ideally I think this would be a new .Net type called Message (or message if you prefer C#). This would be an addition to the existing types (classes, value types, interfaces, arrays, pointers, and enumerations). This type's members would be restricted to public fields (no properties, no methods, etc.). The datatypes for those fields would be limited to the intersection of those simple types in both .NET and XML Schema &lt;strong&gt;AND &lt;/strong&gt;complex types constructed from those simple types. It would be really cool if there was a Whitehorse designer like the class designer. Of course, to go along with the Message type, I'd like a true Service project in Visual Studio.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;There are other ways to implement what I really want, but this, I hope, makes clear a few points that I have been unable to get across to any member of the Indigo team. First, I don't want to design an object model and then decorate it with attributes to design my messages. I want to design the messages directly. Without using any attributes. No attributes. What's so hard about the "no attributes" part of this? Everybody else that I've discussed this with understands that I don't want to use attributes. They may not agree with me, but they understand that I don't want to use attributes. Rich, just like the rest of his team, says, "create a data structure that you've adorned with the attributes necessary to describe the construct."  Using attributes is a way of saying that the message isn't real or important. It's a just a messy detail that Indigo will handle for you. Second, when I say I want to work with messages, I'm not saying that I want to process the XML directly. I don't want Indigo to "get out of my way", I want it to help me. The Indigo team has this bizarrely bifurcated view of the world that equates message-oriented with hard-core bithead and object-oriented with Average Joe Developer. It's only that way in the Indigo world because they've made it that way by refusing to expose their underlying model in a consistent manner. It doesn't have to be that way. There's a very straightforward, business-oriented messaging model that could easily be layered on top of Indigo. If only they could see it. There's clear evidence all around them. WSE is closer than Indigo is, but BizTalk is where they really need to look.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>5</thr:total></entry><entry><id>8151</id><published>2005-05-09T20:40:00.0-05:00</published><updated>2005-05-09T20:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A Failure to Communicate</title><content type="html">Would it be accurate to say that you are (reasonably) satisfied with the _features_ of Indigo, but you don't want to use C# (as it exists today), but would prefer some mix of a language ("M#"?) that has SOA constructs as first-class language elements, and perhaps equivalent GUI tools like the Biztalk 'Mapper' you described in another post?
&lt;br /&gt;
&lt;br /&gt;If that's the case, there are (at least) two answers:
&lt;br /&gt;
&lt;br /&gt;#1 - By the time we were really solidifying our OM story in Indigo, we weren't really in a position to push new language requirements into Whidbey.  I'm not promising it will happen in the future, either; but I'm sure the idea has been and will be given real consideration.  Having reasoned feedback and requirements from folks like you really helps, BTW - thanks!
&lt;br /&gt;
&lt;br /&gt;#2 - We'd really like our technology to 'feel' like the older Microsoft technologies that it replaces.  It just makes life easier for the many developers out there trying to learn and port to Indigo.
&lt;br /&gt;
&lt;br /&gt;on the flip side, perhaps 'M#' is a great third-party opportunity - C# is just a language that compiles down to IL; there is no reason some enterprising company out there couldn't come out with their own M# that compiles to IL, makes calls to Indigo as appropriate, and in general implement everything you want.  (This is why I asked if Indigo had all the *features* that you want.)  I understand this might not be the perfect solution for you, but perhaps some other reader of this blog will take it as a challenge... *grin*
&lt;br /&gt;
&lt;br /&gt;Another point about the GUI stuff - its definitely not too late to get more good GUI tools into Indigo - maybe not for Beta 1, but in a later release.  So *please* keep telling us in great detail all the different kinds of cool tools you'd like to see, to help you write your distributed applications using Indigo.  If you'd like to exchange e-mail with one of our 'tools' folks directly, drop me a line at bwill@microsoft.com and I'll hook you up.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8149"></thr:in-reply-to></entry><entry><id>8152</id><published>2005-05-09T22:47:00.0-05:00</published><updated>2005-05-09T22:47:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">On Attribute-Based Programming Models</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8149"></thr:in-reply-to></entry><entry><id>8153</id><published>2005-05-09T23:57:00.0-05:00</published><updated>2005-05-09T23:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">On Attribute-Based Programming Models</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8149"></thr:in-reply-to></entry><entry><id>8163</id><published>2005-05-10T08:51:00.0-05:00</published><updated>2005-05-10T08:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A Failure to Communicate</title><content type="html">*Affordable* Biztalk-esque features in Indigo. Great idea, I think. Rocky Lhotka and you seem to have the same thinking I do right now: 1. Messages, and 2. Services that are tolerant to un-pretty messages. Would that be considered broken contracts in Indigo ?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8149"></thr:in-reply-to></entry><entry><id>8166</id><published>2005-05-10T10:30:00.0-05:00</published><updated>2005-05-10T10:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: A Failure to Communicate</title><content type="html">Finally!!!
&lt;br /&gt;Almost 12 years ago, when I was a graduate student, we built a OO runtime, where everything was an object, including methods and messages that the objects excanged. And there was a single method (first responder) that would had a first chance on all messages coming to the object.
&lt;br /&gt;With scuh base object model, we did a lot of intersting experiments with message dispatch techniques. Even inheritance was not built in and we implemented several different approaches. All possible because message was a first class entity, and could always be intercepted. Pretty similar to WINPROCs, if you think about it :)
&lt;br /&gt;
&lt;br /&gt;- Ilya</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8149"></thr:in-reply-to></entry><entry><id>8181</id><published>2005-05-10T21:43:00.0-05:00</published><updated>2005-05-10T21:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Read My Lips: No New Languages</title><content type="html">&lt;div&gt;In the &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/05/09/8149.aspx#FeedBack"&gt;comments &lt;/a&gt;to my last post, Bruce Williams (from the Indigo team) asks:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&lt;font color="#ff0000"&gt;Would it be accurate to say that you are (reasonably) satisfied with the _features_ of Indigo, but you don't want to use C# (as it exists today), but would prefer some mix of a language ("M#"?) that has SOA constructs as first-class language elements, and perhaps equivalent GUI tools like the Biztalk 'Mapper' you described in another post?&lt;/font&gt;&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Emphatically NO! I'm reasonably satisfied with the features of Indigo, but I want them exposed effectively in the languages I use today (VB.Net and C#). The absolute last thing we need is a new language. Take a look at what the VB team did with the Module statement. Whether or not you think the VB Module is good idea (lots of people hate it, but I think it has its occasional uses), it shows pretty clearly that what I suggested is feasible without any changes to the CLR or the CTS. From the docs:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Modules are a reference type similar to classes, but with some important distinctions. The members of a module are implicitly &lt;strong&gt;Shared [static for the rest of the world]&lt;/strong&gt; and scoped to the declaration space of the standard module's containing namespace, rather than just to the module itself. Unlike classes, modules can never be instantiated, do not support inheritance, and cannot implement interfaces. A module can only be declared in a namespace and cannot be nested in another type.&lt;/div&gt;
&lt;div&gt;You can have multiple modules in a project, but members with the same name defined in two or more modules must be qualified with their module name when accessed outside of their module. &lt;/div&gt;
&lt;div&gt;[Comment in brackets added]&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;If the VB.Net team can do that, I don't see what the problem is with implementing the concept of a Message as a restricted reference type. Even if that is out of scope for the Indigo team, there are any number of ways that they could surface the inherent functionality of Indigo without the relegating it to a lame set of attributes (but that's my next post).&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author></entry><entry><id>8182</id><published>2005-05-10T22:35:00.0-05:00</published><updated>2005-05-10T22:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">All Representations are Equal, but some Representations are More Equal than Others</title><content type="html">&lt;div&gt;Steve Maine &lt;a href="http://hyperthink.net/blog/PermaLink,guid,b641ba44-ce7e-440e-9f23-03fe875b625a.aspx"&gt;responds&lt;/a&gt; to my rant against attributes with some interesting and quite revealing comments about the centrality of attributes to the Indigo programming model. I'll leave aside the assumption that I want a new language, as I've already dealt with that. I want focus on Steve's comment about attributes:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&lt;font color="#ff0000"&gt;I can see where John’s coming from; other frameworks have used CLR attributes to convey “extra stuff” that’s not really central to the core programming model. In Indigo, though, attributes are central to the programming model and are by no means “second-class” or unimportant. Indigo uses CLR types to denote two equivalent representations of the same underlying concept that exist simultaneously. Each representation is equally important, and external contracts aren’t relegated to subservient status just because they’re defined in attributes.&lt;/font&gt;&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Hogwash! The "other frameworks" are actually doing the right thing and it's Indigo that's in the wrong here. The word "attribute" has a specific meaning in the English language and that meaning is reflected in the nature of attributes in the CLR. An attribute is a quality or characteristic inherent in someone or something. Grammatically, an attribute is a word or phrase syntactically subordinate to another word or phrase that it modifies. It is quite obvious that CLR designers chose the name "attribute" for the programming construct because it fits perfectly. A CLR attribute is both syntactically subordinate to the construct it modifies and expresses a quality or characteristic of that construct. Consciously or not, by using attributes for the CLR version of the contract, the Indigo team is making a value judgment about how we should design our applications. That is clearly reflected in Steve's example:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;
&lt;p&gt;&lt;font size="1"&gt;[&lt;font color="#008080"&gt;DataContract&lt;/font&gt;( ContractName = &lt;font color="#800000"&gt;"Foo"&lt;/font&gt; )]            &lt;br /&gt;&lt;font color="#0000ff"&gt;public&lt;/font&gt; &lt;font color="#0000ff"&gt;class&lt;/font&gt; &lt;/font&gt;&lt;font size="1"&gt;&lt;font color="#008080"&gt;Bar                                        &lt;br /&gt;&lt;/font&gt;{                                                                    &lt;br /&gt;    [&lt;font color="#008080"&gt;DataMember&lt;/font&gt;( Name = &lt;font color="#800000"&gt;"Whoosit"&lt;/font&gt; )]    &lt;br /&gt;    &lt;font color="#0000ff"&gt;private&lt;/font&gt; &lt;font color="#0000ff"&gt;string&lt;/font&gt; Baz;&lt;br /&gt;}&lt;/font&gt; 
&lt;/p&gt;&lt;p&gt;&lt;font size="1"&gt;=&amp;gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="1"&gt;&amp;lt;xs:schema xmlns:tns="&lt;a href="http://schemas.datacontract.org/2004/07/"&gt;http://schemas.datacontract.org/2004/07/&lt;/a&gt;" xmlns:ser="&lt;a href="http://schemas.microsoft.com/2003/10/serialization/"&gt;http://schemas.microsoft.com/2003/10/Serialization/&lt;/a&gt;" &lt;br /&gt;       elementFormDefault="qualified" targetNamespace="&lt;a href="http://schemas.datacontract.org/2004/07/"&gt;http://schemas.datacontract.org/2004/07/&lt;/a&gt;" &lt;br /&gt;       xmlns:xs="&lt;a href="http://www.w3.org/2001/xmlschema"&gt;http://www.w3.org/2001/XMLSchema&lt;/a&gt;"&amp;gt;&lt;br /&gt;  &amp;lt;xs:import namespace="&lt;a href="http://schemas.microsoft.com/2003/10/serialization/"&gt;http://schemas.microsoft.com/2003/10/Serialization/&lt;/a&gt;" /&amp;gt;&lt;br /&gt;  &amp;lt;xs:complexType name="Foo"&amp;gt;&lt;br /&gt;    &amp;lt;xs:sequence&amp;gt;&lt;br /&gt;      &amp;lt;xs:element name="Whoosit" nillable="true" type="ser:string" /&amp;gt;&lt;br /&gt;      &amp;lt;xs:sequence minOccurs="0" maxOccurs="unbounded"&amp;gt;&lt;br /&gt;        &amp;lt;xs:element ref="ser:VersionDelimiter" /&amp;gt;&lt;br /&gt;        &amp;lt;xs:any minOccurs="0" maxOccurs="unbounded" namespace="##targetNamespace" processContents="lax" /&amp;gt;&lt;br /&gt;      &amp;lt;/xs:sequence&amp;gt;&lt;br /&gt;    &amp;lt;/xs:sequence&amp;gt;&lt;br /&gt;    &amp;lt;xs:attributeGroup ref="ser:TypeAttributes" /&amp;gt;&lt;br /&gt;  &amp;lt;/xs:complexType&amp;gt;&lt;br /&gt;  &amp;lt;xs:element name="Foo" nillable="true" type="tns:Foo" /&amp;gt;&lt;br /&gt;&amp;lt;/xs:schema&amp;gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;These two supposedly equal representations aren't equal at all. It's fairly obvious how to go from the CLR representation to the XML Schema, but how would one reverse the process? You can't. The Indigo team has been quite clear that if you want to design the message first, they "will get out of your way" which is just another way of saying they won't help at all. I will say it again. What I'm asking for is not difficult or bizarre, but it is something that is best done by Microsoft. It won't be done, because Microsoft (especially the Indigo team) doesn't believe that it has value. They are too wrapped up in OO orthodoxy to see what's plainly there. Writing true service oriented applications requires service oriented analysis and design, not half-baked, after the fact, sprinkling magic SO pixie dust on your same-old object model.&lt;/div&gt;
&lt;div&gt;
&lt;p&gt; &lt;/p&gt;&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;&lt;font size="1"&gt;&lt;/font&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>7</thr:total></entry><entry><id>8205</id><published>2005-05-11T15:01:00.0-05:00</published><updated>2005-05-11T15:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: All Representations are Equal, but some Representations are More Equal than Others</title><content type="html">Let me start by saying that I completely agree that the use of attributes in Indigo's programming model is unorthodox.  But...
&lt;br /&gt;
&lt;br /&gt;In your previous post you said:
&lt;br /&gt;
&lt;br /&gt;"If the VB.Net team can do that, I don't see what the problem is with implementing the concept of a Message as a restricted reference type." 
&lt;br /&gt;
&lt;br /&gt;In my personal opinion, if Microsoft is going to kluge the programming model with the use of mechanisms like Module in VB.NET, I have no problem with their apparent disregard to the proper use of attributes.   This, if you think about it, is your argument for the Message type.
&lt;br /&gt;
&lt;br /&gt;On a side note: wouldn’t any encapsulation of the message restrict your access (at some level) to the message?
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>8265</id><published>2005-05-12T05:36:00.0-05:00</published><updated>2005-05-12T05:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: All Representations are Equal, but some Representations are More Equal than Others</title><content type="html">Sam,
&lt;br /&gt;
&lt;br /&gt;We've had the VB module discussion before. I don't really have strong feelings either way on it, but that wasn't the point of my post. I used it as an example of how a language can be innovative without needing to change the CLR or CTS. Maybe I should used the Eiffel.Net example (multiple inheritance for .Net).
&lt;br /&gt;
&lt;br /&gt;Yes, the whole point of the encapsulation of the message is to restrict how you can access a message. I don't think you have to go as far as BizTalk does (where the message is essentially immutable), but I think messages are different from class instances in important ways.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>8381</id><published>2005-05-13T23:33:00.0-05:00</published><updated>2005-05-13T23:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: All Representations are Equal, but some Representations are More Equal than Others</title><content type="html">I can't really comment any further about the native C# 'message' issue - I don't know what if any efforts we made in that direction.  I suspect that if we did pursue that, we were either too late in the C# 2.0 ship cycle to get it in, and/or we weren't able to convince the C# folks that our library was core enough to be worth changing the language specification.  However, I'm just guessing.  I'll ping someone else on the team who might know more, perhaps they'll chime in.
&lt;br /&gt;
&lt;br /&gt;As for the XSD -&amp;gt; Code scenario, we do support that; you can feed the XSD in your post to our tools and get code generated for you.  If you have any problems with this functionality, please let us know!
&lt;br /&gt;
&lt;br /&gt;I do agree there is a lot more we could be doing; graphical message construction and transformation sounds very cool to me.  Tell us what you want or need, and we'll get as much goodness in before RTM as we can.
&lt;br /&gt;
&lt;br /&gt;There may be some points on which, in the end, we'll have to agree to disagree (attributes?); but if there are issues with Indigo that block the development of any type of distributed scenario, we want to know about it.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>8384</id><published>2005-05-14T10:01:00.0-05:00</published><updated>2005-05-14T10:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">An Evening of Indigo with David Chappell in Washington, DC</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>8385</id><published>2005-05-14T10:09:00.0-05:00</published><updated>2005-05-14T10:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">An Evening of Indigo with David Chappell in Washington, DC</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>14101</id><published>2005-08-13T23:05:00.0-05:00</published><updated>2005-08-13T23:05:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">10 Things I Hate About Indigo</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>59910</id><published>2009-04-10T23:08:24.0-05:00</published><updated>2009-04-10T23:08:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Model Boats</title><content type="html">What I find fascinating is that we can clearly see the past of Tokyo as a slum. How much of a good thing it was that these slummy areas were not master planned and“ redeveloped” but rather left to develop on their own and retrofitted with modern infrastructure</content><author><name>Anonymous</name></author><thr:in-reply-to ref="8182"></thr:in-reply-to></entry><entry><id>9612</id><published>2005-05-28T14:31:00.0-05:00</published><updated>2005-05-28T14:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Involved in Blogging, but Not Committed</title><content type="html">Consider the case of the bacon and egg breakfast. The chicken is involved, the pig is committed! Since my last post, I've done a Microsoft Webcast, become the bottleneck on a huge project at work, and taken on some pressing personal commitments. I've got a long list of items in my aggregator that I want to address. Let's see how many posts I can pound out over this weekend.</content><author><name>john-cavnar-johnson</name></author></entry><entry><id>9613</id><published>2005-05-28T15:51:00.0-05:00</published><updated>2005-05-28T15:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Not Quite a Classic Blunder</title><content type="html">&lt;div&gt;Death isn't on the line, so I feel safe going against Sam Marcuccio in this &lt;a href="http://sarkhouston.com/blogs/smarcuccio/archive/2005/05/21/158.aspx"&gt;discussion&lt;/a&gt;. I'll start at the bottom of Sam's post and work my way up. The last line says "The really funny part of all this is, based on the argument, you'd never guess which on of these guys works for Microsoft". I know there was a smiley face after that, but I'm totally confused. To the extent there is an official Microsoft position on service orientation, Rich's &lt;a href="http://blogs.msdn.com/richardt/archive/2005/05/05/415116.aspx"&gt;position&lt;/a&gt; is it. Sam thinks we're arguing over semantics. He's right, but not in the sense he means. The argument isn't over semantics in the common, rather narrow, sense of the meaning of particular words as much as it is over the use of language to communicate ideas. Rich and I have very different ideas about how to use language to construct useful models for describing software design. Sam also thinks that my position is technology centric and nothing could be further from the truth. Using WS* technologies doesn't make you SO.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Sam says he agrees with just about everything Rich Turner had to say about SOA, but I wonder if Sam ever read Rich's comments &lt;a href="http://blogs.msdn.com/william_zentmayer/archive/2004/08/18/216441.aspx"&gt;here&lt;/a&gt;.  Rich says that the four tenets are mandatory. This is the crux of my disagreement with Rich and his co-workers at Microsoft. It's also where I think Sam misunderstands Rich's position. If you believe that the four tenets are mandatory, you believe that they define service orientation rather than describe it. If the four tenets &lt;strong&gt;define &lt;/strong&gt;service orientation, then it's obvious that there is no such thing as SOA. No real software architecture can be defined by those four tenets. If, on the other hand, you believe that the four tenets represent a description of service orientation, the situation is completely different. Architectures can be described as more or less service-oriented and evaluated on how well they meet the needs of their users. As David Ing has &lt;a href="http://www.from9till2.com/CommentView.aspx?guid=2354684e-5c70-4e69-b711-5097be3b57af"&gt;described &lt;/a&gt;so well, the four tenets can't be taken as revealed truth by those of us who actually build enterprise systems.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;If Rich's position is correct, then every single application built with Indigo will be service oriented. I can guarantee that not every Indigo application will have the wonderful qualities from &lt;em&gt;Code Complete &lt;/em&gt;that Sam describes. Indeed, given the heavy promotion of [DataContract] and its related attributes, I can guarantee that most Indigo apps will be more tightly coupled than the typical ASMX application is today (and that's really disappointing). Not because [DataContract] will inherently create tightly coupled systems, but because it will enable tightly coupled distributed object designs to claim service orientation while still suffering from all the failings of distributed objects. The Indigo team's "we learned SO so you don't have to" attitude will inevitably result in applications that won't get the full advantage of the Indigo platform.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>2</thr:total></entry><entry><id>9614</id><published>2005-05-28T15:56:00.0-05:00</published><updated>2005-05-28T15:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Not Quite a Classic Blunder</title><content type="html">Just some personal thoughts:
&lt;br /&gt;
&lt;br /&gt;Not to beat a dead horse, but the concept of "service orientation" is orthogonal to the concept of "Service Oriented Architecture". "Service orientation" describes characteristics of a central abstraction (the service) that is used as the focal point of complexity management within a software metasystem. SO says nothing about the internal architecture of the systems that particpate in that metasystem, aside from the fact that they are externally organized around these things called services that adhere to the 4 tenets. The 4 tenets define what a service is, not how systems are built around services. 
&lt;br /&gt;
&lt;br /&gt;Here's a question: what are the Three Tenets of Object Orientation? Encapsulation, inheritance, polymorphism. Those three things definte what the term "object" means in the context of object-orientation. That's a completely separate thing from "object-oriented analysis and design". The 3 tenets of object orientation don't define "object-oriented architecture" any more than the 4 tenets of service orientation define service orientation. That doesn't mean that SOA doesn't exist -- just that SO != SOA (QED).
&lt;br /&gt;
&lt;br /&gt;Indigo will make it easy for developers to create abstractions that adhere to the principles of service-orientation. The product team has intentionally chosen not to adopt features of existing stacks (e.g. the ability to directly pass object references around in .NET Remoting) that don't adhere to those principles. What it doesn't do is design your app for your - it's up to you to design the shape of your services in a way that's appropriate for the specific problem you're trying to solve. That said, I think Indigo will make it harder to shoot yourself in the foot architecturally than previous stacks.
&lt;br /&gt;
&lt;br /&gt;Regarding [DateContract] introducing tight coupling, I'm unclear as to how you draw that conclusion. [DataContract] is all about manifesting data on the wire that is versionable by default and free of type-level dependencies. It's very different from distributed objects because [DataContract] does not project behavior. It's impossible to couple an application to the behavior of a [DataContract] because they (by definition) have no behavior. Do you have specific concerns about [DataContract] that the product team might be able to respond to?
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9613"></thr:in-reply-to></entry><entry><id>9625</id><published>2005-05-29T14:48:00.0-05:00</published><updated>2005-05-29T14:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Inconceivable!</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="9613"></thr:in-reply-to></entry><entry><id>9742</id><published>2005-06-04T11:13:00.0-05:00</published><updated>2005-06-04T11:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">[DataContract], the Holy Roman Empire of Distributed Computing</title><content type="html">&lt;div&gt;The &lt;a href="http://en.wikipedia.org/wiki/Holy_Roman_Empire"&gt;Holy Roman Empire&lt;/a&gt; was, as Voltaire famously remarked, "neither Holy, nor Roman, nor an Empire." Likewise, the [DataContract] in Indigo is neither data nor a contract. Moreover, like the putative Empire, the [DataContract] will never reach its rather ambitious goals, due to the inherent contradictions of its conflicted nature. Just as the German kings who styled themselves emperors initially used the imprimatur of the Papal crowning to enhance their power and prestige but eventually were irreversibly weakened by that dependence, the [DataContract] gains a great deal of apparent power from its connection to your domain object model, but its dependence on your internal object model ultimately undermines its utility.&lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Not a Contract&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;A contract is "an agreement between two or more parties."  In most discussions of services, the term contract is used in an entirely inappropriate fashion. Because the consuming side of the "contract" is unknown at the time the "contract" is published, we should hardly be calling this thing a contract. When you specify the [DataContract] in an Indigo app, you are stating both an expectation and a commitment. Your expectation is that consumers of your service will send you the specific type of message you are describing and your commitment is that, if the message meets your specification, you will do something with it. Most (but not all) of the versioning problems that contract-based distributed computing stacks have are a direct result of mistaking this expectation and commitment for a contract. If we want to build real-world business systems effectively, we need to be able more flexibility than a contract allows. For example, we need be able to specify multiple (potentially unrelated) message types with the same endpoint and operation. Rather than a system that, like both Indigo and ASMX, completely hides the transformation between the messages and our internal processing model, we need a system that surfaces that transformation to the developer. The transformation between the external messages and internal processing is a key part of the business logic of any service. Having to control that transformation indirectly through attributes is slow, frustrating, and error-prone.&lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Not Data&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;The problem with thinking of messages as data is that data has no meaning on its own. One of the differences between RPC and message-oriented programming is that messages, unlike the parameters of an RPC, can have meaning outside the particular service endpoint to they are addressed to. The [DataContract]/[DataMember] paradigm works fine if your understanding of what you're doing is mapping individual parameters of a remote call to the state of an object, but it breaks down quickly if you want to actually design a message with rich semantics. It is certainly possible to achieve a message with rich semantics using the paradigm, but the attribute-based approach is clumsy at best. The important semantics of the message are controlled by the relationship of the attributes to the class members.&lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Not the Best Way to Design Messages&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Designing the messages that your services process is a key part of building a service oriented architecture. In the Indigo model, the preferred way to do this is to design a class (that is part of your internal processing model) and annotate that class with the appropriate attributes. This seems to be part of a deliberate strategy to hide the message from the developer. As an Indigo developer using the [DataContract] mechanism, your primary view of the message is a fragmented set of attributes attached to a class. Your secondary view is a confusing XML Schema that's cluttered with detritus needed only to support the Indigo infrastructure. In neither case is it easy to tease out what a instance of your message would actually look like. There's a very clear assumption that the XML Schema that is generated is only going to be consumed by toolsets similar to Indigo. These schemas should have annotation stating "Not Intended for Human Consumption." Unfortunately, the sheer complexity of supporting all of the [DataContract] magic makes it very difficult for alternate toolsets to productively consume these schemas (or schemata, if you prefer). This will limit interoperability for developers going down that route.&lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;If Not [DataContract], Then What?&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Of course, you always have the option of designing an XML Schema in some alternative tool and generating a .Net class from it. Unfortunately, Indigo doesn't seem to have advanced the state of the art very much here. That's more due to the inherent complexity of XML Schema than any Indigo deficiency. Starting from an XML Schema design leads one down a path of creating message types that are difficult, if not impossible, to consume in .Net (dealing with dates is but one obvious example). Beyond that, XML Schema is, in many respects, ill-suited for message design. First, and foremost, schema validation is all or nothing. While for some scenarios that is a good thing, for many scenarios all or nothing validation is inappropriate. For example, there is no easy way to design a schema that will ignore an optional element with the wrong datatype (as far as I know, I'm never quite sure about anything with XML Schema).&lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Is [DataContract] Evil?&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Not at all. In fact, if you have an existing object model that you want to expose to an Indigo service, it is a great tool. I just don't think it is the best way to design new services because it directly couples your service's messages to your internal processing model via an enormous hidden infrastructure that you can affect only by cumbersome, trial and error attribute twiddling. In spite of that, I expect it will be fairly successful. Just as the Holy Roman Empire lasted for the better part of a millennium in spite of its rather obvious flaws, [DataContract] will be the basis for a generation of distributed applications.  &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>10</thr:total></entry><entry><id>9744</id><published>2005-06-04T14:52:00.0-05:00</published><updated>2005-06-04T14:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: [DataContract], the Holy Roman Empire of Distributed Computing</title><content type="html">Fortunately, I don't believe that [DataContract] is the only way to use Indigo, I believe that Indigo can also do a great job of transporting messages/documents. It has been a long path from processing 80-col cards to dealing with loosely formated data. I wonder how useful it would be to consume the XML output from Word 12 via [DataContract]! There will often be many advantages to working directly with the XML so learning how to do so will be a usefull skill. Hopefully, someday, the languages will catch up to make the work easier.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>9751</id><published>2005-06-05T10:38:00.0-05:00</published><updated>2005-06-05T10:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: [DataContract], the Holy Roman Empire of Distributed Computing</title><content type="html">So, do we use Indigo with the XmlSerializer and design contracts in other tools?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>9752</id><published>2005-06-05T11:40:00.0-05:00</published><updated>2005-06-05T11:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Indigo and DataContract</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>9796</id><published>2005-06-05T12:53:00.0-05:00</published><updated>2005-06-05T12:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Programming by contract a bad idea?</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>10544</id><published>2005-06-06T14:18:00.0-05:00</published><updated>2005-06-06T14:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: [DataContract], the Holy Roman Empire of Distributed Computing</title><content type="html">Perhaps we need something closer to this?  http://weblog.infoworld.com/udell/2005/05/25.html
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>10546</id><published>2005-06-07T03:49:00.0-05:00</published><updated>2005-06-07T03:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Comparing SDLs: An Approach to Consuming Services and Their Descriptions</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>10625</id><published>2005-06-08T06:53:00.0-05:00</published><updated>2005-06-08T06:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: [DataContract], the Holy Roman Empire of Distributed Computing</title><content type="html">RePost:
&lt;br /&gt;http://www.yeyan.cn/SoftwareEngineering/DistributedComputing.aspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>10637</id><published>2005-06-08T10:35:00.0-05:00</published><updated>2005-06-08T10:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Интересное</title><content type="html">??????? ??????? ?????? ?????, ????? ????????? ?????????? ?????:
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>13349</id><published>2005-07-14T10:24:00.0-05:00</published><updated>2005-07-14T10:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">If not schema, then what?</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>28728</id><published>2006-06-21T05:07:00.0-05:00</published><updated>2006-06-21T05:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: [DataContract], the Holy Roman Empire of Distributed Computing</title><content type="html">Just a few thoughts
&lt;br /&gt;
&lt;br /&gt;&amp;lt;quote&amp;gt;
&lt;br /&gt;A contract is "an agreement between two or more parties."  In most discussions of services, the term contract is used in an entirely inappropriate fashion. Because the consuming side of the "contract" is unknown at the time the "contract" is published, we should hardly be calling this thing a contract.
&lt;br /&gt;&amp;lt;/quote&amp;gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;I agree that the word ‘contract’ can lead to some semantic conflict there, ‘Terms of Use’ seem to be a better suited phrase i.e. The service publicly states, “I’m am a service, these are my operations, this is the data and the format that I will accept. I can only understand your intent if you send me a message with the following operation with the respective data in the format described …” etc. However disagree that it is entirely inappropriate. Not all contracts are drafted with explicit knowledge of universe of entities/persons that will agree to/sign said contract. Some “None Disclosure Agreement” contracts leave no room for discussion, either you accept the terms of us working together specified by the contract or you don’t, while others can be negotiated/customized. I think the use of the word contract here is describes these ‘generic’ contracts type, those that employees sign when joining an organization that aren’t re-written for every individual joining the company.
&lt;br /&gt;
&lt;br /&gt;&amp;lt;quote&amp;gt;
&lt;br /&gt;Rather than a system that, like both Indigo and ASMX, completely hides the transformation between the messages and our internal processing model, we need a system that surfaces that transformation to the developer. The transformation between the external messages and internal processing is a key part of the business logic of any service. Having to control that transformation indirectly through attributes is slow, frustrating, and error-prone.
&lt;br /&gt;&amp;lt;/quote&amp;gt;
&lt;br /&gt;
&lt;br /&gt;Interesting, I would like to find out more about why you think this. I rather like the whole ‘Services are atomic’ notion and don’t really care about the other guys internal representation of the message. 
&lt;br /&gt;
&lt;br /&gt;For the most part I agree with the rest of the post :) In systems oriented around message exchange developers should have access to the message as a first class citizens and not some entity of another type system that I hope gets rendered as my message after some processing. That said though, I think they've done a pretty good job which covers most of the simpler service contract requirements. I hope better tools are coming soon though and smarter code generators so that I can design and view my messages as XML (if this continues to be the service lingua franca) and be confident when manipulating my internal object representation that it will be rendered to my message correctlyon the wire.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="9742"></thr:in-reply-to></entry><entry><id>13392</id><published>2005-07-19T05:45:00.0-05:00</published><updated>2005-07-19T05:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Coming up for air</title><content type="html">&lt;div&gt;&lt;font style="BACKGROUND-COLOR: #fff9ff"&gt;I haven't posted here in over a month. Last weekend, we went live with a major project at the day job which took up most of my waking hours. I expect to have more time to post soon. For now though, I'm on vacation and enjoying a little rest and relaxation.&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author></entry><entry><id>13855</id><published>2005-08-04T06:40:00.0-05:00</published><updated>2005-08-04T06:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Majoring on the Minors</title><content type="html">&lt;div&gt;The key to giving good advice is knowing what matters most. It's possible to be 100% correct in what you say and still give stunningly bad advice if your focus is on the minutia of a topic. Rich Turner falls into this trap in his article over on MSDN called "&lt;a href="http://msdn.microsoft.com/webservices/choosing/default.aspx?pull=/library/en-us/dnwebsrv/html/dsgprescriptiveguidance.asp"&gt;Developing Distributed Services Today&lt;/a&gt;". The self-proclaimed goal of the article is to "help you make the best choices when deciding how to build distributed systems today on the Microsoft platform." As such, the article is a miserable failure even though almost all of what it says is accurate. I want to examine what Rich's article leaves unsaid because if you really want to make the best choices about building distributed systems you can safely ignore almost everything in Rich's article, but there are some huge issues that you will have to address.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Distributed Systems&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Microsoft &lt;strong&gt;has&lt;/strong&gt; learned a lot about what works and what doesn't in building distributed systems. Unfortunately, the real lessons of the past 10 years don't seem to have permeated throughout the organization. Looking at things from the outside, I would say the BizTalk team and the folks who designed WSE get it, the folks who designed DCOM, .NET Remoting, ASMX, and Indigo (Windows Communication Foundation) don't.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Distributed Objects&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;They suck. They sucked 10 years ago, they suck today, they'll suck 10 years from now. If you want an accessible platform-independent explanation of why, go read Ted Neward's &lt;a href="http://www.neward.net/ted/weblog/index.jsp?date=20050727#1122529218328"&gt;blog&lt;/a&gt;. Here's a bit of advice for architects and developers. If the programming model for your distributed technology of choice includes the concept of a proxy, you're being forced into distributed object semantics. You can build good distributed systems that way, but you'll have ignore all its RAD features and spend a lot of time building your own programming model on top of it. &lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;The key features of services are the messages they understand (i.e. receive and transmit), the operations they perform, and the events they respond to or initiate. Everything is else is just icing on the cake. &lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Guidance - Building Services Today&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;My advice assumes you want to build non-trivial distributed applications on Microsoft's platform. Don't worry as much about "future-proofing" applications as you do about actually meeting today's requirements.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Guidance Summary&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;ul type="disc" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;Decide if you need BizTalk Server. BizTalk is a high value and high cost addition to your infrastructure.&lt;/li&gt;
&lt;li&gt;Use System.Messaging for reliable communication between tiers under your control.&lt;/li&gt;
&lt;li&gt;Use WSE when MSMQ is not available.&lt;/li&gt;
&lt;li&gt;Use ASMX web services only as a façade layer.&lt;/li&gt;
&lt;li&gt;Don't use .NET Remoting.&lt;/li&gt;
&lt;li&gt;Don't use COM+ and Enterprise Services unless you have to.&lt;/li&gt;
&lt;li&gt;Design your systems around messages, not objects&lt;/li&gt;
&lt;li&gt;Prefer asynchronous communication strategies&lt;/li&gt;&lt;/ul&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Build Code Using .NET&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Here's the one important thing that Rich gets right.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Build Web Services&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;The best thing about ASMX web services is that, if you use a little care, you can do simple communication with many platforms. Unfortunately, if you use them the way Microsoft encourages you to (both by their advice and their tool support), you will end up with tightly-coupled applications that use a distributed object paradigm. If you want to integrate with other platforms in any but the most simplistic ways, you really ought to be looking at BizTalk. &lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Enhance Your Services with WSE If You Need to Support WS-*&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Actually, the best thing about WSE is that has a really nice message-oriented programming model and an excellent extensibility mechanism.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Keep Objects and Components Inside Your Services&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Great advice. Unfortunately Rich goes on to contradict himself later in the article. &lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Use Enterprise Services &amp;amp; COM+ When Appropriate&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;The marriage of .NET and COM+ has been an uneasy one at best. The mismatch between the two systems assumptions (particularly, but not limited to, the difference between garbage collection and ref counting) is so great that complex interactions are typically plagued by nasty bugs. Avoid building systems that require frequent, fine-grained crossing of that border.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Flowing Transactions&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Don't use distributed transactions unless you absolutely have to. Avoid designs that allow the caller to initiate transactions. Resources that are that tightly coupled belong on the same system, if at all possible.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Use .NET Remoting When Appropriate&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Except that it is never appropriate. Well, it is theoretically possible that it might be the best solution to some problem, but I doubt it. Sure, there are lots of situations where building a system on .NET Remoting won't be a disaster, but why invest in a dead-end technology that won't scale, has no reasonable security story, and forces you into an inappropriate programming model.&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;Use System.Messaging/MSMQ for Queued Messaging&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;System.Messaging and MSMQ are Microsoft's most under-utilized technologies. They've done an excellent job steering developers away from it by failing to show the best way to use it. Here's what you need to know:&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;ul type="disc" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;Use private queues. Very few applications need public queues and the performance hit is substantial.&lt;/li&gt;
&lt;li&gt;Use non-transactional queues. Again, very few applications need transactional queues.&lt;/li&gt;
&lt;li&gt;System.Messaging is messed up in a lot of ways, but you can work around that.&lt;/li&gt;
&lt;li&gt;Use the asynchronous methods of System.Messaging (BeginReceive and BeginPeek) where possible.&lt;/li&gt;
&lt;li&gt;Learn to build your own formatter for System.Messaging. &lt;/li&gt;&lt;/ul&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;The Future of Microsoft Distributed Systems Technologies&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;The future is pretty much irrelevant to building distributed systems today, so I'll ignore the rest of Rich's article.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>110</thr:total></entry><entry><id>13857</id><published>2005-08-04T08:31:00.0-05:00</published><updated>2005-08-04T08:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">The Developing Distributed Services Article Discussion Continues</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13864</id><published>2005-08-04T10:56:00.0-05:00</published><updated>2005-08-04T10:56:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">Howdy, virtual neighbor. Have to say, my experience building systems makes me me agree with pretty much everything you've said. About the only point I'd raise is that one of your other virtual neighbors (Don) was one of the designers of Indigo. :o
&lt;br /&gt;
&lt;br /&gt;Luckily, he's highly fire retardant. :) </content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13867</id><published>2005-08-04T12:16:00.0-05:00</published><updated>2005-08-04T12:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">Great post - thanks. Say what you mean next time... :-)
&lt;br /&gt;
&lt;br /&gt;- David</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13872</id><published>2005-08-04T20:52:00.0-05:00</published><updated>2005-08-04T20:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">"Use non-transactional queues. Again, very few applications need transactional queues."
&lt;br /&gt;
&lt;br /&gt; I don't agree with above tip. The transactional messaging in the even driven architecture simplified design pattern and its implementation in the scalable Enterprise solution. 
&lt;br /&gt;
&lt;br /&gt;For instance - the web driven application, the request is written into the database and MSMQ in the transactional sync manner and returning back its ticket. Once the ticket has been returned, the request is going to process asynchronously and when it finished, the notification message is sent to the web cluster. The tx-message is ~100x slower than the express message, but the application model doesn't need to cover a multiple sending message across the network, losing messages, crashing process, etc. That's the great benefit of the tx-messaging.  Of course, there are applications where can be useful express messages instead of the transactional and the state can be handled in the database, but mostly those implications are deployed in the same machine (there is no possibility to lost or duplicate messages). 
&lt;br /&gt; 
&lt;br /&gt;Another great feature of the tx-messaging is sending the multiple transactional messages. This “tx-package” can be used for sending large images in the chunking manner, making processing in the specific order, etc. 
&lt;br /&gt;
&lt;br /&gt;Also, for the pulling message model such as message balancer, the tx-queues are mandatory elements in this model, without this feature the balancer will not move messages between the request and response queues in the reliable manner.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;Roman 
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13873</id><published>2005-08-04T22:45:00.0-05:00</published><updated>2005-08-04T22:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">WCF and [DataContract]</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13877</id><published>2005-08-05T03:21:00.0-05:00</published><updated>2005-08-05T03:21:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">Great Post ... when is the industry going to wake up and realize that building Distributed Systems using decade's old OO paradigms is a BIG mistake? Renaming the technology and/or porting it to new languages does not solve the fundamental problems inherent in distributed systems.
&lt;br /&gt;
&lt;br /&gt;I look at Indigo, and while I believe it has some great stuff, decorating a class with attributes to generate proxies is really no different than IDL.
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13878</id><published>2005-08-05T05:44:00.0-05:00</published><updated>2005-08-05T05:44:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Developing Distributed Services</title><content type="html">I'm glad someone else brings this to the table. John Cavnar-Johnson puts it very nicely, and I totally agree with...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13881</id><published>2005-08-05T07:57:00.0-05:00</published><updated>2005-08-05T07:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">“Distributed Objects” are bad?</title><content type="html">Some believe that “distributed objects” are, and always have been, a bad idea</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13882</id><published>2005-08-05T07:06:00.0-05:00</published><updated>2005-08-05T07:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">I agree mostly with every thing said...
&lt;br /&gt;
&lt;br /&gt;When I first read the article I understood the intent to be same advice on planning for Indigo.  
&lt;br /&gt;
&lt;br /&gt;But you seem to somewhat take offense at his advice and you are also a little rude.
&lt;br /&gt; 
&lt;br /&gt;Regarding Indigo and it's programming model, the goal there is to lower the barrier to entry.  So in keeping to that theme, what else could be presented to developers other than classes, methods and attributes?   XML?
&lt;br /&gt;
&lt;br /&gt;The implementation of the plumbing in Indigo is what makes it so compelling.  I try not to get hung up on the fact that I have to communicate with an endpoint through what looks and feels like a proxy.
&lt;br /&gt;
&lt;br /&gt;I have to admit, the attributes do get on my nerves a bit.  
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13891</id><published>2005-08-05T21:17:00.0-05:00</published><updated>2005-08-05T21:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Yet another post on the contract-first aproach</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13906</id><published>2005-08-07T14:15:00.0-05:00</published><updated>2005-08-07T14:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">So you want a distributed architecture, eh?</title><content type="html">&amp;lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/08/04/13855.aspx"&amp;gt;John Cavnar-Johnson&amp;lt;/a&amp;gt; does a thorough job of demolishing much of the "advice" found on the recent MSDN article by Rich Turner. To tell you the truth, I agree with a lot of what John says. However, both in Rich's article and in John's rebuttal, I find the focus on technology to be over-the-top. The one main point that needs to get drilled home (that John does mention, but not with enough emphasis in my opinion) is that if you've decided on Service Orientation, then you've decided on messaging between your services. Unless a message is a Query Message (something like GetCustomers - level=platinum AND join date=last month AND last purchase date &amp;lt; last week), then these message interactions should be asynchronous.&lt;br /&gt;&amp;lt;BR/&amp;gt;&amp;lt;BR/&amp;gt;&lt;br /&gt;For anyone whose ever done this sort of thing, the technology for transporting messages between services is probably not an architectural issue. I have yet to see a single detailed design document online that shows how to design a service that will support asynchronous message exchanges. Everybody's going on and on about which technology to use - System.Messaging, Indigo/WCF/WTF/Whatever, Remoting, ASMX, ... like that's really going to break the bank. Without a solid design, how could such technological decisions even be made?&lt;br /&gt;&amp;lt;BR/&amp;gt;&amp;lt;BR/&amp;gt;&lt;br /&gt;Here's a short description of such a design...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13921</id><published>2005-08-08T14:24:00.0-05:00</published><updated>2005-08-08T14:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">On messaging and distributed system design</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13933</id><published>2005-08-09T09:46:00.0-05:00</published><updated>2005-08-09T09:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">On messaging and distributed system design</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13961</id><published>2005-08-10T19:37:00.0-05:00</published><updated>2005-08-10T19:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Get To know thy BizTalk</title><content type="html">Recently, some prominent people have started (or, most likely, are just now talking about it) about BizTalk Server, some in...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14072</id><published>2005-08-12T10:05:00.0-05:00</published><updated>2005-08-12T10:05:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">Do you know that WCF is the programming model for MSMQ (and, outside the database, for SSB) moving forward?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14290</id><published>2005-08-23T00:05:00.0-05:00</published><updated>2005-08-23T00:05:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Tibco EMS</title><content type="html">For a couple of years I've been using Tibco EMS (Enterprise Messaging Service), which is a heterogeneous implementation of JMS. Tibco has excellent client support for .NET Framework, .NET Compact Framework (very handy for embedded WinCE messaging nodes), C/C++, and of course Java.
&lt;br /&gt;
&lt;br /&gt;I build .NET clients and use J2EE in the middle-tier where messages are processed by the message driven bean (MDB) EJB type. I also use JMX mbeans for controlling serial devices but that clients communicate to via high level JMS messaging.
&lt;br /&gt;
&lt;br /&gt;I message XML documents described by XSD. On the .NET side I use the XsdObjectGen tool and on the Java side I use JAXB. Both tools generate source code for marshaling/unmarshaling XML documents.
&lt;br /&gt;
&lt;br /&gt;In the J2EE environment I use Hibernate to directly persist object graphs that result from JAXB unmarshaling XML messages. Persistence and messaging are usually done under an XA transaction. When there's a failure, then after a specified number of retries, the message is moved to a dead letter queue which is monitored for raising alerts - just as is the J2EE error logging.
&lt;br /&gt;
&lt;br /&gt;Tibco has high availability clustering and its server component is written in C code - a single server can handle thousands of connections. You'll find Tibco EMS messaging the best that can be had to use on Windows / .NET programming platforms.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14291</id><published>2005-08-23T05:33:00.0-05:00</published><updated>2005-08-23T05:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">It's been a few years since I was forced to use TIBCO products, but I must say my experience was very different from yours. I found their products to be overpriced, idiosyncratic, and unmanageable. From what little I know of JMS I would expect it to be a far superior API to the ones TIBCO exposed 5 years ago. I think I'll stick with MSMQ, but that's a personal preference. Your mileage may indeed vary.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14294</id><published>2005-08-23T07:19:00.0-05:00</published><updated>2005-08-23T07:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Tibco EMS is not Tibco Rendezvous</title><content type="html">Tibco EMS is a straightforward implementation of the JMS spec. It is not the same thing as their Tibco Rendezvous product that has been used pervasively on Wall Street for stock transactions. So Tibco has a mix of messaging products for different kinds of markets. (One of the more interesting is UDP-based Smartsockets - which might be a good match for some wireless distributed applications.)
&lt;br /&gt;
&lt;br /&gt;Am a former Microsofty and have used MSMQ - it's not in the same league as contemporary JMS products of the likes of SonicMQ and Tibco EMS.
&lt;br /&gt;
&lt;br /&gt;Even when looking past its lackluster messaging semantics (relative to JMS), MSMQ is a non starter in many enterprise IT development shops because its heterogeneous integration story is abysmal (compared to said JMS products).
&lt;br /&gt;
&lt;br /&gt;I would say this for MSMQ, though: If faced with doing a distributed project with DCOM or .NET Remoting vs MSMQ - I'd take MSMQ in a heartbeat. I'd take practically any messaging solution vs RPC when it comes to distributed application architecture.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14544</id><published>2005-09-06T13:51:00.0-05:00</published><updated>2005-09-06T13:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">In response ... Dear John</title><content type="html">Dear John.
&lt;br /&gt;Thank you so very much for taking the time to read the whitepaper I recently published to...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14554</id><published>2005-09-06T22:46:00.0-05:00</published><updated>2005-09-06T22:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">Man, I love these fights! ;)
&lt;br /&gt;
&lt;br /&gt;But why doesn't your template/skin show the trackback link to the sites that created the trackback? That sucks!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14559</id><published>2005-09-07T05:08:00.0-05:00</published><updated>2005-09-07T05:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">Dennis,
&lt;br /&gt;
&lt;br /&gt;I'm glad I can provide a little cheap entertainment in these troubled times. I agree about the trackbacks, but all the trackback spam is even worse. I do my best to hoist the relevant links back into my posts. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>14765</id><published>2005-09-11T11:51:00.0-05:00</published><updated>2005-09-11T11:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Messaging vs. RPC</title><content type="html">Nothing like a nice pissing contest: Rich Turner and John Cavnar-Johnson go back and forth about how to do distributed programming the right way. The starting point was Rich&amp;amp;#8217;s whitepaper on Developing Distributed Services Today, to which John posted a somewhat less than favorable comment. Rich responded (a little childishly, IMO, even in the edited version); John followed up again....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>15889</id><published>2005-10-25T08:04:00.0-05:00</published><updated>2005-10-25T08:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">I think you advice quite reasonable things. It's really important to share our experience with others in a kind of discussion so that we all would benefit. I have saved your post for our developers and they learnt some new things from it. The only questionable thing was "when appropriate". Have you posted any more detailed arcticles?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>32055</id><published>2006-07-17T00:39:00.0-05:00</published><updated>2006-07-17T00:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Majoring on the Minors</title><content type="html">how to obtain a singleton architecture, without using .NET Remoting</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>76248</id><published>2010-04-25T12:35:53.0-05:00</published><updated>2010-04-25T12:35:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">black creators on the list | Pressure Cooker Accessories</title><content type="html">Pingback from  black creators on the list | Pressure Cooker Accessories</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>76787</id><published>2010-05-20T11:10:50.0-05:00</published><updated>2010-05-20T11:10:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Aftermarket 1969 Dodge Coronet, Classic Coronet Sale</title><content type="html">Pingback from  Aftermarket 1969 Dodge Coronet, Classic Coronet Sale</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>76859</id><published>2010-05-20T11:51:33.0-05:00</published><updated>2010-05-20T11:51:33.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevrolet C1500 Used Classified Schedule, C13 C1500 Suburban Radiator Auto Parts Chevy Blazer</title><content type="html">Pingback from  Chevrolet C1500 Used Classified Schedule, C13 C1500 Suburban Radiator Auto Parts Chevy Blazer</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>76971</id><published>2010-05-20T12:52:22.0-05:00</published><updated>2010-05-20T12:52:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Free Avalanche Probes, Avalanche 2500 Transmission Leather Cut</title><content type="html">Pingback from  Free Avalanche Probes, Avalanche 2500 Transmission Leather Cut</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>76980</id><published>2010-05-20T12:56:29.0-05:00</published><updated>2010-05-20T12:56:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">100 Most Used Words, Pontiac T1000 Removal Shock Absorber</title><content type="html">Pingback from  100 Most Used Words, Pontiac T1000 Removal Shock Absorber</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>77220</id><published>2010-05-20T15:27:30.0-05:00</published><updated>2010-05-20T15:27:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">C230 Hid, C230 Sale Mercedes Benz C Class C43 Amg M&amp;amp;f Auto Sales</title><content type="html">Pingback from  C230 Hid, C230 Sale Mercedes Benz C Class C43 Amg M&amp;amp;f Auto Sales</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>77307</id><published>2010-05-20T16:35:23.0-05:00</published><updated>2010-05-20T16:35:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Find H 264, 264 Ingredients</title><content type="html">Pingback from  Find H 264, 264 Ingredients</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>77344</id><published>2010-05-20T16:59:23.0-05:00</published><updated>2010-05-20T16:59:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2006 325i Accessories Bmw 740il, 740il People</title><content type="html">Pingback from  2006 325i Accessories Bmw 740il, 740il People</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>77547</id><published>2010-05-20T19:19:39.0-05:00</published><updated>2010-05-20T19:19:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1993 Gmc Sonoma, Sale 2000 Used Gmc Sonoma</title><content type="html">Pingback from  1993 Gmc Sonoma, Sale 2000 Used Gmc Sonoma</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>77874</id><published>2010-05-20T23:47:25.0-05:00</published><updated>2010-05-20T23:47:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">F500 Radiator Sport Trac Ford F53, 1954 Ford F500</title><content type="html">Pingback from  F500 Radiator Sport Trac Ford F53, 1954 Ford F500</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>77910</id><published>2010-05-21T00:09:41.0-05:00</published><updated>2010-05-21T00:09:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Boulder Colorado Homes Sale 80304, Chevy Colorado Radio Wiring Harness</title><content type="html">Pingback from  Boulder Colorado Homes Sale 80304, Chevy Colorado Radio Wiring Harness</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>78071</id><published>2010-05-21T01:46:09.0-05:00</published><updated>2010-05-21T01:46:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">100 Sen, F 100 Pickup Radiator L6i</title><content type="html">Pingback from  100 Sen, F 100 Pickup Radiator L6i</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>78149</id><published>2010-05-21T02:35:11.0-05:00</published><updated>2010-05-21T02:35:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Horizon Discount State, Lx310 Alkaline Batteries Horizontal Scrolling</title><content type="html">Pingback from  Horizon Discount State, Lx310 Alkaline Batteries Horizontal Scrolling</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>78270</id><published>2010-05-21T03:45:03.0-05:00</published><updated>2010-05-21T03:45:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Hombre Treatment, Hombre Boiler</title><content type="html">Pingback from  Hombre Treatment, Hombre Boiler</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>78324</id><published>2010-05-21T04:14:41.0-05:00</published><updated>2010-05-21T04:14:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dodge Viper Interior Accessories, Dodge Viper Part Floor Mats Mopar</title><content type="html">Pingback from  Dodge Viper Interior Accessories, Dodge Viper Part Floor Mats Mopar</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>78403</id><published>2010-05-21T05:00:30.0-05:00</published><updated>2010-05-21T05:00:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E63 Wagon, Estate Wagon E63 Amg 2010 Mercedes Benz</title><content type="html">Pingback from  E63 Wagon, Estate Wagon E63 Amg 2010 Mercedes Benz</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>78834</id><published>2010-05-21T14:19:39.0-05:00</published><updated>2010-05-21T14:19:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford E 450 Super Duty Stripped Chassis Party Explorer Sport Trac, Rx400h Full Oem Gs 450h</title><content type="html">Pingback from  Ford E 450 Super Duty Stripped Chassis Party Explorer Sport Trac, Rx400h Full Oem Gs 450h</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>79162</id><published>2010-05-21T18:02:49.0-05:00</published><updated>2010-05-21T18:02:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">380se Bumper Junk Mercedes Benz 560sl, Ebay 560sl</title><content type="html">Pingback from  380se Bumper Junk Mercedes Benz 560sl, Ebay 560sl</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>79390</id><published>2010-05-21T20:11:34.0-05:00</published><updated>2010-05-21T20:11:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Parts 2002 Sl2 Saturn L300, Pluto L300 3 Parts</title><content type="html">Pingback from  Parts 2002 Sl2 Saturn L300, Pluto L300 3 Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>79484</id><published>2010-05-21T21:18:42.0-05:00</published><updated>2010-05-21T21:18:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Is250 Msrp Es350 2010 Lexus Rx350, Lexus Es350 Headlight Assembly</title><content type="html">Pingback from  Is250 Msrp Es350 2010 Lexus Rx350, Lexus Es350 Headlight Assembly</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>79881</id><published>2010-05-22T02:38:39.0-05:00</published><updated>2010-05-22T02:38:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Relay 1 Oem Full, 2 Discount Oem Volkswagen Parts Fuel Pump Relay</title><content type="html">Pingback from  Relay 1 Oem Full, 2 Discount Oem Volkswagen Parts Fuel Pump Relay</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>79893</id><published>2010-05-22T02:45:53.0-05:00</published><updated>2010-05-22T02:45:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Arrowcreek Reno Homes For Sale, College Park Reno</title><content type="html">Pingback from  Arrowcreek Reno Homes For Sale, College Park Reno</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>79975</id><published>2010-05-22T03:27:12.0-05:00</published><updated>2010-05-22T03:27:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Honda Crx Classic, Honda Crx Classic</title><content type="html">Pingback from  Honda Crx Classic, Honda Crx Classic</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>80077</id><published>2010-05-22T04:20:22.0-05:00</published><updated>2010-05-22T04:20:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 420 Sel Mpg Mercedes Benz 420sel, Buy Fuel Pump 420sel 560sec 560sl</title><content type="html">Pingback from  1989 420 Sel Mpg Mercedes Benz 420sel, Buy Fuel Pump 420sel 560sec 560sl</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>80219</id><published>2010-05-22T05:42:58.0-05:00</published><updated>2010-05-22T05:42:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ls400 Aftermarket Auto Ls430 Lexus Sc300, Gs 500 Parts Lexus Sc300</title><content type="html">Pingback from  Ls400 Aftermarket Auto Ls430 Lexus Sc300, Gs 500 Parts Lexus Sc300</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81123</id><published>2010-05-22T13:29:51.0-05:00</published><updated>2010-05-22T13:29:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">735il Repair 1991 Bmw, 735i Radiator Compare Prices Bmw 7 Series</title><content type="html">Pingback from  735il Repair 1991 Bmw, 735i Radiator Compare Prices Bmw 7 Series</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81316</id><published>2010-05-22T15:02:56.0-05:00</published><updated>2010-05-22T15:02:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Nissan Infiniti Fx35 2008 Luxury, Used Infiniti Fx35 Tulsa</title><content type="html">Pingback from  Nissan Infiniti Fx35 2008 Luxury, Used Infiniti Fx35 Tulsa</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81424</id><published>2010-05-22T15:59:08.0-05:00</published><updated>2010-05-22T15:59:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Cars Gmc V2500 Suburban, Repair Vent Visor Gmc V2500 Suburban</title><content type="html">Pingback from  Used Cars Gmc V2500 Suburban, Repair Vent Visor Gmc V2500 Suburban</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81468</id><published>2010-05-22T16:19:38.0-05:00</published><updated>2010-05-22T16:19:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Es330 Substitute Forums, Lexus Es330 Parts Headlight Cover</title><content type="html">Pingback from  Es330 Substitute Forums, Lexus Es330 Parts Headlight Cover</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81497</id><published>2010-05-22T16:34:50.0-05:00</published><updated>2010-05-22T16:34:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Heisenberg Group Quantum Mechanics, Our Time Quantum</title><content type="html">Pingback from  Heisenberg Group Quantum Mechanics, Our Time Quantum</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81511</id><published>2010-05-22T16:42:47.0-05:00</published><updated>2010-05-22T16:42:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Strawberry Fair Restaurant, Home Restaurant San Francisco</title><content type="html">Pingback from  Strawberry Fair Restaurant, Home Restaurant San Francisco</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81557</id><published>2010-05-22T17:07:13.0-05:00</published><updated>2010-05-22T17:07:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy 450se Babies, 450sel Zone Sale Mercedes</title><content type="html">Pingback from  Buy 450se Babies, 450sel Zone Sale Mercedes</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81592</id><published>2010-05-22T17:24:09.0-05:00</published><updated>2010-05-22T17:24:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Viper Radiator Performance Supercharger Kits, Dodge Used Viper Srt 10 Coupe</title><content type="html">Pingback from  Viper Radiator Performance Supercharger Kits, Dodge Used Viper Srt 10 Coupe</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81600</id><published>2010-05-22T17:29:18.0-05:00</published><updated>2010-05-22T17:29:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Eagle Medallion Curved Radiator Hose, Medallion Parts Map</title><content type="html">Pingback from  Eagle Medallion Curved Radiator Hose, Medallion Parts Map</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81639</id><published>2010-05-22T17:46:48.0-05:00</published><updated>2010-05-22T17:46:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Relay 1 Discount Working, Relay 2 Used Side Marker</title><content type="html">Pingback from  Relay 1 Discount Working, Relay 2 Used Side Marker</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81711</id><published>2010-05-22T18:20:45.0-05:00</published><updated>2010-05-22T18:20:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Infiniti Fx35 Sale Dubai Leather Seats, Fx35 Coupon Estimate Payments Infiniti Ex35</title><content type="html">Pingback from  Infiniti Fx35 Sale Dubai Leather Seats, Fx35 Coupon Estimate Payments Infiniti Ex35</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81732</id><published>2010-05-22T18:30:22.0-05:00</published><updated>2010-05-22T18:30:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Adventures Sinbad Episode, Yamaha Royal Star Venture Road Test</title><content type="html">Pingback from  Adventures Sinbad Episode, Yamaha Royal Star Venture Road Test</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81830</id><published>2010-05-22T19:19:52.0-05:00</published><updated>2010-05-22T19:19:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">733i Sale 6 Cylinder Bmw 7 Series, 1984 Bmw 733i Review</title><content type="html">Pingback from  733i Sale 6 Cylinder Bmw 7 Series, 1984 Bmw 733i Review</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>81834</id><published>2010-05-22T19:21:14.0-05:00</published><updated>2010-05-22T19:21:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Order 280e Exhaust Manifold, M280e Bulb 12v</title><content type="html">Pingback from  Order 280e Exhaust Manifold, M280e Bulb 12v</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82050</id><published>2010-05-22T21:07:28.0-05:00</published><updated>2010-05-22T21:07:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Fiero Sale Pontiac Lemans, Fiero Sale Pontiac Lemans</title><content type="html">Pingback from  Fiero Sale Pontiac Lemans, Fiero Sale Pontiac Lemans</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82225</id><published>2010-05-22T22:36:16.0-05:00</published><updated>2010-05-22T22:36:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 Tracer Sale Mercury Sable, 223 Tracer Rounds For Sale - 431.eumreborn.com</title><content type="html">Pingback from  1999 Tracer Sale Mercury Sable, 223 Tracer Rounds For Sale - 431.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82273</id><published>2010-05-22T23:00:54.0-05:00</published><updated>2010-05-22T23:00:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used 1989 Ford Aerostar Motor Trend, 1989 Ford Aerostar Specs Pricing - 121.defutbolazo.com</title><content type="html">Pingback from  Used 1989 Ford Aerostar Motor Trend, 1989 Ford Aerostar Specs Pricing - 121.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82282</id><published>2010-05-22T23:05:11.0-05:00</published><updated>2010-05-22T23:05:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dmx 1966 Chevy Nova, 1966 Chevy Ii Nova Price - 468.zapstreaming.com</title><content type="html">Pingback from  Dmx 1966 Chevy Nova, 1966 Chevy Ii Nova Price - 468.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82286</id><published>2010-05-22T23:07:14.0-05:00</published><updated>2010-05-22T23:07:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Horizon Coolant Closed, Horizon Products Chicken Coop - 175.defutbolazo.com</title><content type="html">Pingback from  Horizon Coolant Closed, Horizon Products Chicken Coop - 175.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82319</id><published>2010-05-22T23:23:05.0-05:00</published><updated>2010-05-22T23:23:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevy S10 Manual Pick, Chevrolet S10 Blazer Engine Exhaust Manifold - 252.an74.com</title><content type="html">Pingback from  Chevy S10 Manual Pick, Chevrolet S10 Blazer Engine Exhaust Manifold - 252.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82330</id><published>2010-05-22T23:27:52.0-05:00</published><updated>2010-05-22T23:27:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1976 Cadillac Seville Parts Replacement Headlight Assembly, 1997 Seville Coolant Reservoir Cadillac Catera - 255.dlmreza.net</title><content type="html">Pingback from  1976 Cadillac Seville Parts Replacement Headlight Assembly, 1997 Seville Coolant Reservoir Cadillac Catera - 255.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82336</id><published>2010-05-22T23:31:04.0-05:00</published><updated>2010-05-22T23:31:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Stylus Serversocket, Epson Stylus Office Bx300f Compatible Ink Cartridges - 14.tgrconversions.com</title><content type="html">Pingback from  Stylus Serversocket, Epson Stylus Office Bx300f Compatible Ink Cartridges - 14.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82574</id><published>2010-05-23T01:30:39.0-05:00</published><updated>2010-05-23T01:30:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sustained Silent Reading Part Five Finger Test, Two Million Five Hundred - 75.akemet.com</title><content type="html">Pingback from  Sustained Silent Reading Part Five Finger Test, Two Million Five Hundred - 75.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>82785</id><published>2010-05-23T03:03:41.0-05:00</published><updated>2010-05-23T03:03:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pb300 Substitute Cd, Pb300 Piano Tabs Carvin - 272.luna-atra.net</title><content type="html">Pingback from  Pb300 Substitute Cd, Pb300 Piano Tabs Carvin - 272.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83084</id><published>2010-05-23T05:30:09.0-05:00</published><updated>2010-05-23T05:30:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ml63 Amg Luxury Car Rental, Ml63 Amg Bumper Used - 433.jeepsunlimted.com</title><content type="html">Pingback from  Ml63 Amg Luxury Car Rental, Ml63 Amg Bumper Used - 433.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83187</id><published>2010-05-23T06:15:45.0-05:00</published><updated>2010-05-23T06:15:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dasher Led Board Display, Volkswagen Dasher Pt Catalytic Converter - 391.binggreen.com</title><content type="html">Pingback from  Dasher Led Board Display, Volkswagen Dasher Pt Catalytic Converter - 391.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83320</id><published>2010-05-23T07:14:53.0-05:00</published><updated>2010-05-23T07:14:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cirrus Aftermarket Auto Parts Pt Cruiser 300m, 1999 Chrysler 300m Auto Parts - 47.defutbolazo.com</title><content type="html">Pingback from  Cirrus Aftermarket Auto Parts Pt Cruiser 300m, 1999 Chrysler 300m Auto Parts - 47.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83398</id><published>2010-05-23T07:47:56.0-05:00</published><updated>2010-05-23T07:47:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford Fairmont Engine Swap, Auto Parts 1982 Ford Fairmont - 222.cmanager.org</title><content type="html">Pingback from  Ford Fairmont Engine Swap, Auto Parts 1982 Ford Fairmont - 222.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83455</id><published>2010-05-23T12:18:25.0-05:00</published><updated>2010-05-23T12:18:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1991 Honda Prelude Si 4ws For Sale, Honda Prelude Kits - 90.binggreen.com</title><content type="html">Pingback from  1991 Honda Prelude Si 4ws For Sale, Honda Prelude Kits - 90.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83827</id><published>2010-05-24T05:52:31.0-05:00</published><updated>2010-05-24T05:52:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lebaron Old, Chrysler Lebaron Radiator Aftermarket - 432.tgrconversions.com</title><content type="html">Pingback from  Lebaron Old, Chrysler Lebaron Radiator Aftermarket - 432.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>83923</id><published>2010-05-24T06:36:43.0-05:00</published><updated>2010-05-24T06:36:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Honda C240 Parts Diesel Engine, Mercedes Benz C240 Model C32 Amg - 177.dlmreza.net</title><content type="html">Pingback from  Honda C240 Parts Diesel Engine, Mercedes Benz C240 Model C32 Amg - 177.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84338</id><published>2010-05-24T09:49:35.0-05:00</published><updated>2010-05-24T09:49:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cb3000 Video Taillight Cb 6000, Hp Pavillion Dv6000 Review - 296.myipgirl.com</title><content type="html">Pingback from  Cb3000 Video Taillight Cb 6000, Hp Pavillion Dv6000 Review - 296.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84403</id><published>2010-05-24T10:19:18.0-05:00</published><updated>2010-05-24T10:19:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1991 Dodge Caravan Mpg, Caravan Cake - 117.mfbattle.com</title><content type="html">Pingback from  1991 Dodge Caravan Mpg, Caravan Cake - 117.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84614</id><published>2010-05-24T11:59:03.0-05:00</published><updated>2010-05-24T11:59:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford E 450 Econoline Super Duty Stripped Parts Galaxie 500 Bronco Ii, Celebrity Fakes Club - 247.luna-atra.net</title><content type="html">Pingback from  Ford E 450 Econoline Super Duty Stripped Parts Galaxie 500 Bronco Ii, Celebrity Fakes Club - 247.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84677</id><published>2010-05-24T12:29:21.0-05:00</published><updated>2010-05-24T12:29:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">F10 Free Ga 8i945gzme Rh Driver Gigabyte, F10 2nd Hand Truck Parts Construction Machinery - 437.zapstreaming.com</title><content type="html">Pingback from  F10 Free Ga 8i945gzme Rh Driver Gigabyte, F10 2nd Hand Truck Parts Construction Machinery - 437.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84738</id><published>2010-05-24T13:01:39.0-05:00</published><updated>2010-05-24T13:01:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Parts Saturn Relay 2 Installation Mirror, Relay 2 Buy Search - 263.codebluehacks.org</title><content type="html">Pingback from  Parts Saturn Relay 2 Installation Mirror, Relay 2 Buy Search - 263.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84769</id><published>2010-05-24T13:19:27.0-05:00</published><updated>2010-05-24T13:19:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Volare Bumper Breckenridge, Radiator Valiant Plymouth Volare - 240.zapstreaming.com</title><content type="html">Pingback from  Volare Bumper Breckenridge, Radiator Valiant Plymouth Volare - 240.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84902</id><published>2010-05-24T14:22:40.0-05:00</published><updated>2010-05-24T14:22:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Integra Replacement Bilayer Bed Wound Dressing, 2000 Acura Integra Specs - 494.dlmreza.net</title><content type="html">Pingback from  Integra Replacement Bilayer Bed Wound Dressing, 2000 Acura Integra Specs - 494.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>84903</id><published>2010-05-24T14:23:00.0-05:00</published><updated>2010-05-24T14:23:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sstsim Concorde Sonic Boom, Used Dealers Cadillac Sts V - 331.binggreen.com</title><content type="html">Pingback from  Sstsim Concorde Sonic Boom, Used Dealers Cadillac Sts V - 331.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>85329</id><published>2010-05-24T18:04:55.0-05:00</published><updated>2010-05-24T18:04:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">280s 1984 Mercedes Benz 240d, 280sel Sale 6 Cylinder Liter Mercedes Benz S Class - 499.cmanager.org</title><content type="html">Pingback from  280s 1984 Mercedes Benz 240d, 280sel Sale 6 Cylinder Liter Mercedes Benz S Class - 499.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>85552</id><published>2010-05-24T22:36:17.0-05:00</published><updated>2010-05-24T22:36:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">633csi Sedan 1983 Bmw, 633csi Fog Light Auto Parts Sway Bar Bushing - 363.ja3ra.com</title><content type="html">Pingback from  633csi Sedan 1983 Bmw, 633csi Fog Light Auto Parts Sway Bar Bushing - 363.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>85999</id><published>2010-05-25T02:10:14.0-05:00</published><updated>2010-05-25T02:10:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Airbags 1998 Chevrolet C3500, C35 C3500 1500 Headlight Tail Lights - 192.rkwrh.com</title><content type="html">Pingback from  Airbags 1998 Chevrolet C3500, C35 C3500 1500 Headlight Tail Lights - 192.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>86437</id><published>2010-05-25T10:44:40.0-05:00</published><updated>2010-05-25T10:44:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Review Weber Genesis S320 Food, 1997 Mercedes S320 Specs Benz S600 - 182.jeepsunlimted.com</title><content type="html">Pingback from  Review Weber Genesis S320 Food, 1997 Mercedes S320 Specs Benz S600 - 182.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>86790</id><published>2010-05-25T13:39:21.0-05:00</published><updated>2010-05-25T13:39:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lecteur Sony Bdp S350, Is350 Chords - 52.zapstreaming.com</title><content type="html">Pingback from  Lecteur Sony Bdp S350, Is350 Chords - 52.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>86809</id><published>2010-05-25T13:47:01.0-05:00</published><updated>2010-05-25T13:47:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Mazda Cx9 Edmunds, Second Hand Mazda Cx9 - 456.animejin.com</title><content type="html">Pingback from  Mazda Cx9 Edmunds, Second Hand Mazda Cx9 - 456.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>86837</id><published>2010-05-25T14:00:36.0-05:00</published><updated>2010-05-25T14:00:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2001 Mazda Millenia Supercharger Shift Knob, Vega Supplement Superfoods - 383.animejin.com</title><content type="html">Pingback from  2001 Mazda Millenia Supercharger Shift Knob, Vega Supplement Superfoods - 383.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>86953</id><published>2010-05-25T14:57:24.0-05:00</published><updated>2010-05-25T14:57:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Radiator 1987 Pontiac Fiero, Fiero Headlight Relay Motors Work Wiring Harness - 244.animejin.com</title><content type="html">Pingback from  Radiator 1987 Pontiac Fiero, Fiero Headlight Relay Motors Work Wiring Harness - 244.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87015</id><published>2010-05-25T15:29:40.0-05:00</published><updated>2010-05-25T15:29:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">740 Bumper 2001 Volvo V70, Aftermarket S90 C70 Volvo V70 - 275.rkwrh.com</title><content type="html">Pingback from  740 Bumper 2001 Volvo V70, Aftermarket S90 C70 Volvo V70 - 275.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87224</id><published>2010-05-25T17:21:20.0-05:00</published><updated>2010-05-25T17:21:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sierra Vista Ptt, Corgi Vista Cruiser - 263.defutbolazo.com</title><content type="html">Pingback from  Sierra Vista Ptt, Corgi Vista Cruiser - 263.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87392</id><published>2010-05-25T18:47:28.0-05:00</published><updated>2010-05-25T18:47:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">C3500 Distributor Discount, C3500 Tv Rf350 - 376.rkwrh.com</title><content type="html">Pingback from  C3500 Distributor Discount, C3500 Tv Rf350 - 376.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87564</id><published>2010-05-25T20:17:21.0-05:00</published><updated>2010-05-25T20:17:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gnc P35 Ip3500 Van Used, Discount Gmc P35 P3500 Van 1 Ton Yukon Xl - 307.ja3ra.com</title><content type="html">Pingback from  Gnc P35 Ip3500 Van Used, Discount Gmc P35 P3500 Van 1 Ton Yukon Xl - 307.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87572</id><published>2010-05-25T20:21:42.0-05:00</published><updated>2010-05-25T20:21:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cargo Van Canada Ford Econoline, E350 Part 2010 Mercedes Benz E Class E63 Amg - 275.rkwrh.com</title><content type="html">Pingback from  Cargo Van Canada Ford Econoline, E350 Part 2010 Mercedes Benz E Class E63 Amg - 275.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87648</id><published>2010-05-25T20:57:26.0-05:00</published><updated>2010-05-25T20:57:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2004 Ford Super Duty F 250 Xxl, Super 8 Phone Numbers Pets - 451.zapstreaming.com</title><content type="html">Pingback from  2004 Ford Super Duty F 250 Xxl, Super 8 Phone Numbers Pets - 451.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87914</id><published>2010-05-27T04:38:46.0-05:00</published><updated>2010-05-27T04:38:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 2008 @ Mizer Delias, Ford Mizer Zone - 384.tvshowzone.com</title><content type="html">Pingback from  1999 - 2008 @ Mizer Delias, Ford Mizer Zone - 384.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>87932</id><published>2010-05-27T04:49:37.0-05:00</published><updated>2010-05-27T04:49:37.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1999 @ E500 Bumper Replacement, Et Lae500 Bulb Replacement Panasonic Etlae500 - 440.jordanbrandallamerican.com</title><content type="html">Pingback from  2000 - 1999 @ E500 Bumper Replacement, Et Lae500 Bulb Replacement Panasonic Etlae500 - 440.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>88099</id><published>2010-05-27T07:01:30.0-05:00</published><updated>2010-05-27T07:01:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Exhaust Lw200 Tail Lights, Lw200 Parts 2002 Saturn Capa Certified 4cyl L - 387.cmanager.org</title><content type="html">Pingback from  1989 - 2000 @ Exhaust Lw200 Tail Lights, Lw200 Parts 2002 Saturn Capa Certified 4cyl L - 387.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>88154</id><published>2010-05-27T07:37:06.0-05:00</published><updated>2010-05-27T07:37:06.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1993 - 1989 @ Tamari Fifth Avenue Park Slope, Entegra Sale Fifth Wheel Toy Hauler - 4.myipgirl.com</title><content type="html">Pingback from  1993 - 1989 @ Tamari Fifth Avenue Park Slope, Entegra Sale Fifth Wheel Toy Hauler - 4.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>88186</id><published>2010-05-27T07:54:45.0-05:00</published><updated>2010-05-27T07:54:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1993 - 1989 @ Voyager Oil, Earth Star Voyager Part 1 Dvdr Iso External Hdd - 488.renters.ws</title><content type="html">Pingback from  1993 - 1989 @ Voyager Oil, Earth Star Voyager Part 1 Dvdr Iso External Hdd - 488.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>88523</id><published>2010-05-30T19:47:10.0-05:00</published><updated>2010-05-30T19:47:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 1988 @ 1998 Lexus Sc400 Engine Rack And Pinion, Toyota Land Cruiser 2009 2010 Lexus Gx - 153.defutbolazo.com</title><content type="html">Pingback from  1989 - 1988 @ 1998 Lexus Sc400 Engine Rack And Pinion, Toyota Land Cruiser 2009 2010 Lexus Gx - 153.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>88719</id><published>2010-05-30T23:49:43.0-05:00</published><updated>2010-05-30T23:49:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1981 - 2003 @ 530i Exhaust System 1976 Bmw, 530i Repair Contract - 284.defutbolazo.com</title><content type="html">Pingback from  1981 - 2003 @ 530i Exhaust System 1976 Bmw, 530i Repair Contract - 284.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>89018</id><published>2010-05-31T12:21:47.0-05:00</published><updated>2010-05-31T12:21:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 1998 @ Sx4 Headlight Suzuki Parts Air Intake, Suzuki Sx4 Automatic - 287.unlockiphone30.net</title><content type="html">Pingback from  1999 - 1998 @ Sx4 Headlight Suzuki Parts Air Intake, Suzuki Sx4 Automatic - 287.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13855"></thr:in-reply-to></entry><entry><id>13907</id><published>2005-08-07T20:34:00.0-05:00</published><updated>2005-08-07T20:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Your Mileage May Vary</title><content type="html">&lt;div&gt;I am pleased by the quality of comments and responses to my most recent admittedly rather, uh, blunt post. Sam Marcuccio (and others) &lt;a href="http://blogs.sarkhouston.com/smarcuccio/archive/2005/08/05/2859.aspx"&gt;wonder &lt;/a&gt;why I'm so harsh on Indigo (oops, WCF). I'll point Sam and others to this &lt;a href="http://galactic-patrol.blogspot.com/2005/02/serviceoperation-wheres-message.html"&gt;post &lt;/a&gt;from Bruce Williams. As you can see from my comments back then, I've now actually mellowed out a bit about Indigo. I continue to believe that the underlying technology in WCF is a brilliant piece of work that's crippled by the fact that the only really accessible interface to it is the same old distributed object model that we've come to know and hate. If the WCF team really understood messaging and weren't trapped in the old distributed object world, it could be a revolutionary technology. As it is, Sam Gentile is correct in asserting that they're largely just &lt;a href="http://samgentile.com/blog/archive/2005/08/04/31892.aspx"&gt;reinventing DCE RPC&lt;/a&gt;.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Udi Dahan's &lt;a href="http://udidahan.weblogs.us/archives/030620.html"&gt;post&lt;/a&gt; is right on point. My desire to follow the layout of Rich's article obscured my main point about messaging. Udi is exactly right that key to building a successful service is implementing an asynchronous messaging mechanism. If you are sufficiently clever, you can do that with just about any protocol, but for the typical developer or architect, by far the easiest is System.Messaging. If you've ever done any MSMQ programming, you'll see right away how to map Udi's proposed messaging design to the System.Messaging API. If you've never done any MSMQ programming, take a look at this &lt;a href="http://blogs.msdn.com/solutions/archive/2005/08/06/448468.aspx"&gt;post &lt;/a&gt;from the Solutions Monkey (I love that name for a blog). &lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Whether or not you've done any MSMQ programming, you definitely need to go read David Ing's &lt;a href="http://www.from9till2.com/PermaLink.aspx?guid=0f47a7aa-66d8-4229-989f-afbe3ae7d8bf"&gt;latest&lt;/a&gt;. And I'm not just saying that because he left a nice comment here.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>2</thr:total></entry><entry><id>13923</id><published>2005-08-08T20:03:00.0-05:00</published><updated>2005-08-08T20:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Your Mileage May Vary</title><content type="html">OK, I starting to see your point, John.  But I don't think I have my brain completely wrapped around it. (and I don't think you do either).  
&lt;br /&gt;
&lt;br /&gt;After reading your thread with Bruce, I think he was having the same problem as I.  If the attributed interface model doesn't work for you, what does?  My first assumption was that you were after an interface to the message (in my head, the WDSL).  But after seeing your example, I'm still wondering why the attributed interface model doesn't work.
&lt;br /&gt;
&lt;br /&gt;Your example:
&lt;br /&gt;
&lt;br /&gt;message Address
&lt;br /&gt;{
&lt;br /&gt;string Company;
&lt;br /&gt;string RecipientName;
&lt;br /&gt;string AddressLine1;
&lt;br /&gt;
&lt;br /&gt;... the rest of the message members ...
&lt;br /&gt;
&lt;br /&gt;}
&lt;br /&gt;
&lt;br /&gt;How far away is this from a DataContract? (Essentially, a macro could do the conversion)
&lt;br /&gt;
&lt;br /&gt;Don't get me wrong, I'm completely on board with a syntax for the message, I just don't see this as being such a huge deviation from the perfect world scenario.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13907"></thr:in-reply-to></entry><entry><id>14071</id><published>2005-08-12T10:00:00.0-05:00</published><updated>2005-08-12T10:00:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Your Mileage May Vary</title><content type="html">John, I'm confused about a different set of your facts. 
&lt;br /&gt;
&lt;br /&gt;Indigo supports asynchronous messaging. You seem to believe it doesn't. 
&lt;br /&gt;
&lt;br /&gt;Indigo supports translating public contracts to application contracts. You seem to believe it doesn't. 
&lt;br /&gt;
&lt;br /&gt;Indigo supports XML programming as well as programming against CLR types. You seem to believe it doesn't.
&lt;br /&gt;
&lt;br /&gt;What part of what you want doesn't Indigo do?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="13907"></thr:in-reply-to></entry><entry><id>14077</id><published>2005-08-12T15:54:00.0-05:00</published><updated>2005-08-12T15:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Mort Gets the Message</title><content type="html">&lt;div&gt;&lt;em&gt;Wherein our plucky narrator reveals a shocking secret and makes a plea for understanding.&lt;/em&gt;&lt;/div&gt;
&lt;div&gt;&lt;em&gt;&lt;/em&gt; &lt;/div&gt;
&lt;div&gt;I am &lt;a href="http://www.google.com/search?q=mort+elvis+einstein"&gt;Mort&lt;/a&gt; and I write distributed applications. I have decided that this simple fact is the primary factor in the difficulty I have communicating my concerns about WCF (nee Indigo). I've had several occasions to interact (in person and via blogs) with various members of Team Indigo. They are some of the smartest, most professional, and dedicated folks I've ever had the pleasure of talking to and I've always felt there is a huge impedance mismatch in our conversations. Reading Steve Swartz's &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/08/07/13907.aspx#14071"&gt;comments &lt;/a&gt;on my last two posts made me realize it is my fundamental Mortness that is the problem.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;In case anyone doubts my Mort credentials, I will re-iterate them here. I prefer Visual Basic to C#. I don't have CS degree (English and History instead). I was introduced to programming through that gateway drug of my generation, Lotus 1-2-3 macros. I eventually graduated from Paradox to Visual Basic via Microsoft Access.  I am an opportunistic programmer and I expect my tools to let me focus on delivering the business functionality my employer pays me for, not write a bunch of infrastructure code. I got to be an architect not because I'm a great programmer (I'm not, I'm Mort), but because I can visualize how to solve business problems with computer technology.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;With that in mind, I'd like to respond to Steve's comments. I know that Indigo supports asynchronous messaging. I just don't like the way Indigo supports asynchronous messaging. Indigo, in an attempt to make asynchronicity easy to use, hides it from Morts like me. This is the exact same mistake that DCOM made with location transparency. It will have the exact same consequences that DCOM's location transparency had, distributed applications that won't scale. This is the most hideous trick that Microsoft can play on Morts. We'll make designs that look just like the Microsoft examples, work great in the development environment and blow up in production. Thanks a lot. And &lt;a href="http://galactic-patrol.blogspot.com/2005/03/whats-right-way-to-dispose-channel.html"&gt;redefining &lt;/a&gt;what Close() and Dispose() mean doesn't help either.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I know that Indigo supports translating public contracts to application contracts. I just want direct control over the process, rather than being stuck with the output of your tool. Elvis may think that mapping the external message to the internal model is stupid grunt work that can be relegated to a command-line utility, but Mort knows that it is a crucial piece of business logic that needs it's own separate place in the world so that it can change independently of the rest of the application.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I know that Indigo supports XML programming (&lt;a href="http://pluralsight.com/blogs/tewald/"&gt;Tim&lt;/a&gt; and all the other Einsteins will be &lt;a href="http://pluralsight.com/blogs/tewald/archive/2005/08/08/13920.aspx"&gt;happy&lt;/a&gt;). I want to do XML programming about as much as I want to do IL programming (which is not at all, in case you're not sure). I'm glad it's there under the covers, but don't make me look at it.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;It's not so much about what I want Indigo to do as it is about what I don't want Indigo to do. I don't want it to interpose an RPC model between the underlying asynchronous message-based truth of Indigo and overarching asynchronous message-based truth of the business applications I write every day. I don't want to have to dip down into an untyped bag of XML goo just to get a message instead of an object. I want Indigo to allow me to say,  "Send a message containing this purchase order to that service over there and notify me when I get the response back with P.O. number in it" without making it look like a method call. If I want the client to block while waiting for the P.O. number, that's my choice, but it's always an asynchronous operation across the network and it should always look like an asynchronous operation across the network.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;The main thrust of this post is that Morts get message-oriented development. Messages (documents and action requests) are fundamental to business programming. We don't need the OO façade that Indigo pushes on us, but we need more than SOAP. We need an easy way to send and receive structured (but not necessarily typed) messages. For all the talk of the Indigo big tent philosophy, I feel like Mort is left standing in the rain.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>11</thr:total></entry><entry><id>14082</id><published>2005-08-12T17:21:00.0-05:00</published><updated>2005-08-12T17:21:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort Gets the Message</title><content type="html">Aach!! I knew it!  He's a witch.  Burn Him!!!
&lt;br /&gt;
&lt;br /&gt;Well said John.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14089</id><published>2005-08-12T19:15:00.0-05:00</published><updated>2005-08-12T19:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Indigo and Morts and hiding the goo behind OO like code</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14090</id><published>2005-08-12T18:23:00.0-05:00</published><updated>2005-08-12T18:23:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort Gets the Message</title><content type="html">Finally...someone says it with eloquence belying his Mortness.
&lt;br /&gt;I truly can't believe that all the wonderful people on the Indigo team can fundamentally miss the mark as they seem intent on doing.
&lt;br /&gt;Maybe more and more of these posts will encourage the WCF team to take a long inward look...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14094</id><published>2005-08-13T10:22:00.0-05:00</published><updated>2005-08-13T10:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">The Adventures of Mort: Episode 2</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14097</id><published>2005-08-13T14:13:00.0-05:00</published><updated>2005-08-13T14:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Structured data and nominal typing</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14099</id><published>2005-08-13T18:04:00.0-05:00</published><updated>2005-08-13T18:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort Gets the Message</title><content type="html">I'm still completely confused by the specifics of your complaints.
&lt;br /&gt;
&lt;br /&gt;In Indigo, Mort writes VB or C# methods that process documents. Mort implements those methods on classes because that's how you implement code in the CLR. But this isn't "object-oriented". Mort does not get an instance of a service, Mort cannot marshal references to service instances, Mort does not have an instance of the service on the client, etc. 
&lt;br /&gt;
&lt;br /&gt;Also unlike "oo", Mort can design an Indigo contract that asynchronously processes an incoming purchase order document and returns an asynchronous status message after processing is complete. The client views this as a fire-and-forget asynchronous send and then a document passed later to an event-handler Mort provides for the purpose.
&lt;br /&gt;
&lt;br /&gt;If a service is implemented synchronously, Mort can still make an asynchronous call to the service and then process the response message when it returns, using the CLR async programming model.
&lt;br /&gt;
&lt;br /&gt;What do you mean, in particular, when you say you don't want your document sends to look like a method call? How do you do anything in the CLR without calling a method? Do you want all the method calls to be "Send(document)"? Do you dislike "ProcessPurchaseOrder(document)"? 
&lt;br /&gt;
&lt;br /&gt;As compared to Biztalk, Indigo lets you process documents with VB or C# code intead of BPEL: is that what you're calling "an OO facade"? I imagine that in the long run, you'll be able to run orchestrations directly in the CLR and trigger CLR code (Indigo service implementations?) in Biztalk. I can see this as a natural consequence of the creation of a "Connected Systems Group" out of the Biztalk and Indigo teams.
&lt;br /&gt;
&lt;br /&gt;Do you dislike the event-handler-like way you process incoming messages on the "client" side?
&lt;br /&gt;
&lt;br /&gt;Indigo has not made many tools public, yet, so I can't figure out what you mean by "being stuck with the output of your tool". Mort has three choices if they want to do translations between public and application contracts. They can put Biztalk in front of an Indigo service; they can use the standard tools to design translations and then insert them into the Indigo pipeline; or they can build public services that use VB or C# to translate documents into the application contract. None of these options is more or less Mort-ish; each has their place.
&lt;br /&gt;
&lt;br /&gt;Are you unhappy with Indigo because it is possible to make request-reply calls? From our point of view, there's a time and place for request-response (the Amazon shopping cart, the eBay bid processor, the mail program, the ATM processing system, airline reservation systems, helper-classes in middle tier scenarios, etc). We worked hard to replace MSMQ, ASMX, Remoting, and ES with a single programming model: we want to get away from making people decide which product they want to use, letting them focus instead on deciding which pattern they want to use. We believe that n-tier, queue, and pub-sub are all optimal patterns in their place: we have tried to provide support for each.
&lt;br /&gt;
&lt;br /&gt;As you probably tell, I believe I'm still missing your point. I can tell you're unhappy, but other than rhetorical flourishes (which you're good at ;), I can't make any specific sense of your complaints when held up to the reality of Indigo. </content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14102</id><published>2005-08-14T04:39:00.0-05:00</published><updated>2005-08-14T04:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort Gets the Message</title><content type="html">Steve,
&lt;br /&gt;
&lt;br /&gt;Have you considered everything you wrote?
&lt;br /&gt;
&lt;br /&gt;"Also unlike "oo", Mort can design an Indigo contract that asynchronously processes an incoming purchase order document and returns an asynchronous status message after processing is complete. The client views this as a fire-and-forget asynchronous send and then a document passed later to an event-handler Mort provides for the purpose."
&lt;br /&gt;
&lt;br /&gt;Do you think Morts can actually comprehand and use that?
&lt;br /&gt;
&lt;br /&gt;I've seen a lot of MS technologies being abused over time (specifically MSMQ).
&lt;br /&gt;
&lt;br /&gt;The fact is that Indigo with its "do everything through us approach" will eventually limit us.
&lt;br /&gt;Morts won't be able to do things quickly and nicely because it DOES take some knowledge to understand and do what needs to be done correctly.
&lt;br /&gt;
&lt;br /&gt;You can eat the pie and keep it whole. Generic stuff are harder to eat for most people. Just look at a lot of VB.NET programs. It clearly shows that most people moving from VB6 to VB.NET write what people usually refer to as "VB6.NET" code because .NET is generalized and not specific enough like most of the VB6 code they used to write. Becase they CAN create an ADO object instead of using ADO.NET they use it in NEW code.
&lt;br /&gt;
&lt;br /&gt;And don't let me start about serialization. ByRef, ByValue whatever. Its NOT that simple.
&lt;br /&gt;Heck, its not even that simple if you chose to implement ISerializable and you serialize a graph...
&lt;br /&gt;
&lt;br /&gt;On another note, I personally like the fact that I can customize Indigo as much as I can but that's becasue this is the level I usually work with (implementing the underlying stuff).
&lt;br /&gt;Its an infrastructure that cannot compete the Mortness of Access and the likes. That's a fact.
&lt;br /&gt;
&lt;br /&gt;Perhaps there is room for a wrapping API that will make that even cleaner and more understandable for most people.
&lt;br /&gt;
&lt;br /&gt;Something that cannot be interpeted into other meanings.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14178</id><published>2005-08-14T10:14:00.0-05:00</published><updated>2005-08-14T10:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort Gets the Message</title><content type="html">Yes, I considered everything I wrote here. ;) One difficult thing about responding to this post, for me, is that its raising a large number of points simultaneously. Not all of them are the arguments of a Mort. Im trying to respond relatively broadly, and so I dont always speak to the supported Mort-center of the argument. 
&lt;br /&gt;
&lt;br /&gt;I believe programmers like the one that John is styling himself to be will not need to understand the CLR asynchronous programming model. They will simply use the center of Indigo. They will build one-way contracts; they will send around documents as message; they will have a simple experience. We try to design the product so that Mort finds best-practice by using the most immediately accessible parts of the system, and so Elvis and Einstein can do what they want.
&lt;br /&gt;
&lt;br /&gt;For each message-Mort like John, there is also a method-Mort who balks at the degree of decoupled message-oriented ideas baked into Indigo. I want to throw exceptions to my caller transparently! I want to share types! I want service instance references! Indigo needs to attend to those scenarios, too. We recognize that there is no one true way to build distributed apps (see, for instance, the books by Fowler and Hohpe ;) ). There is no one true Mort.
&lt;br /&gt;
&lt;br /&gt;In the same way that there's a value in a single CLR that supports different languages aimed at different use cases, so I believe theres a value in a single Indigo that supports different messaging patterns aimed at different use cases. If you constrain the platform so that it only does typed messaging, then you need a different platform component oriented around each pattern. Weve been down that path. It doesnt work. In the future, well look to tools to make it as easy for Mort to build services as it is for them to build WinForms today. Thats our strategy: a general-purpose platform for power, and then tools for ease of use. 
&lt;br /&gt;
&lt;br /&gt;One of the reasons why this is a difficult conversation for me is that it deals with generic complaints rather than specific ones. Were still in a place where we can change Indigo to better suit user requirements. It would be useful for me to make the conversation concrete and critique a simple piece of Indigo code processing a single document off of a queue, to see where it doesnt meet the Mort bar as envisioned here.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14191</id><published>2005-08-15T02:02:00.0-05:00</published><updated>2005-08-15T02:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Following comments on the Indigo programming model</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14206</id><published>2005-08-15T06:53:00.0-05:00</published><updated>2005-08-15T06:53:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort Gets the Message</title><content type="html">Hi Steve,
&lt;br /&gt;
&lt;br /&gt;I do agree with you that this is a more "theoretical" disscusion and I do wish I had additional things to add to the more practical things (I have seen Indigo and I don't have anything specific to add on top of what was already disscussed in various forums).
&lt;br /&gt;
&lt;br /&gt;I think the main practical point John is trying to pass here (and if not, at least I understand it from here) is that there IS a need for tools (like you said) to help Morts.
&lt;br /&gt;
&lt;br /&gt;The main problem with tools is that they make things more complex (even if they are nice little add-ins to the great new extensibility model in VS.NET 2005).
&lt;br /&gt;
&lt;br /&gt;So either these tools will add a seamingless experience that no one will know what is going behind, or they will just make Mort's life more difficult.
&lt;br /&gt;
&lt;br /&gt;I suppose code generating tools will be the weapon of choice and the area in Indigo that needs to be addressed is how easily more than trivial scenarios can be code generated using tools.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>15445</id><published>2005-10-11T18:46:00.0-05:00</published><updated>2005-10-11T18:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">The Architect as super developer</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14077"></thr:in-reply-to></entry><entry><id>14100</id><published>2005-08-14T00:03:00.0-05:00</published><updated>2005-08-14T00:03:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">10 Things I Hate About Indigo</title><content type="html">&lt;div&gt;Steve is still &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/08/12/14077.aspx#14099"&gt;confused&lt;/a&gt;, so I thought I would spell it all out for him.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;ol type="1" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;The examples, especially the accursed Calculator example that's infected MSDN. The worst part is not that it is stupid and inane (right, you're going to go across the network to add two numbers together, Hello, you have a computer right there in front of you). The worst part is the subtext that tells the unwary programmer that using Indigo is just like a local method call. I really thought, based on your comments at PDC 2003 ,that you guys understood that location transparency is bad, but apparently not.&lt;/li&gt;
&lt;li&gt;The client programming model that makes network roundtrips look just like local method calls (result = Calculator.Add(value1, value2). Why don't you have a simple messaging model for the client?&lt;/li&gt;
&lt;li&gt;The service programming model that encourages you to directly expose methods to remote callers rather than responding to messages as events.&lt;/li&gt;
&lt;li&gt;Typed services because they replicate RPC semantics. To quote the &lt;a href="http://msdn.microsoft.com/webservices/indigo/default.aspx?pull=/library/en-us/dnlong/html/progindigoch3.asp#progindig3_topic5"&gt;book&lt;/a&gt;, "working with typed services feels similar to RPC-style distributed object technologies such as .NET Remoting". This where you expect most developers (especially Mort) to work and it is the worst possible place.&lt;/li&gt;
&lt;li&gt;Untyped services which are just slightly less tightly coupled RPC's.&lt;/li&gt;
&lt;li&gt;Message-layer programming which where I'd like to be because down there it's obvious that Indigo is sending the messages for you, but it is so freaking complicated that mere MORTals will get hopelessly lost. Seriously, when we adopt Indigo at my day job, I know I'll have wrap this layer with a simpler, less complicated interface. It will look a lot like System.Messaging but it won't be limited to MSMQ. That's what I hoped Indigo would provide.&lt;/li&gt;
&lt;li&gt;Attribute abuse. I've already harped on this &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/05/10/8182.aspx"&gt;one&lt;/a&gt;, but let me add that by using attributes you're insinuating your code into my domain model in completely inappropriate ways. I want to use Indigo explicitly, not implicitly via attributes.&lt;/li&gt;
&lt;li&gt;Configuration is good for some things, but not others. You guys seem intent on repeating the mistakes of the past. In this case, it reminds me of MTS. We all learned pretty quickly after it was released that allowing someone to change the transactional model of a piece of code after deployment almost always ended in disaster. Likewise, several elements (transports, security, etc.) in Indigo are simply too fundamental to be usefully configurable.&lt;/li&gt;
&lt;li&gt;Svcutil is evil. This is the tool I was referring to in my earlier post. Just like the attribute-driven approach, Svcutil infects my domain model with your code. Svcutil always imposes distributed object/RPC semantic (at least as far as I know)&amp;gt;&lt;/li&gt;
&lt;li&gt;The "One Ring to Rule Them All" philosophy. The whole "unification" strategy looks more and more like you guys just took a whole bunch of unrelated and, in some cases, incompatible technologies and threw into one big bag without any thought as to the underlying architecture.&lt;/li&gt;&lt;/ol&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Let me sum things up like this. I want Indigo to stay out of my domain model. I would like a vastly simplified version of the message-layer programming model promoted as the right way for most developers to use Indigo services. If you took the best parts of System.Messaging and WSE, you would just about have it. I hope that clears things up.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>6</thr:total></entry><entry><id>14179</id><published>2005-08-14T15:04:00.0-05:00</published><updated>2005-08-14T15:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Blog link of the week 32</title><content type="html">Blog link of the week 32</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14100"></thr:in-reply-to></entry><entry><id>14181</id><published>2005-08-14T20:22:00.0-05:00</published><updated>2005-08-14T20:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: 10 Things I Hate About Indigo</title><content type="html">I have to say that I really don't understand all of this negativity surrounding WCF and what it is providing to those of us who are building web services today.  Maybe I'm simply naive to the underlying complexity that "oo semantics" introduces but I am starting to feel as though all of these issues have more to do with underlying design strategies than the technology that is implementing them.
&lt;br /&gt;
&lt;br /&gt;You state above that your domain model is being corrupted by things like svcutil and attribute based programming.  I would assume that this has something to do with the fact that there is too much code being masked from you.  Don't you have the option to not use those attributes in most cases.  Also isn't your domain model still preserved within the components you design and the methods for invoking their interfaces are something outside of that domain model all together?  You also seem to be very concerned about over-configuration and rpc stylings creating tight couplings but aren't there features within WCF like multiple end-point definition and data/message contract versioing that make this platform more agile than anything before it?  Doesn't that actually give us a looser coupling in a way?
&lt;br /&gt;
&lt;br /&gt;So I have read much of the materials available at this time (Pallmann's book Programming Indigo for example) and I have followed all of these blogs between the Microsoft Indigo/Connected Systems Group Team and yourself.  I really only put much credence in one of your points.  The point you make about poor design direction and over-simplification of the examples is without a doubt the biggest gap in my mind to date.
&lt;br /&gt;
&lt;br /&gt;I think there needs to be a major shift within Microsoft to help guide those that intend to use these technologies.  The tenants of service orientation are rarely reinforced in the examples you see today and these "Morts" that you reference in your other blogs are going to spend much of their time abusing these technologies and not showcasing them.  
&lt;br /&gt;
&lt;br /&gt;I personally have mostly positive things to say about WCF/Indigo at this point.  I build first generation web services today and I am literally hand cuffed by versioning issues, security issues, and hideous lack of boundary definition in my service libraries (ok nothing in the WCF release is going to fix the last one).  I do expect WCF/Indigo to make my world as an application architect easier almost immediatley.  By the way I'm not on Microsofts payroll I'm just well read on the subject and I have just about the opposite opinion of yours .... I'm just not convinced otherwise by your recent blog entries.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14100"></thr:in-reply-to></entry><entry><id>14190</id><published>2005-08-15T02:02:00.0-05:00</published><updated>2005-08-15T02:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Following comments on the Indigo programming model</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14100"></thr:in-reply-to></entry><entry><id>14214</id><published>2005-08-15T10:08:00.0-05:00</published><updated>2005-08-15T10:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: 10 Things I Hate About Indigo</title><content type="html">Thanks for taking the time to explain your concerns to me.
&lt;br /&gt;
&lt;br /&gt;1. It sounds like a fair part of your reaction to Indigo is a reaction to the samples and David's book. In Beta1, with one book and a smattering of samples, we can only target a subset of our scenarios. It sounds like our initial efforts didn't speak to you. Hopefully, as more books and samples come out, some of them will be more to your taste, and you will be happier.
&lt;br /&gt;
&lt;br /&gt;2. Indigo does have a simple message programming model for the client at the "upper-level". The client calls a method that sends a message and returns. The message is delivered to a method implemented at the service. If the contract involves return messages, the service can send them back to the client in a similar way.
&lt;br /&gt;
&lt;br /&gt;3. Indigo does have a simple message programming model for the service that lets you respond to messages as events and send messages back to the client which are caught and responded to as events.
&lt;br /&gt;
&lt;br /&gt;4,5. Are you unhappy here because you don't realize that Indigo supports simple messaging (your comments 2) and 3) seem to indicate that)? Are you unhappy because Indigo supports RPC as well as messaging? Are you unhappy because our examples and David's book lead with RPC? We can fix the first problem by exploring the details. We don't view the second issue as a problem at all: there are scenarios for RPC as well as messaging, and we find that people are really attracted to the idea of training their people in a single API that can be used to implement all the common distributed application patterns. We have worked hard to make the differences obvious and localized: if you understand how to process a message under a transaction, or how to do authorization, or how to use our instancing model, those things will work the same regardless of whether you’re doing messaging or RPC. If you’re unhappy with the focus of the first book and the examples, well, as I said, I hope people eventually talk about parts of the system in ways that speak to you better.
&lt;br /&gt;
&lt;br /&gt;6. Again, you realize that you can do message-oriented programming at the upper layer, right?
&lt;br /&gt;
&lt;br /&gt;7. As Tom says, most of the attributes in Indigo are shortcuts for imperative things you can do via APIs. Most people like the convenience of attributes, but we built the system so that people who don't like attributes don't have to use them. The one exception in V1 is contracts. Attributes are a convenient way to associate metadata contracts definitions with code that can be used to work with those contracts. Once our designers come online, you won't need to work with attributes. Once we have a richer modeling infrastructure, perhaps we'll have better ways than attributes to associate metadata with code. For now, they seem to us like the bets way to proceed.
&lt;br /&gt;
&lt;br /&gt;8. Our config story is not like MTS’s config story. You cannot change things the code depends on for correctness from config. If the developer cares about the semantics of the transport/protocol stack (must have transacted queue, must have session, etc), they can assert these dependencies from their code. By default, we believe that the deployer is the one who should control the transport and protocol mechanisms at an endpoint -- HTTP or TCP, transport or message security, etc. Those are typically managed from config (though the developer can choose to ignore config and do what they want). Given this summary, what part of the config story do you disagree with?
&lt;br /&gt;
&lt;br /&gt;9. Well, svcutil doesn't impose distributed object/RPC semantics. If you have a contract that has all [IN] and [OUT], then svcutil generates signatures used to send messages and process them like events. It's only if you have [IN/OUT] semantics in your contract that you will get RPC (which is what [IN/OUT] is about). If you dislike having a typed proxy generated for you that corresponds to the WSDL you want to use, then you can create the proxy code types yourself: you don't have to use svcUtil at all.
&lt;br /&gt;
&lt;br /&gt;10. Of course I can't say anything in response to your assertion that we haven't thought through our architecture.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14100"></thr:in-reply-to></entry><entry><id>14310</id><published>2005-08-24T04:29:00.0-05:00</published><updated>2005-08-24T04:29:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: 10 Things I Hate About Indigo</title><content type="html">I don't mean to be rude or out of order, but if that is your viewpoint why do you insist on using Indigo and .Net? I mean, the folks at Microsoft have a certain way of looking at distributed computing and they've built Indigo in that vein. You want free-form, decoupled messaging? You can build it in PHP/Perl/Python very easily. For my company (http://vuniq.co.il) we looked at .Net and Java and both of them were overkill. Messaging is actually simple when you do it in a stateless, decoupled manner, and  that's also the way it should look to the programmer.
&lt;br /&gt;
&lt;br /&gt;Anyway, just my $0.02.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14100"></thr:in-reply-to></entry><entry><id>49258</id><published>2007-11-21T07:30:00.0-05:00</published><updated>2007-11-21T07:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: 10 Things I Hate About Indigo</title><content type="html">WCF rules my world.
&lt;br /&gt;
&lt;br /&gt;I understand your statement about the domain model infection. Still, ask yourself if your domain entities should really double as datacontracts.
&lt;br /&gt;
&lt;br /&gt;Certainly not for a rich domain model, because entities would need to fulfill both the data and operations contracts. As for an anemic domain model, what do you make of aggregates and lazy loading - those are operations hidden behind properties. And certainly you aren't planning on exposing repositories as operation contracts, that would be extremely silly.
&lt;br /&gt;
&lt;br /&gt;So my answer to you is, leave your domain model intact, keep it in its own assembly. Your data and operations contracts should reside within the Application layer, not the domain layer, the same way your UI should not be directly coupled with your domain layer.
&lt;br /&gt;
&lt;br /&gt;You may also prefer to step-up the architecture to 5 layers and have a service layer between your domain and application layers. In this case the client side has Interface and Application layers, then a big bold separation (in reality, the network sits here), then the server side has Service and Domain layers. Both client and server also have an Infrastructure layer - the infamous boilerplate.
&lt;br /&gt;
&lt;br /&gt;What Eric Evans and Martin Fowler write are not meant as gospel, just inspiration. Adapt so you can leverage technology.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14100"></thr:in-reply-to></entry><entry><id>14204</id><published>2005-08-15T07:19:00.0-05:00</published><updated>2005-08-15T07:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">5 Things I Love About Indigo</title><content type="html">&lt;div&gt;&lt;a href="http://www.soapitstop.com/myblog.aspx"&gt;Tom Fuller&lt;/a&gt; left a great &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/08/14/14100.aspx#14181"&gt;comment &lt;/a&gt;on my last post. Mostly, it reminded me that I ought to be just as explicit about what's great about Indigo as I am about what's not so great. To answer Tom's specific question, the point of all this negativity is to influence the design of Indigo before it's released. The Indigo team has a tremendous opportunity to improve the quality of an entire generation of distributed applications by providing a solid infrastructure for application architects working on the Microsoft platform. I want to do my part to help them succeed. I think they're missing the boat by not providing a more straightforward, Mort-accessible messaging interface. Without further ado, here's what's great about Indigo.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;ol type="1" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;The people behind the technology. The Indigo team, as a group, is the most talented, passionate, and driven collection of geeks I've ever seen. [side note to my British readers: That sentence is grammatically correct in American English even if your way (&lt;em&gt;team are&lt;/em&gt;) makes more sense.] Their willingness to engage the community (even grumpy old curmudgeons like me) is impressive.&lt;/li&gt;
&lt;li&gt;The core technology for distributed programming is truly a thing of beauty. Deep down under the covers, Indigo has a well-designed engine. This gives me hope that the more cosmetic problems can be fixed.&lt;/li&gt;
&lt;li&gt;The message layer programming model. Yes, I realize this is also on the list of things I hate about Indigo, but you can't have a simpler messaging model without a quality lower-level programming interface. I'm very happy that the Indigo team built this layer on top of the core technology.&lt;/li&gt;
&lt;li&gt;The extensibility model. Even though I never plan to use it, I'm glad they did such a good job because it means the Einsteins of the world can extend Indigo for my benefit. If you're a Mort, this is vitally important.&lt;/li&gt;
&lt;li&gt;[MessageContract]. This attribute is the closest Indigo comes to providing a simple message-oriented approach. Even though it's way too limited, the fact that it is there at all gives me hope.&lt;/li&gt;&lt;/ol&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;The fact that this list is shorter than the first shouldn't be taken to mean that there's more bad than good in Indigo. These five things are vastly more significant than the 10 things I hate. Besides, I stretched the first list to get in an indirect reference to "The Taming of the Shrew". Next up, I'll take up Steve's challenge to be more specific in a slightly different way and try my hand at designing the simplified messaging interface I'd like to see from Indigo. It may take awhile. Designing API's is very tough and this blog is something I do on my own time.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author></entry><entry><id>14231</id><published>2005-08-16T08:20:00.0-05:00</published><updated>2005-08-16T08:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Indigo has a Simple Messaging Model?</title><content type="html">&lt;div&gt;Steve &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/08/14/14100.aspx#14214"&gt;responds &lt;/a&gt;to my Indigo complaints by claiming that Indigo, contrary to my assertion, has a simple messaging model. Although he doesn't specify exactly what he means, I assume he's talking about decorating methods with the [OperationContract(IsOneWay=true)] since that's what usually passes for simple messaging among the Indigo crowd. I completely reject that notion. A remote procedure call is still a remote procedure call, even if you don't get a response. You still have a proxy. You're still incorporating the service's method into the caller's domain. I will grant that with the appropriate discipline and design you can build a simple messaging model on top of this one-way RPC semantic, but Indigo really doesn't help you here.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;In one respect, I think Steve's view and mine are both correct, if you understand the difference in our perspectives. Steve, as an Indigo architect, looks at what happens inside the Indigo infrastructure, when you use the one-way semantic and sees a clear messaging orientation. I'm looking at the API that's presented to Indigo's users and see a continuum of RPC semantics with nary a messaging API in sight. I would like the Indigo API to reflect more directly the messaging orientation without the RPC overlay. I want to use Indigo to send structured messages to a variety of endpoints without necessarily having to map them to a particular service method. This is clearly possible with the current Indigo API but is just as clearly not the preferred programming model. It's difficult to describe exactly how my ideal high-level API would differ from the current API without some sort of pseudo-code examples. I'm working on exactly that, but it'll take some time because I have a family and a day job that come first.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;As to Steve's other points, his description of Indigo configuration led me to look deeper there and I see that I had a mistaken view based on the samples and demos I've seen. Now I have a different set of concerns about Indigo configuration that I'll have to address in later post. I'll just withdraw my last point. It was an unsubstantiated assertion. Of course, I still disagree with Steve about svcutil, but that's part and parcel of our disagreement about what are and what aren’t RPC semantics. I am still concerned about the way Indigo is presented to developers. After all the early emphasis on service orientation, I expected Indigo to present an API that is consistent with those principles to developers. Instead, up to this point, the articles, the samples, and the demos have consistently been all about RPC. Sure, I would prefer that Indigo not even have an RPC interface. It would be quite easy to replace that with a request/response messaging model, but I know that you have to support developers who want their distributed object model in spite of a couple of decades of experience showing it's a bad idea. My main point about being a Mort is that it's not the Morts of the world who want this. It's the Elvis-style developer who wants it. Real business apps map very directly onto a messaging model, much better than they map onto a distributed object or RPC model. I think Indigo is missing an opportunity to create a "pit of success" for building distributed business apps.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>6</thr:total></entry><entry><id>14238</id><published>2005-08-16T15:57:00.0-05:00</published><updated>2005-08-16T15:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Indigo has a Simple Messaging Model?</title><content type="html">John,
&lt;br /&gt;
&lt;br /&gt;Interesting... I'd think that Steve was also refering to the use of the Message class to mean "messaging only" and not imply an object model, though I'm not sure about it. I do think that your assertion that building proxies that look like RPC is probably not the best thing :)
&lt;br /&gt;
&lt;br /&gt;That said, am I the only one that's scared (or rather, saddened) by Steve's assertion in a past comment on your blog that "WCF is the programming model for MSMQ moving forward" (see  http://pluralsight.com/blogs/johncj/archive/2005/08/04/13855.aspx#14072). System.Messaging is a a pretty sweet API, imho, and one that is indeed fairly message oriented, fwiw (I also fail to see how you could get the most out of MSMQ just by using WCF, but I haven't looked too deep on it)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14231"></thr:in-reply-to></entry><entry><id>14241</id><published>2005-08-16T18:41:00.0-05:00</published><updated>2005-08-16T18:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Indigo has a Simple Messaging Model?</title><content type="html">Ok I'm starting to understand a little bit more about what you feel is so difficult about RPC semantics in business apps.  It is your belief that service orientation can only be done when clients and services are not bound together in any way.  In your mind there has to be something in the middle smart enough to know where to take the request and put it.  Couldn't you design things this way through the use of intermediaries and the message object?  I guess what you're saying is that's really not easy and it's not really being focused on through most of the materials available with the Beta 1 bits.
&lt;br /&gt;
&lt;br /&gt;So I'll bet your thinking, great he finally gets it.  Well not completely, I think what's interesting is that we've taken this idea of "service orientation" and allowed it to consume the concept of distribution of application components.  If Indigo/WCF is truly the unification of distributed programming models then isn't there a RPC model that would leverage proprietary transports and more of a messaging type model that is meant to enable the "service-oriented" enterprise?
&lt;br /&gt;
&lt;br /&gt;In your post above you even reference "service-orientation" when talking about a set of principals that are being presented to developers.  My question is, what are those principals exactly?  How is it that a specific implementation technology could in any way be preserving "service-oriented" principals?  It is my belief that "service-orientation" is a design and implementation strategy that allows an enterprise to expose core business application building blocks that can stand the test of time (aka code reuse for the web generation).
&lt;br /&gt;
&lt;br /&gt;Now I will admit to feeling somewhat out of my league when you begin discussing RPC stylings creating mass conflict in a "service-oriented" world.  I think there are a ton of things that lead to chaos in a "service-oriented" world (versioning, testing, boundary definition, autonomy, management/administration, etc...).  RPC stylings is the least of my concern as a developer who is trying to get my head around how it is we design these freaking things.  
&lt;br /&gt;
&lt;br /&gt;With that said, your last post that gave a listing of the 5 things you loved about Indigo explained your reason for being so consistent with your message.  I respect that and sincerely hope you get what you're looking for.  I personally still feel quite satisfied with the versioning enhancements delivered in the programming model that will allow me to eliminate most of the tight coupling I deal with today in first genreation web services.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14231"></thr:in-reply-to></entry><entry><id>14260</id><published>2005-08-18T06:39:00.0-05:00</published><updated>2005-08-18T06:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Indigo has a Simple Messaging Model?</title><content type="html">Tomas,
&lt;br /&gt;
&lt;br /&gt;Yes, I share your apprehensions about MSMQ and Indigo (as well as your appreciation for System.Messaging).
&lt;br /&gt;
&lt;br /&gt;Tom,
&lt;br /&gt;
&lt;br /&gt;I'm working on explaining in more detail my view of SOA. I will say this now. When you build a distributed application there is always something between a service and its callers, i.e. the network. One of my major beefs with the Indigo team is whether or not it is a good idea to allow developers to pretend that the network isn't there. The design goal of RPC is to allow a remote call to look exactly like a local call. I think that is a serious mistake.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14231"></thr:in-reply-to></entry><entry><id>14306</id><published>2005-08-23T15:51:00.0-05:00</published><updated>2005-08-23T15:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Indigo has a Simple Messaging Model?</title><content type="html">I think more people need to read "A Note on Distributed Computing" by Jim Waldo (and the other folks) at Sun. I think if there's ever a short treatise on the fallacies of "pretending that the network isn't there" that's the one.
&lt;br /&gt;
&lt;br /&gt;Sun made an attempt with the Jini technology to bring service orientation (before it became a buzz word) and the network more to the front in software systems based on the lessons learned from the past. However, I've been wondering over the last couple of years if they didn't listen to themselves entirely. Jini (at least the implementation that is commonly used) still is heavily reliant on RMI which in essence is primarily a RPC-like model. It feels like they came so close to doing it right, but still came up a little short.
&lt;br /&gt;
&lt;br /&gt;John, from reading your posts it appears Indigo is falling into the same trap. All the pieces are there for a proper message-based service-oriented design, but they still want to pretend the network is not there -- that developers can think in terms of services as objects. That right there flies in the face of over twenty years of hard knocks.
&lt;br /&gt;
&lt;br /&gt;I can at least say I have youth on my side to claim I didn't know better. ;) I'm just now gaining an appreciation of messaging APIs. What I don't get is why there's this idea that messaging APIs are "harder" for developers to understand than RPC driven models. I've had the pleasure to teach RPC models (Java RMI, .NET remoting, COM+, ASP.NET web services) to developers and I can say first hand that they're no piece of cake for developers to pick up beyond "Hello, World". When I hear the word "proxies" come up with regards to services, I keep hearing the robot from Lost in Space -- "Danger, Danger Will Robinson!"</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14231"></thr:in-reply-to></entry><entry><id>14548</id><published>2005-09-06T13:24:00.0-05:00</published><updated>2005-09-06T13:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Indigo has a Simple Messaging Model?</title><content type="html">Ladies and gentlemen, let's just make something very clear here. Nobody here in the WCF team wants to make developers think that the network isn't there. However, we can't keep pushing it into developers' faces every time they need to do something that might touch a wire.
&lt;br /&gt;
&lt;br /&gt;What most of you are referring to as RPC is not, in fact, anything to do with RPC, but a coding construct which is clean and efficient and doesn't tie one's code to the transport implementation itself. Now, before anyone misunderstands me, I'm not saying that by using EnterpriseServices or ASMX that you're not coupled to a transport, but the fact is that you can convert code that says component.DoSomething(data) from ES to ASMX pretty quickly and easily. Now imagine the amount of work to convert code that talks native DCOM to a SOAP based messaging stack. By using Service.Action([Parameters]), you're essentially opting to decouple your implementation from your platform's. Service.Action([Parameters]) is still an effective way to call actions on a service, and yes, this doesn't force into developers' faces that the service being called is remote ... however, the 
&lt;br /&gt;
&lt;br /&gt;FooProxy foo = new FooProxy(fooBinding);
&lt;br /&gt;
&lt;br /&gt;call does ... that way, the developer knows that what is being created is a proxy, not a local "object".
&lt;br /&gt;
&lt;br /&gt;Will this stop people building chatty apps? No. Should we stop people building chatty apps? Meybe ... but then we'd eliminate a whole host of apps where chattiness is absolutely necessary (airline booking), banking, etc.
&lt;br /&gt;
&lt;br /&gt;To close - the network is always there. What network, however, is not always clear at development time - at deployment time, it might be Named Pipes, UDP, TCP, HTTP, WAN, Internet, etc. Decoupling developers from having to know what transport (security and reliability) capabilities are configured under their services whilst giving them cues that they're not dealing with local objects is, to me at least, a good compromise, no?
&lt;br /&gt;
&lt;br /&gt;Rich.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14231"></thr:in-reply-to></entry><entry><id>14743</id><published>2005-09-10T04:30:00.0-05:00</published><updated>2005-09-10T04:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Indigo has a Simple Messaging Model?</title><content type="html">James says:
&lt;br /&gt;"Sun made an attempt with the Jini technology to bring service orientation (before it became a buzz word) and the network more to the front in software systems based on the lessons learned from the past. However, I've been wondering over the last couple of years if they didn't listen to themselves entirely. Jini (at least the implementation that is commonly used) still is heavily reliant on RMI which in essence is primarily a RPC-like model. It feels like they came so close to doing it right, but still came up a little short"
&lt;br /&gt;
&lt;br /&gt;In their defense, the RMI implementation was the default implementation, not the only possible implementation. The RMI implementation was the default because it was easy. I have never heard of anyone implementing a non-default implementation (but I feel sure someone did.)
&lt;br /&gt;
&lt;br /&gt;The end result is that the default implementation is generally the only implementation...Will Indigo suffer from the same fate? Way to early for me to tell. I am sure others have opinions though...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14231"></thr:in-reply-to></entry><entry><id>14312</id><published>2005-08-24T07:20:00.0-05:00</published><updated>2005-08-24T07:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Mort at the PDC (Updated)</title><content type="html">&lt;div&gt;I'll be &lt;a href="http://msdn.microsoft.com/events/pdc/"&gt;there&lt;/a&gt;. Although some folks think that Mort doesn't go to conferences, I've always felt that going to the PDC was essential. The PDC is important for two reasons, from a Mort perspective. First, Mort needs to know where the Microsoft is platform is going because there's really no other mainstream platform for Mort (except for those of us who are still doing COBOL on the mainframe which despite what the industry cognoscenti would have you believe is still very much a mainstream platform). VMS and DECBasic are dying off. Java never had a place for Mort. The Linux community is virulently anti-Mort. Apple's always focused on ease of use for the non-programmer (not that there's anything wrong with that, it just doesn't make it a good platform for Mort). Morts know that the Microsoft platform is our natural home. When they start planning on major renovations, we need to be prepared.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Second, Mort needs to be at the PDC to remind the product teams how important we are for the success of Microsoft's platform. With the exception of the Visual Basic team, most of the product teams at Microsoft don't understand Mort. The PDC is our chance to let them put a few faces on that persona. Most Morts don't have the time to blog, speak at conferences, or talk to the industry press. We really prefer to deliver value to our employers and spend time with our families. The PDC is our best chance to provide direct feedback to Microsoft on what we really need from the platform.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&amp;lt;ShamelessPlug&amp;gt;If you're a Mort (or think you might be … I really need to do the Jeff Foxworthy thing for Morts), join me for a BOF session to discuss whether this year's PDC will have a real impact or not.  &lt;font color="#ff0000"&gt;&amp;lt;Update&amp;gt; This session was accepted. Join me at 9 PM on Thursday, September 15th. I'll update again when I know the room.&amp;lt;/Update&amp;gt;&lt;/font&gt;&amp;lt;/ShamelessPlug&amp;gt;&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>2</thr:total></entry><entry><id>14351</id><published>2005-08-25T08:17:00.0-05:00</published><updated>2005-08-25T08:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort at the PDC</title><content type="html">COBOL on the PC/Unix platform is pretty mainstream too!
&lt;br /&gt;checkout microfocus.com (yeah it's a plug for my employer, but also for my share price ;-) )</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14312"></thr:in-reply-to></entry><entry><id>14547</id><published>2005-09-06T13:14:00.0-05:00</published><updated>2005-09-06T13:14:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Mort at the PDC</title><content type="html">Instead of a BOF session about whether or not a conference will have an impact on the community, why not a BOF session about some of your other arguments?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14312"></thr:in-reply-to></entry><entry><id>14364</id><published>2005-08-26T07:34:00.0-05:00</published><updated>2005-08-26T07:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Love's Labours Lost</title><content type="html">&lt;div&gt;In the comments, a couple of folks have responded to my criticisms of Indigo by suggesting alternative technologies for building distributed applications. I'm not looking for alternatives to Indigo. I'm working towards a better Indigo. I'm convinced that the underlying Indigo infrastructure can and should support the programming model that I envision. I want to help Microsoft avoid missing the opportunity to provide an entire generation of programmers with the tools to quickly and easily build scalable, reliable, and manageable distributed applications.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I think the Indigo team is operating under a set of assumptions that are invalid. They appear to believe the following things to be true, but I believe these things are false:&lt;/div&gt;
&lt;ol type="1" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;Asynchronous messaging is inherently more difficult than RPC.&lt;/li&gt;
&lt;li&gt;Building business applications is just like building shrink-wrap software.&lt;/li&gt;
&lt;li&gt;Service orientation is achieved on the wire, not in the programming model.&lt;/li&gt;
&lt;li&gt;Ease of code migration is more important than wire compatibility.&lt;/li&gt;
&lt;li&gt;Mapping between a service's external messaging interface and its internal representations is a mechanical detail that's best handled by the plumbing.&lt;/li&gt;&lt;/ol&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I want to explore each of these notions in future posts as I develop my proposed alternative programming model for Indigo.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>1</thr:total></entry><entry><id>14390</id><published>2005-08-27T12:08:00.0-05:00</published><updated>2005-08-27T12:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">New BOFs added to the voting list</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14364"></thr:in-reply-to></entry><entry><id>14535</id><published>2005-09-04T12:18:00.0-05:00</published><updated>2005-09-04T12:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Serendipitous, Indeed</title><content type="html">&lt;div&gt;&lt;em&gt;Wherein our narrator makes a fortuitous discovery in a most unexpected place.&lt;/em&gt;&lt;/div&gt;
&lt;div&gt;&lt;em&gt;&lt;/em&gt; &lt;/div&gt;
&lt;div&gt;One of the struggles I face in trying to explain my objections to the Indigo API is creating concrete examples of the abstract, and sometimes seemingly abstruse, notion I have that the Indigo API itself leads developers down the wrong path in building distributed applications. It's easy to come up with scenarios that demonstrate the ideas, but these scenarios often seem forced and are always open to the criticism that they're contrived specifically to prove my point. Imagine my delight and surprise when a post showed up in my aggregator that perfectly illustrates my argument and that post is written by a Microsoft expert in API usability. Please take a few moments to read and ponder the significance of this &lt;a href="http://blogs.msdn.com/stevencl/archive/2005/08/26/456805.aspx"&gt;post &lt;/a&gt;by Steven Clarke. Now, I think Steven drew the wrong lesson from his experience, but before we get to that, let's take a look at the situation he set up. He has some UI programmers using data binding to link the UI to a backend Indigo service. This is a key scenario for SOA. In this case the problem domain is an album list. I'm going to assume (based on the names of the methods in his interface) that this is a personal list of music albums. Steven's understanding of his problem is that he made errors in the way he maintained state within his service and the assumptions that the UI programmers made. To understand how fundamentally wrong this is, we need to think a bit about the problem domain, the interface he exposed, and how the Indigo API enabled him to create the situation.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;An album list is rather obviously a document. Except that to many software architects and developers, that's not obvious at all. The database folks will immediately think of a relational model and the OO crowd will think in terms of objects and their methods (state + behavior), but normal people will naturally have a conceptual model of a document. It is absolutely critical to maintain the document oriented view if you want to be build excellent distributed applications. The main reason that service orientation is the best way to build distributed applications is that it provides an effective way to map document-oriented business processes onto the physical constructs of a computer network. The basic principles of service orientation have been around as long as the pyramids of Giza. Indeed, they enabled the ancient Egyptians to build the pyramids. The system they used was based on the same asynchronous messaging architecture that I use to build systems today. Granted, their messages were either verbal or written on papyrus in hieroglyphics, their network used people to physically move those messages, and the services were all performed manually, but from an abstract systems view,  it is the same.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Unfortunately, the current Indigo API doesn't encourage a document oriented approach to service design. Take a look at Steven's service contract:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt;[ServiceContract(Namespace = "&lt;/font&gt;&lt;a href="http://usability.task/"&gt;&lt;font face="Courier New"&gt;http://Usability.Task&lt;/font&gt;&lt;/a&gt;&lt;font face="Courier New"&gt;")]&lt;br /&gt;interface IAlbumService&lt;br /&gt;{&lt;br /&gt; [OperationContract]&lt;br /&gt; Album[] GetAlbumList();&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt; [OperationContract]&lt;br /&gt; void AddAlbum(string title);&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt; [OperationContract]&lt;br /&gt; int GetNumberOfAlbums();&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt; [OperationContract]&lt;br /&gt; void SellAlbum(string title);&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt;}&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt;&lt;/font&gt; &lt;/div&gt;
&lt;div align="left"&gt;Now, if you're a veteran of the global struggle against rampant unscalability, you'll immediately see issues with this design. The AddAlbum method is the very definition of a chatty interface. And if you don't think scalability matters for an album list, I'd just point you this &lt;a href="http://www.agileprogrammer.com/dotnetguy/archive/2005/01/24/4766.aspx"&gt;guy&lt;/a&gt;. More fundamentally, this interface confused the UI developers it was supposed to support. I don't think you place the blame for these problems with Steven Clarke. He's clearly a very intelligent guy. I've learned a lot from his writings on API usability. Nor can we write this off to inexperience. He's been working with Indigo as long as anybody. I think the fault here clearly lies with the API itself. What I find most interesting about Steven's post is Steve Swartz's advice. Unlike most Indigo developers, Steven has direct access to the Indigo architects. Steve's advice is very standard RPC thinking. He presents two choices. The first is add Open and Close methods to the API to represent the state management. The second is to add a parameter to each function to represent a session identifier. Both of these solutions pollute the service interface with details that are irrelevant to the problem domain and force the service to relinquish some its autonomy to the service consumer.&lt;/div&gt;
&lt;div align="left"&gt; &lt;/div&gt;
&lt;div align="left"&gt;There is a better way. Microsoft's own Patterns and Practices group calls it the &lt;a href="http://msdn.microsoft.com/architecture/learnmore/learnimpdes/default.aspx?pull=/library/en-us/dnbda/html/SOADesign.asp"&gt;Document Processor&lt;/a&gt; pattern. If you apply that pattern, you get an interface that would look more like this:&lt;/div&gt;
&lt;div align="left"&gt; &lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt;[ServiceContract(Namespace = "&lt;/font&gt;&lt;a href="http://usability.task/"&gt;&lt;font face="Courier New"&gt;http://Usability.Task&lt;/font&gt;&lt;/a&gt;&lt;font face="Courier New"&gt;")]&lt;br /&gt;interface IAlbumService&lt;br /&gt;{&lt;br /&gt; [OperationContract]&lt;br /&gt; AlbumList GetAlbumList(string Owner);&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt; [OperationContract(IsOneWay = true)]&lt;br /&gt; void StoreAlbumList(AlbumList Albums);&lt;/font&gt;&lt;/div&gt;
&lt;div align="left"&gt;&lt;font face="Courier New"&gt; &lt;/font&gt;&lt;font face="Courier New"&gt;}&lt;/font&gt;&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;This is a huge improvement over the original API. No need for Open and Close methods, no extraneous session id parameters, and no chatty calls. But there is still a problem. I wouldn't want to tie up my pretty Avalon UI while waiting on Brad's 1000+ album list to come back from the service. Other implementers of the service caller might choose to block on that call, especially if the service caller isn't a UI. Unfortunately, the async design of Indigo is totally messed up. It's based on the async pattern of the .Net framework which is a pattern for calling synchronous local methods asynchronously. There is a much simpler approach that's possible when you realize that all network traffic is fundamentally asynchronous and that only the caller is able to make the choice whether or not its code should block waiting for the response. I'll outline this approach in my next post.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>8</thr:total></entry><entry><id>14536</id><published>2005-09-04T12:27:00.0-05:00</published><updated>2005-09-04T12:27:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">Mr. Cavnar Johnson,
&lt;br /&gt;
&lt;br /&gt;As you are aware I have not always fully understood your objections to the Indigo programming model.  However after a few more weeks of research I'm really starting to follow your concerns completely.  Specifically I have read two outstanding pieces of work in the past two weeks.  The first from John Evdemon who is right out of the Microsoft Architcture Strategy group.  The article is titled "Principles of Service Design: Service Patterns and Anti-Patterns".  In this piece two things stand out that reinforce your points above.  First of all the first anti pattern titled "CRUDy Interface" warns against chatty interfaces.  This completely makes sense in my mind,  how can we avoid the pitfalls of tight coupling if we don't get away from fine grained interfacing.  Second Mr. Evdemon talks about never trusting the client to do the right thing.  I would think you support this notion by not agreeing to Mr. Swartz's idea of implementing an Open() and Close() to manage state through an Indigo service.  I couldn't agree with you more on this point.
&lt;br /&gt;
&lt;br /&gt;The other item I recently read was from November of 1994.  That's right 1994,  It is from Sun Microsystems and is something I'm sure you distributed guys are familiar with.  But for a guy who's first true introduction to distributed development was .Net remoting and web services I found the parallels to our recent conversations jaw dropping.  I'm referring to "A Note on Distributed Computing" by Jim Waldo, Geoff Wyant, Ann Wollrath, and Sam Kendall.  Shockingly enough they write about the cyclical nature of our attempts to unify programming models for distributed application development.  They talk about client trust issues and partial failure recovery.  They talk about "Quality of Service" and the importance of not treating remote objects as though they are local objects.  
&lt;br /&gt;
&lt;br /&gt;These things sound awfully familiar to the grumblings I hear from you and your other contract-first colleagues.  I guess what I'm still not convinced on is whether or not we can do this with Indigo.  I can't help but picture services defined that are explicit in their [DataContract] and in their [MessageContract] definitions along with a [ServiceContract] that more carefully presents the exposed behavior in an explicit way (like the one you have defined above).  Many of the key issues they talk about in "A Note on Distributed Computing" are being handled in the Indigo programming model.  They talk about the differences in memory access and Indigo introduces "out" parameters.  I guess there in lies part of the problem in your opinon .... right?  You basically are capable of doing the things that you can do with local objects without taking specific steps to control it when you go across process boundaries.  
&lt;br /&gt;
&lt;br /&gt;When I was researching all of the capabilities of the Indigo service stack I couldn't help but think that the idea of "out" parameters was very anti Message Oriented.  Would you agree?  Also I have to say that the message out of Microsoft does appear to be somewhat fragmented.  In one camp they are attempting to showcase all of the cool new features for building RPC style services (like private sessions for example) and in another camp they are showing some of the best practices for doing SO (John Evdemon's article for example).  I suppose the responsiblity falls back on enterprise architects to understand this and even more so on trainers like PluralSight to continue to reinforce the differences.  What else do you think Microsoft needs to do?  Aren't they just giving us an aresenal of features that we can use or not use.  If we as architects and designers build an enterprise SOA using RPC style objects then we should expect to pay a penalty (probably a big one).  I suppose I still struggle with why would I ever build an RPC style distributed object if not for Fat client business logic centralization (of course I come from a web application background so that might contribute to my short sided opinions).  Can you think of some other scenarios?  I've heard of security being used as a reason for doing this too.
&lt;br /&gt;
&lt;br /&gt;Great thought provoking post for a Sunday afternoon.  Also very timely for me since I just read those two articles.  I look forward to your response.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14545</id><published>2005-09-06T13:10:00.0-05:00</published><updated>2005-09-06T13:10:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">John - all you've done here in your "solution" is abstract the process a little more be sending across a list of albums rather than just one. Big deal - this is a design issue, not a technology/platform issue. 
&lt;br /&gt;
&lt;br /&gt;Further - your "huge improvement" is only a little more scalable than Steve's original design - the calling thread still blocks while your album list downloads. If this truly was a concern, then you would, of course, implement the beginxxx-endxxx async method pattern that you so readily discounted.
&lt;br /&gt;
&lt;br /&gt;Also, you have not changed the programming model - you're still doing what you call "RPC" style programming. I'm shocked. Why not illustrate the code that would form up the necessary message, squirt it across the wire, and implement a response handler that de-serializes the response ... as you seem so fond of promoting?
&lt;br /&gt;
&lt;br /&gt;Finally, what Steven was illustrating was how one COULD build sessionful communications using Indigo. He was not proposing that this be the design for a fully-fledged Google-scale service - this would, of course, require an entirely different approach.
&lt;br /&gt;
&lt;br /&gt;John, I think you're letting yourself get a little carried away with your anti-WCF jihad and the gaps in your argument are starting to show. 
&lt;br /&gt;
&lt;br /&gt;I would encourage you to, instead of simply thinking up new ways to bash a given technology, to instead come up with very clear, consistent and actionable improvements that could actually benefit the design of WCF and the customers who use it.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14550</id><published>2005-09-06T14:07:00.0-05:00</published><updated>2005-09-06T14:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">Rich,
&lt;br /&gt;
&lt;br /&gt;Get a grip and actually read my post. You guys always want to equate messaging with bit-level handling of the communications. That's not what I'm talking about at all. I think it's your job to do "the code that would form up the necessary message, squirt it across the wire, and implement a response handler that de-serializes the response". I just want you to expose a simple messaging model that encourages developers to do the right thing.
&lt;br /&gt;
&lt;br /&gt;Also, I specifically pointed out the problem with the GetAlbumList method and mentioned that I'd be addressing it in my next post.
&lt;br /&gt;
&lt;br /&gt;In case I wasn't clear, the huge improvement in the API had nothing to do with scalability and everything to do with matching the API to the problem domain. The biggest problem with Steven's API was that it didn't match the expectation of his users.
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14552</id><published>2005-09-06T15:19:00.0-05:00</published><updated>2005-09-06T15:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">Wow, a true blog battle royale.  I'll gracefully step aside with these final comments.  I still don't understand what it is that would make WCF more message-oriented.  I think there are features that reinforce that approach (message contracts for example) and things that basically contradict message-orientation (out parameters for example).
&lt;br /&gt;
&lt;br /&gt;In my mind the responsiblity falls back on the architect/designer to implement a services that will prove to be flexible.  The technology set appears on the surface to give me what I need to respond to the changing needs of our business community.  If it is RPC stylings that creates all of this horrible tight coupling then simply avoid it by using typed message services.  Am I over-simplifying this?  
&lt;br /&gt;
&lt;br /&gt;Either way, I enjoy your postings John, they make me think through my own opinions on these manners and they've pointed me to some great literature.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14560</id><published>2005-09-07T06:25:00.0-05:00</published><updated>2005-09-07T06:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">It looks like I am moderating a BOF session at PDC about "Designing Apps for SOA".  It's a brainstorming session to look into how we think applications designs are changing to be more amenable to service-orientation.  
&lt;br /&gt;
&lt;br /&gt;I drew the newbie-moderator timeslot: Tuesday, 13 September at 10:15PM Pacific.  I can post the notes when it's done.  But now that the slot is confirmed, I thought I would drum up some interest.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14564</id><published>2005-09-07T11:15:00.0-05:00</published><updated>2005-09-07T11:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">I've really enjoyed reading a lot of the posts here.  I do believe that I may be missing some important points however.
&lt;br /&gt;
&lt;br /&gt;First of all, at what point do you make the decision to use "services" or a "service-oriented" approach.
&lt;br /&gt;
&lt;br /&gt;What do you consider "RPC"-style of programming?  Is then when the client has "knowledge" of the server in the form of a proxy?  If you remove a "proxy" what agnostic solution do you provide for the client to connect to service?
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14742</id><published>2005-09-10T04:15:00.0-05:00</published><updated>2005-09-10T04:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">You guys are having a lot of wonderful arguments and everyone is making good points (altough Rich seems to be loosing patience and simply bashing away.) but I think the key point is that the original album list interface is extremely poor. It is so poor that you can't even have an intelligent argument about it, and actually using it as part of an API Usability study is astounding (and somewhat revealing...) to me.
&lt;br /&gt;
&lt;br /&gt;No one really mentioned that a contract (service) or otherwise has important components that might not be refelected in the interface itself. For example, if Steve had provided some actual documentation on the purpose of the service, how the service worked (authentication, statefulness, synchronicity, etc...) at least good developers would be able to work around a poor interface. And although they shouldn't have to, in the real world that is the 90/10 and we can't blame Indigo for that (yet!)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14921</id><published>2005-09-20T12:10:00.0-05:00</published><updated>2005-09-20T12:10:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Serendipitous, Indeed</title><content type="html">John, I stopped reading your blog once I got to tenth thing you hate about Indigo. I found it both mean-spirited and ill-informed. 
&lt;br /&gt;
&lt;br /&gt;A friend noted that you had misquoted me in this post; I wanted to note that here.
&lt;br /&gt;
&lt;br /&gt;Steven's usability study was around the interaction between WCF and the "databinding" part of WPF. The problem people were having was that they assumed that WCF worked like a database -- they figured they'd get the same data if they opened many proxies. I was suggesting an alternative pattern for that particular service that would make the service's operation clear to his experimental users (who do not get a lot of documentation). For better or worse, the databinding APIs are all request-response -- it was out of scope for the particular exercise to redesign WPF.
&lt;br /&gt;
&lt;br /&gt;For some reason, you felt inclined to infer my general architectural inclination from that single example. You were wrong to do so, and you got me wrong to boot.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14535"></thr:in-reply-to></entry><entry><id>14758</id><published>2005-09-11T08:25:00.0-05:00</published><updated>2005-09-11T08:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Dear Rich</title><content type="html">&lt;div&gt;&lt;em&gt;&amp;lt;Aside&amp;gt;This is good time to remind everyone that I don't work for PluralSight and they are not responsible for the content of this blog. &lt;/em&gt;&lt;a href="http://pluralsight.com/blogs/aaron/default.aspx"&gt;&lt;em&gt;Aaron Skonnard &lt;/em&gt;&lt;/a&gt;&lt;em&gt;(who does work for PluralSight) graciously offered me this spot with the only proviso being that I use it. The opinions expressed here are mine alone, etc.&amp;lt;/Aside&amp;gt;&lt;/em&gt;&lt;/div&gt;
&lt;div&gt;&lt;em&gt;&lt;/em&gt; &lt;/div&gt;
&lt;div&gt;&lt;a href="http://blogs.msdn.com/richardt/archive/2005/09/06/461617.aspx"&gt;You're welcome&lt;/a&gt;. Let me take a moment to emphasize what I think is the biggest problem with your &lt;a href="http://msdn.microsoft.com/webservices/choosing/default.aspx?pull=/library/en-us/dnwebsrv/html/dsgprescriptiveguidance.asp"&gt;whitepaper&lt;/a&gt;. In your response, you restate the aim of the paper ("to help you make the best choices when deciding how to build distributed systems today on the Microsoft platform") and then you go on to say that guidance about how to actually go about designing distributed systems is beyond the scope of the paper. I simply can't fathom how you propose to help people make the best choices in deciding how to build a system if you don't address how to design said system. Would it make sense to write an article to help people make the best choices when making fudge without including any recipes? Would you talk about how it's important to use chocolate, sugar, and butter without describing the relative portions to use? You could even describe how the molecular nature of peanut butter affects the consistency of fudge, but how useful is that without a recipe? To extend this analogy close to the breaking point, Microsoft may just be the store that sells the ingredients, but your success is directly dependent on whether or not people like me can cook up some tasty fudge.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Understanding our difference of opinion about that allows me to answer your final question. Your paper is neither full of worthless trash nor will it help the reader decide when and where to apply which technology when building their system. Your article is full of accurate information without the necessary context for your readers to put it to full use. My original response to your whitepaper was my attempt to provide the appropriate context that would allow people to successfully use Microsoft's technologies to build distributed applications. To return to my analogy, my original response to your article was my attempt to provide a recipe for some tasty fudge. I take your point that I wasn't entirely clear about my recipe. This is due, in large part, to two different factors. First, I devised my response to follow the structure of your article and supply my guidance as an alternative to yours. In retrospect, I see this was a mistake. In the end, it obscured some of the points that I was trying to make. Second, designing distributed systems is harder than making fudge and I really have two goals. I want to describe my favorite recipe for building distributed systems and how Indigo makes it more difficult to build systems they way I want.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Now, to respond to a few particulars in your response. You say that I appear to assume that you favor RPC style communication. Actually, I'll state that outright.  When I use the term RPC,  I mean exactly that: Remote Procedure Call. Of the approximately 4200 words in your article, 90% of them are spent talking about RPC-style technologies (.NET Remoting, DCOM, ASMX, and Indigo) and 10% talking about messaging-style technologies (which I define pretty broadly by including MSMQ, BizTalk, SQL Server Service Broker, SQL Server Notification Services, and HIS). You clearly state that distributed component technologies are a powerful way to build tightly coupled portions of your application. This is, at the very least, a partial endorsement of distributed objects. I strongly disagree with this, by the way. Let me be clear that I am quite cognizant that it is certainly possible to build powerful systems using distributed component technology. I've done it a few times myself, but there is a more excellent way. &lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Let me clearly articulate my alternative to distributed object technology and RPC-style programming models. I explicitly reject your formulation of the messaging-style approach. Message-based programming models need not be concerned with the low-level details of transports or the processing of XML streams. Once again, you trot out the old canard that message-oriented programming is not as productive as RPC-style programming. I would argue that for most business programmers, message-oriented programming is far more productive than the traditional OO approach. Message-oriented analysis and design focuses a few simple constructs: Messages, services, and events. It is very straight forward to map distributed business processes to these constructs in a way that never worked well with RPC. Here is &lt;strong&gt;*precisely*&lt;/strong&gt; the opportunity that I think the Indigo team missed. At the heart of the internal model of Indigo is a very powerful concept of a message. Unfortunately, this conceptual model is never exposed to developers and architects directly. You can only manipulate it indirectly, either through low-level XML processing or by applying a set of opaque attributes to a .NET type. Clearly, for interoperability reasons, the wire format for this message will be XML and the structure must be expressed in terms of XML Schema (despite its complexity). But I see no reason I shouldn't be able to work with this message in the .NET programming language of my choice. The Indigo team has already built the infrastructure to make the transformation. All they need to do is to expose it to developers instead of hiding it behind those attributes or forcing us to grovel in the angle brackets.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Once we have a way of dealing directly with messages, we need a straightforward way of connecting the initiators of message exchanges with the responders. For the sake of simplicity, I'll call the initiator the Message Sender and the responder the Message Receiver, even though in many cases both sides send and receive messages. We normally think of the Message Receiver as a service and the Message Sender as the caller. The Message Sender and Message Receiver need to agree on at least the following things:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;ol type="1" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;
&lt;div&gt;The shape of the initial message&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;The message destination&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;The shape of the response message (if any)&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;The response destination&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I think anybody who's worked with the System.Messaging API can imagine a pretty straightforward API for these programming primitives. Instead of being limited to the MSMQ proprietary protocol and infrastructure, this API could be layered on top of all the interoperable goodness of the Indigo infrastructure. &lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Finally, I want to point out that Rich and I agree on a lot more than we disagree. Developers should spend their time building business apps, not infrastructure, for all the reasons Rich lays out in his post. Building a messaging infrastructure is devilishly hard and it is best left to experts like those who work for Microsoft. The only major point of disagreement is how to best expose that to application developers. I'm not even asking that the Indigo team throw out their RPC-style interface because I know that despite all the accumulated experience of the last 15 years of distributed application building, some folks still want to do that. All I'm really asking for is an alternative high-level API that allows me to map asynchronous messaging-based business processes directly on to the asynchronous messaging-based infrastructure in Indigo.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;John&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;P.S. I liked the first version of your post better, but I understand why you edited it. Since we're both going to be in Los Angeles for the PDC, let's get together and share a cold beverage. This is an instance where I think synchronous communication might really be useful. Especially since I suspect we both would prefer an ESB from these &lt;a href="http://www.fullers.co.uk/"&gt;guys&lt;/a&gt; to one from those &lt;a href="http://www.sonicsoftware.com/products/sonic_esb/index.ssp"&gt;guys&lt;/a&gt;.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>9</thr:total></entry><entry><id>14764</id><published>2005-09-11T10:37:00.0-05:00</published><updated>2005-09-11T10:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Dear Rich</title><content type="html">I'm not a .NET programmer, but from what I gathered from this post [1], Indigo's ProcessMessage API should do what you want. What am I missing?
&lt;br /&gt;
&lt;br /&gt;[1] http://pluralsight.com/blogs/dbox/archive/2005/02/12/5819.aspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14766</id><published>2005-09-11T11:51:00.0-05:00</published><updated>2005-09-11T11:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Messaging vs. RPC</title><content type="html">Nothing like a nice pissing contest: Rich Turner and John Cavnar-Johnson go back and forth about how to do distributed programming the right way. The starting point was Rich&amp;amp;#8217;s whitepaper on Developing Distributed Services Today, to which John posted a somewhat less than favorable comment. Rich responded (a little childishly, IMO, even in the edited version); John followed up again....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14770</id><published>2005-09-11T18:42:00.0-05:00</published><updated>2005-09-11T18:42:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Dear Rich</title><content type="html">Stefan,
&lt;br /&gt;
&lt;br /&gt;Indigo's ProcessMessage API accepts only what they call an "untyped message". In Indigo parlance that means it's not much more than raw XML. Hence it is unsuitable as a high-level API.
&lt;br /&gt;
&lt;br /&gt;John</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14772</id><published>2005-09-11T23:05:00.0-05:00</published><updated>2005-09-11T23:05:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Dear Rich</title><content type="html">Hm ... what would you expect, then? A message containing object(s) (de)serialized from the XML? I would argue that this is something to avoid, but if you wanted it, wouldn't it be trivial to put an ultra-thin layer on top that did just that - simply using some .NET XmlSerializationWhatever API?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14774</id><published>2005-09-12T03:31:00.0-05:00</published><updated>2005-09-12T03:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Is Microsoft doing the &amp;amp;quot;hide-the-paradigm-from-those-dumb-developer-idiots&amp;amp;quot; thing, again?</title><content type="html">There is a &amp;amp;#8220;nice&amp;amp;#8221; discussion going on between Rich Turner and John CJ. Stefan already summarized and commented the highlights. If nothing else this post is intended to show that there is at least one reader of his blog, who...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14776</id><published>2005-09-12T10:30:00.0-05:00</published><updated>2005-09-12T10:30:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dear John ... Part II</title><content type="html">Dear John, Part II
&lt;br /&gt;Thanks once again for discussing your thoughts on my musings in my last blog to you....</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14792</id><published>2005-09-13T01:13:00.0-05:00</published><updated>2005-09-13T01:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Dear Rich</title><content type="html">John,
&lt;br /&gt;
&lt;br /&gt;Have you downloaded the WinFX SDK? I remember seeing some typed messaging samples in Indigo. So I'd say most of your argument is irrelevant.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14886</id><published>2005-09-18T07:13:00.0-05:00</published><updated>2005-09-18T07:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PDC 2005</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>52532</id><published>2008-08-18T07:44:25.0-05:00</published><updated>2008-08-18T07:44:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Can your name be a trademark? : South Florida Artist Entrepreneurs</title><content type="html">Pingback from  Can your name be a trademark? : South Florida Artist Entrepreneurs</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14758"></thr:in-reply-to></entry><entry><id>14810</id><published>2005-09-14T08:07:00.0-05:00</published><updated>2005-09-14T08:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What Matters to Mort at the PDC?</title><content type="html">&lt;div&gt;The &lt;a href="http://msdn.microsoft.com/events/pdc/"&gt;PDC&lt;/a&gt; is an incredible whirlwind. If you're a Mort and at the PDC, I need your help. I'm doing a BOF &lt;a href="http://commnet1.microsoftpdc.com/content/sessionview.aspx?TopicID=c6ef8c12-f56d-4701-8582-665dad4dc0a3"&gt;session &lt;/a&gt;for Morts, but there's no way I'll get to all the sessions that might matter to Mort. Here's some things I think we might want to talk about at the BOF:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;ol type="1" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;Office 12, does the Office team finally get it, that they are a platform for Mort?&lt;/li&gt;
&lt;li&gt;Avalon, do you think we'll be using any of that glitzy stuff in IT apps?&lt;/li&gt;
&lt;li&gt;Workflow, can Microsoft get this one right? (I'm attending mostly of the workflow sessions today)&lt;/li&gt;
&lt;li&gt;Visual Basic, looking ahead at VB9, does LINQ and the other enhancements turn you on? Would it make you give up C# (if you went that way when you migrated to .NET)?&lt;/li&gt;
&lt;li&gt;Indigo, um… I'll let somebody else talk about that, I've had my say.&lt;/li&gt;
&lt;li&gt;What am I missing?&lt;/li&gt;&lt;/ol&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;If you have ideas about what matters to Mort, post them in the comments or catch up with me at the PDC. I'll be in a PluralSight shirt (but remember, I'm not an employee, just a very satisfied customer).&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>2</thr:total></entry><entry><id>14821</id><published>2005-09-14T19:00:00.0-05:00</published><updated>2005-09-14T19:00:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What Matters to Mort at the PDC?</title><content type="html">Why would you switch from C#, assuming you went  in that direction?  C# actually already has (in Whidbey) some of the features slated for VB9 (nullable types, relaxed delegates) and will also fully support the new query syntax, lambda expressions, type inference ("var") and object literal notation in its next release.  Are there any features exclusive to VB9 (other than the traditional advantages for late-binding/COM invocation)?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14810"></thr:in-reply-to></entry><entry><id>14827</id><published>2005-09-15T08:57:00.0-05:00</published><updated>2005-09-15T08:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What Matters to Mort at the PDC?</title><content type="html">A simple feature comparision doesn't do justice to the increasing differences in the two languages. If you look closely at how the features are incorporated into the languages you can see a very interesting trend. I'll post a longer analysis a little later. I'm in Paul Vick's VB Futures talk right now.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="14810"></thr:in-reply-to></entry><entry><id>14972</id><published>2005-09-22T07:39:00.0-05:00</published><updated>2005-09-22T07:39:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">We interrupt our regularly scheduled blogging …</title><content type="html">to evacuate the Houston area. I've temporarily relocated to the Dallas area and will be participating in disaster recovery operations for my day job. Blogging will take a back seat for awhile.</content><author><name>john-cavnar-johnson</name></author></entry><entry><id>17978</id><published>2006-01-12T13:54:00.0-05:00</published><updated>2006-01-12T13:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How to build a distributed application: Preface</title><content type="html">&lt;div&gt;With this post, I'm starting a series of blog entries describing how a distributed application should be built. I'm not making any claims that how I build distributed application is the only way, or even the best way. Instead, I'm trying to do what I described in my &lt;a href="http://pluralsight.com/blogs/johncj/archive/2005/04/29/7859.aspx"&gt;initial&lt;/a&gt; post on this site: Create a context in which people can think about building distributed applications.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;There are two distinct ways to think about a "How-To" approach. One is to focus on the architecture and design of distributed applications. The other is to focus on the process for building distributed applications. I plan to focus on both aspects of the "How-To" because I've come to understand that they are fundamentally related. In fact, I use the same underlying mental model for both (more on that a little later).&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;One thing that's clearly true about distributed systems design and the software development lifecycle is that they are both primarily realized through a collection of "best practices" rather than as an expression of any coherent theoretical foundation. The best information available in both domains comes from the experience of successful practitioners. Unfortunately, it is often difficult to distinguish which practices really contributed to success and which were merely incidental. Moreover, advancing the state of the art becomes both tedious and risky. Without a theoretical framework to guide us, we stumble around in the dark looking for ways to improve our efforts.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;In an effort to shed some light on these topics, I'm going to put forth a model that will serve as unifying model for discussing how we build distributed applications. As always, your feedback is welcomed.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>5</thr:total></entry><entry><id>17980</id><published>2006-01-12T12:09:00.0-05:00</published><updated>2006-01-12T12:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Preface</title><content type="html">Nice to see you back.  I am looking forward to the How-To!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17978"></thr:in-reply-to></entry><entry><id>18046</id><published>2006-01-15T19:33:00.0-05:00</published><updated>2006-01-15T19:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Preface</title><content type="html">I've been patiently waiting for your return and now I'd like to second Rob's "welcome back". Look forward for your postings.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17978"></thr:in-reply-to></entry><entry><id>18082</id><published>2006-01-17T07:02:00.0-05:00</published><updated>2006-01-17T07:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Preface</title><content type="html">Got word from J Skelly that you were starting a thread on this topic.
&lt;br /&gt;
&lt;br /&gt;Looking forward to read this!
&lt;br /&gt;
&lt;br /&gt;Tony G!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17978"></thr:in-reply-to></entry><entry><id>22115</id><published>2006-04-19T13:46:00.0-05:00</published><updated>2006-04-19T13:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Preface</title><content type="html">hello pleaze tell me what is distirbuted application and how can i build distributed application
&lt;br /&gt;thanks </content><author><name>Anonymous</name></author><thr:in-reply-to ref="17978"></thr:in-reply-to></entry><entry><id>23518</id><published>2006-05-14T16:40:00.0-05:00</published><updated>2006-05-14T16:40:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Preface</title><content type="html">Sounds interesting...will be following</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17978"></thr:in-reply-to></entry><entry><id>18137</id><published>2006-01-19T16:06:00.0-05:00</published><updated>2006-01-19T16:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How to build a distributed application: Introduction</title><content type="html">&lt;div&gt;If you set out to devise a theoretical framework for both the design of distributed applications and the process of building distributed applications, it seems unlikely that you would base it on a theory for armed conflict. Even though we may talk of "death march" projects, I've never experienced any real life or death struggles in the world of software development. And yet, I've come to use &lt;a href="http://www.d-n-i.net/fcs/ppt/boyds_ooda_loop.ppt"&gt;Col. John Boyd's OODA loop&lt;/a&gt; as my framework for how to build a distributed application (this will seem doubly ironic to those folks who know me well). Boyd had a laser-like focus on destroying the enemy in the most efficient manner possible by improving "our" OODA loop while disrupting "their" OODA loop. In software development, there is no "them" (even if we developers, in fits of extreme perversity, sometimes think that our customers or the system administrators are enemies). I use the OODA loop with a completely inward perspective. That is, I use it as a measure of how well my team or application is working.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&lt;font size="4"&gt;&lt;strong&gt;What is the OODA Loop?&lt;/strong&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;&lt;font size="4"&gt;&lt;/font&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt; &lt;img src="http://wse20.cavnar-johnson.net/oodaloop.jpg" /&gt;&lt;/div&gt;
&lt;div&gt;A complete discussion of the OODA loop is well beyond the scope of this blog, but Boyd's fundamental thesis was that the quicker you iterate through the loop, the more effective you become. The most common misimpression is that his thesis is simply about speed. To the contrary, the real key to understanding the loop is that quicker iterations come primarily by combining an initially accurate orientation, which allows you to favor implicit guidance and control (the thick green arrows in the diagram above) over explicit decision-making, with the flexibility to accommodate changes in your orientation based on observation. Automated unit testing makes a good example from the world of software development. Many developers believe that writing unit test will inevitably slow them down. If you take a static view of the process, this seems obvious:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;production code + unit tests &amp;gt; production code&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;But once you experience developing with effective unit testing, you realize that you can actually write better code faster. In OODA loop terms, you've made the creation of unit tests part of your Orientation ("requirements") phase. Each time you make changes to your code, you run the whole set of unit tests (this is implicit guidance and control) and you can observe whether the changes have adversely affected your conformance to spec (red light/green light). You gain the ability to tighten your coding loop which, in turn, leads to an overall decrease in the amount of time it takes to deliver the right code.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Another way to look at this diagram is to use it to model the architecture of a distributed application. In this view, the decision diamond represents a user decision, the "implicit guidance &amp;amp; control" boxes represent application logic, "outside information" represents external system inputs, and orientation represents application state. I suspect trying to visualize a distributed application this way will be very disorienting to most application architects and developers because it is initially very difficult to relate this view to our normal mental constructs for application design. I find it extremely useful, because by concentrating on designing applications that can speed up this OODA loop, I can discover application patterns and techniques that provide more effective business process automation. Using this model leads directly to distributed applications that are, in today's parlance, service oriented.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;&lt;font size="4"&gt;&lt;strong&gt;Where do we go from here?&lt;/strong&gt;&lt;/font&gt;&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;This post is designed to lay the groundwork for a series of posts that will translate this somewhat esoteric theoretical framework into practical advice. Before I write those posts, I'm interested in some specific feedback. Would you like me to explain more about the OODA loop and how it's commonly used outside of software development? Do the examples I used make any sense at all to anyone besides me? Does anybody think it's important to a theoretical framework for building distributed applications (whether or not you think mine's full of hot air)?&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>107</thr:total></entry><entry><id>18138</id><published>2006-01-19T14:46:00.0-05:00</published><updated>2006-01-19T14:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Introduction</title><content type="html">Can't see the image John.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>18139</id><published>2006-01-19T14:49:00.0-05:00</published><updated>2006-01-19T14:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Introduction</title><content type="html">I've fixed it now. Let me know if it still doesn't work.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>18140</id><published>2006-01-19T14:54:00.0-05:00</published><updated>2006-01-19T14:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Introduction</title><content type="html">John
&lt;br /&gt;
&lt;br /&gt;My 2c.
&lt;br /&gt;I'm pretty happy with the OODA description and don't feel that more examples will add much.
&lt;br /&gt;As far as frameworks go, I think that they are a bit like opinions - everybody has one.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>18327</id><published>2006-01-28T15:19:00.0-05:00</published><updated>2006-01-28T15:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Introduction</title><content type="html">I agree with Rob. Before you go into the OODA description, can you please describe what other frameworks you considered and why you found them lacking? </content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>25478</id><published>2006-05-26T23:46:00.0-05:00</published><updated>2006-05-26T23:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Consideration after building a distributed application</title><content type="html">Distributed application is great when you are creating software for more than one user and they will use it at different location. OODA is nice flowcharting showing the flow of data. Security is major concern in distributed application.  </content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>76249</id><published>2010-04-25T12:35:54.0-05:00</published><updated>2010-04-25T12:35:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">black creators on the list | Pressure Cooker Accessories</title><content type="html">Pingback from  black creators on the list | Pressure Cooker Accessories</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77228</id><published>2010-05-20T15:32:12.0-05:00</published><updated>2010-05-20T15:32:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Caprice Sale Impala 1959 Chevy, 1967 Impala Sales</title><content type="html">Pingback from  Caprice Sale Impala 1959 Chevy, 1967 Impala Sales</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77306</id><published>2010-05-20T16:35:23.0-05:00</published><updated>2010-05-20T16:35:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Oldsmobile Lss Heater Core, 1996 Oldsmobile Lss Used Parts</title><content type="html">Pingback from  Oldsmobile Lss Heater Core, 1996 Oldsmobile Lss Used Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77464</id><published>2010-05-20T18:23:27.0-05:00</published><updated>2010-05-20T18:23:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford E 250 F350 Performance, C2500 Installation Chevrolet Uplander</title><content type="html">Pingback from  Ford E 250 F350 Performance, C2500 Installation Chevrolet Uplander</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77477</id><published>2010-05-20T18:29:57.0-05:00</published><updated>2010-05-20T18:29:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">500sel Price 1992 Mercedes Miles, 500sel Replacement Commercial</title><content type="html">Pingback from  500sel Price 1992 Mercedes Miles, 500sel Replacement Commercial</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77546</id><published>2010-05-20T19:19:39.0-05:00</published><updated>2010-05-20T19:19:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sable Form, Sable Oem Car Ipod Dock</title><content type="html">Pingback from  Sable Form, Sable Oem Car Ipod Dock</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77769</id><published>2010-05-20T22:47:55.0-05:00</published><updated>2010-05-20T22:47:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sc400 Bulb Lexus Gs400 Xenon Hid, Mdras40ex Stereo Headphones</title><content type="html">Pingback from  Sc400 Bulb Lexus Gs400 Xenon Hid, Mdras40ex Stereo Headphones</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77772</id><published>2010-05-20T22:49:30.0-05:00</published><updated>2010-05-20T22:49:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Auction Infiniti M30, Sierra 2500 Specifications 2009 Gmc Crew Cab</title><content type="html">Pingback from  Auction Infiniti M30, Sierra 2500 Specifications 2009 Gmc Crew Cab</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>77899</id><published>2010-05-21T00:01:53.0-05:00</published><updated>2010-05-21T00:01:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Granada Emblem Area, Versailles Parts Ford Granada Rear Axle</title><content type="html">Pingback from  Granada Emblem Area, Versailles Parts Ford Granada Rear Axle</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>78015</id><published>2010-05-21T01:16:56.0-05:00</published><updated>2010-05-21T01:16:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Car Dachshund 240z 260z 280z, 260z Sheet Music Datsun 240z Truck</title><content type="html">Pingback from  Car Dachshund 240z 260z 280z, 260z Sheet Music Datsun 240z Truck</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>78110</id><published>2010-05-21T02:10:40.0-05:00</published><updated>2010-05-21T02:10:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Boiler 2006 Acura Rsx Manual Transmission, &amp;lt;B&amp;gt;RSX&amp;lt;/B&amp;gt; &amp;lt;B&amp;gt;HEADLIGHT&amp;lt;/B&amp;gt;</title><content type="html">Pingback from  Boiler 2006 Acura Rsx Manual Transmission, &lt;b&gt;RSX&lt;/b&gt; &lt;b&gt;HEADLIGHT&lt;/b&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>78123</id><published>2010-05-21T02:16:34.0-05:00</published><updated>2010-05-21T02:16:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1977 Datsun 280z Parts S30, Pulsar Sale Xterra Rebates Nissan 280zx</title><content type="html">Pingback from  1977 Datsun 280z Parts S30, Pulsar Sale Xterra Rebates Nissan 280zx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>78337</id><published>2010-05-21T04:21:40.0-05:00</published><updated>2010-05-21T04:21:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Entourage Sending Problems, Hotmail Entourage Mac</title><content type="html">Pingback from  Entourage Sending Problems, Hotmail Entourage Mac</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>78483</id><published>2010-05-21T05:46:46.0-05:00</published><updated>2010-05-21T05:46:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Oakley Dart Polarized Sunglasses, 1967 Dodge Dart Brochure</title><content type="html">Pingback from  Oakley Dart Polarized Sunglasses, 1967 Dodge Dart Brochure</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>78808</id><published>2010-05-21T14:05:22.0-05:00</published><updated>2010-05-21T14:05:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1976 Jeep Cj7 Renegade, Cars 1980 Jeep Cj7 Mechanics</title><content type="html">Pingback from  1976 Jeep Cj7 Renegade, Cars 1980 Jeep Cj7 Mechanics</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>79250</id><published>2010-05-21T18:54:02.0-05:00</published><updated>2010-05-21T18:54:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pb25 Cast Free, Pb25 Series Movie</title><content type="html">Pingback from  Pb25 Cast Free, Pb25 Series Movie</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>79335</id><published>2010-05-21T19:42:05.0-05:00</published><updated>2010-05-21T19:42:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Montego Pt 1969 Mercury Cyclone Spoiler, Online Mercury Montego</title><content type="html">Pingback from  Montego Pt 1969 Mercury Cyclone Spoiler, Online Mercury Montego</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>79882</id><published>2010-05-22T02:38:39.0-05:00</published><updated>2010-05-22T02:38:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ranchero Transmission Ford Falcon, 1998 Ford E 250 Mileage</title><content type="html">Pingback from  Ranchero Transmission Ford Falcon, 1998 Ford E 250 Mileage</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80604</id><published>2010-05-22T08:59:30.0-05:00</published><updated>2010-05-22T08:59:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">745li Oem Interior New Bmw, Ptt 745li Videos</title><content type="html">Pingback from  745li Oem Interior New Bmw, Ptt 745li Videos</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80697</id><published>2010-05-22T09:45:04.0-05:00</published><updated>2010-05-22T09:45:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Absolute Minimum Excel, Excel Tips Time Formulas</title><content type="html">Pingback from  Absolute Minimum Excel, Excel Tips Time Formulas</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80827</id><published>2010-05-22T10:53:09.0-05:00</published><updated>2010-05-22T10:53:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E325 Bulb Mercedes Benz 300td, 300td Amazon</title><content type="html">Pingback from  E325 Bulb Mercedes Benz 300td, 300td Amazon</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80876</id><published>2010-05-22T11:23:41.0-05:00</published><updated>2010-05-22T11:23:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Garmin 7200 Xm Navtraffic, 720 Pickup Free Salvage Yards</title><content type="html">Pingback from  Garmin 7200 Xm Navtraffic, 720 Pickup Free Salvage Yards</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80877</id><published>2010-05-22T11:24:07.0-05:00</published><updated>2010-05-22T11:24:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2001 Toyota Solara Sle Mpg, 2000 Camry Solara Overview</title><content type="html">Pingback from  2001 Toyota Solara Sle Mpg, 2000 Camry Solara Overview</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80943</id><published>2010-05-22T11:58:08.0-05:00</published><updated>2010-05-22T11:58:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Powerbilt Dynasty Fairway Woods Forged Aluminum, 1988 Dodge Dynasty Parts Wiper Blade</title><content type="html">Pingback from  Powerbilt Dynasty Fairway Woods Forged Aluminum, 1988 Dodge Dynasty Parts Wiper Blade</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80959</id><published>2010-05-22T12:05:47.0-05:00</published><updated>2010-05-22T12:05:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy C36 C3500 Pickup S15 Jimmy, C3500 Episode Make Your Own</title><content type="html">Pingback from  Buy C36 C3500 Pickup S15 Jimmy, C3500 Episode Make Your Own</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>80994</id><published>2010-05-22T12:24:49.0-05:00</published><updated>2010-05-22T12:24:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cx7 Headlights, Mazda Cx7 Used</title><content type="html">Pingback from  Cx7 Headlights, Mazda Cx7 Used</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81044</id><published>2010-05-22T12:50:28.0-05:00</published><updated>2010-05-22T12:50:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Windstar Discount Wind Spirit Caribbean, Ford Windstar Headlight Adjustment Catalytic Converter</title><content type="html">Pingback from  Windstar Discount Wind Spirit Caribbean, Ford Windstar Headlight Adjustment Catalytic Converter</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81086</id><published>2010-05-22T13:11:05.0-05:00</published><updated>2010-05-22T13:11:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pb200 Parts Discount Plymouth, Sale Pb200 Ultrasonic</title><content type="html">Pingback from  Pb200 Parts Discount Plymouth, Sale Pb200 Ultrasonic</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81213</id><published>2010-05-22T14:15:01.0-05:00</published><updated>2010-05-22T14:15:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Campmobile Part Vw Repair Estimates, Volkswagen Campmobile Light Bulb</title><content type="html">Pingback from  Campmobile Part Vw Repair Estimates, Volkswagen Campmobile Light Bulb</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81295</id><published>2010-05-22T14:53:28.0-05:00</published><updated>2010-05-22T14:53:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cheap 262 Latest, Flugf?hige Fw 190 Me 262</title><content type="html">Pingback from  Cheap 262 Latest, Flugf?hige Fw 190 Me 262</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81330</id><published>2010-05-22T15:09:57.0-05:00</published><updated>2010-05-22T15:09:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Eldorado Carspace Automotive Forums, 1995 Cadillac Eldorado Msrp</title><content type="html">Pingback from  Eldorado Carspace Automotive Forums, 1995 Cadillac Eldorado Msrp</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81467</id><published>2010-05-22T16:19:38.0-05:00</published><updated>2010-05-22T16:19:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Oem 230sl 250sl 280sl, Aftermarket Car Mercedes Benz 280sl</title><content type="html">Pingback from  Oem 230sl 250sl 280sl, Aftermarket Car Mercedes Benz 280sl</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81471</id><published>2010-05-22T16:20:47.0-05:00</published><updated>2010-05-22T16:20:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">420sel Stop, 420sel Model Store</title><content type="html">Pingback from  420sel Stop, 420sel Model Store</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81773</id><published>2010-05-22T18:51:07.0-05:00</published><updated>2010-05-22T18:51:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Kx450f Pro Circuit, Ford E 450 Econoline Super Duty Stripped Used</title><content type="html">Pingback from  Kx450f Pro Circuit, Ford E 450 Econoline Super Duty Stripped Used</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81812</id><published>2010-05-22T19:09:46.0-05:00</published><updated>2010-05-22T19:09:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cougar For Sale In Michigan Mercury Montego, 1967 Cougar Aftermarket Parts</title><content type="html">Pingback from  Cougar For Sale In Michigan Mercury Montego, 1967 Cougar Aftermarket Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>81968</id><published>2010-05-22T20:29:19.0-05:00</published><updated>2010-05-22T20:29:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Fx35 Performance Parts Billet Grilles Interior Accessories, Samurai Warriors 3 Poll</title><content type="html">Pingback from  Fx35 Performance Parts Billet Grilles Interior Accessories, Samurai Warriors 3 Poll</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82060</id><published>2010-05-22T21:14:48.0-05:00</published><updated>2010-05-22T21:14:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dodge D200 Aftermarket Grand Caravan, Body Nikon D200</title><content type="html">Pingback from  Dodge D200 Aftermarket Grand Caravan, Body Nikon D200</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82100</id><published>2010-05-22T21:33:21.0-05:00</published><updated>2010-05-22T21:33:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Clk500 Parts Club, Replacement Laptop Compaq Presario V3500 - 477.jordanbrandallamerican.com</title><content type="html">Pingback from  Clk500 Parts Club, Replacement Laptop Compaq Presario V3500 - 477.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82363</id><published>2010-05-22T23:44:52.0-05:00</published><updated>2010-05-22T23:44:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Last Minute Chrysler Fifth Avenue, 1985 Chrysler Fifth Avenue For Sale Vehicles - 314.ja3ra.com</title><content type="html">Pingback from  Last Minute Chrysler Fifth Avenue, 1985 Chrysler Fifth Avenue For Sale Vehicles - 314.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82390</id><published>2010-05-22T23:57:24.0-05:00</published><updated>2010-05-22T23:57:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Millenia Factory Manual Mazda Rx7, 1988 Rx 7 Alternator Mazda Rx7 - 155.unlockiphone30.net</title><content type="html">Pingback from  Millenia Factory Manual Mazda Rx7, 1988 Rx 7 Alternator Mazda Rx7 - 155.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82447</id><published>2010-05-23T00:27:17.0-05:00</published><updated>2010-05-23T00:27:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Clk350 Parts 2006 Mercedes Drive Shaft, Sell Clk350 Dealers - 386.akemet.com</title><content type="html">Pingback from  Clk350 Parts 2006 Mercedes Drive Shaft, Sell Clk350 Dealers - 386.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82600</id><published>2010-05-23T01:41:48.0-05:00</published><updated>2010-05-23T01:41:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Xg350 Cheap New Hyundai, 350sl Discount Car Parts Cl55 Amg - 360.eumreborn.com</title><content type="html">Pingback from  Xg350 Cheap New Hyundai, 350sl Discount Car Parts Cl55 Amg - 360.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82612</id><published>2010-05-23T01:47:33.0-05:00</published><updated>2010-05-23T01:47:33.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dodge Viper Brochure Download, Auction Dodge Ram Van B1500 Cars - 479.tijuanareader.com</title><content type="html">Pingback from  Dodge Viper Brochure Download, Auction Dodge Ram Van B1500 Cars - 479.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82620</id><published>2010-05-23T01:51:16.0-05:00</published><updated>2010-05-23T01:51:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Download Starion Parts, Mitsubishi Starion Part Engines Head Gasket Set - 105.tvshowzone.com</title><content type="html">Pingback from  Download Starion Parts, Mitsubishi Starion Part Engines Head Gasket Set - 105.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82714</id><published>2010-05-23T02:30:59.0-05:00</published><updated>2010-05-23T02:30:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1 Used Motor 2003 Saturn L300, L300 Bulb Headlight Saturn Lw200 - 171.animejin.com</title><content type="html">Pingback from  1 Used Motor 2003 Saturn L300, L300 Bulb Headlight Saturn Lw200 - 171.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82734</id><published>2010-05-23T02:41:05.0-05:00</published><updated>2010-05-23T02:41:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lexus Es350 Radiator Auto Parts, Lexus Es350 Engine Plastic - 128.codebluehacks.org</title><content type="html">Pingback from  Lexus Es350 Radiator Auto Parts, Lexus Es350 Engine Plastic - 128.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>82864</id><published>2010-05-23T03:44:47.0-05:00</published><updated>2010-05-23T03:44:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">War Conquest Of Granada, Conquest Buy Dodge Ramcharger - 193.luna-atra.net</title><content type="html">Pingback from  War Conquest Of Granada, Conquest Buy Dodge Ramcharger - 193.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83037</id><published>2010-05-23T05:09:26.0-05:00</published><updated>2010-05-23T05:09:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Mercury Tracer Starter, Tracer Lighting Price - 391.eumreborn.com</title><content type="html">Pingback from  Mercury Tracer Starter, Tracer Lighting Price - 391.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83169</id><published>2010-05-23T06:08:43.0-05:00</published><updated>2010-05-23T06:08:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy J2000 Quad Band Dual Sim, J2000 Used Chevrolet Astro 1988 Pontiac Sunbird - 499.renters.ws</title><content type="html">Pingback from  Buy J2000 Quad Band Dual Sim, J2000 Used Chevrolet Astro 1988 Pontiac Sunbird - 499.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83186</id><published>2010-05-23T06:15:45.0-05:00</published><updated>2010-05-23T06:15:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Promotion 300d 16v, 300d Optical Viewfinder - 278.binggreen.com</title><content type="html">Pingback from  Promotion 300d 16v, 300d Optical Viewfinder - 278.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83211</id><published>2010-05-23T06:27:34.0-05:00</published><updated>2010-05-23T06:27:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cordia Lighting, Cordia Taillight Buy - 463.jeepsunlimted.com</title><content type="html">Pingback from  Cordia Lighting, Cordia Taillight Buy - 463.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83275</id><published>2010-05-23T06:54:25.0-05:00</published><updated>2010-05-23T06:54:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">330xi E90, 330xi Find 6 Cylinder Engine - 2.jeepsunlimted.com</title><content type="html">Pingback from  330xi E90, 330xi Find 6 Cylinder Engine - 2.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83307</id><published>2010-05-23T07:08:41.0-05:00</published><updated>2010-05-23T07:08:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Celica Supra Engine Fel Pro, Supra Aftermarket Air Intake Systems - 449.defutbolazo.com</title><content type="html">Pingback from  Celica Supra Engine Fel Pro, Supra Aftermarket Air Intake Systems - 449.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83319</id><published>2010-05-23T07:14:53.0-05:00</published><updated>2010-05-23T07:14:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy Chevrolet Malibu 30 Mpg Cobalt Xfe, 2007 Chevy Malibu Review - 174.binggreen.com</title><content type="html">Pingback from  Buy Chevrolet Malibu 30 Mpg Cobalt Xfe, 2007 Chevy Malibu Review - 174.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83628</id><published>2010-05-24T04:17:28.0-05:00</published><updated>2010-05-24T04:17:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">I35 Ex35 Qx4 Used Infiniti G37, Headlight 1999 I30 Fits 2000 Infiniti Qx4 - 185.animejin.com</title><content type="html">Pingback from  I35 Ex35 Qx4 Used Infiniti G37, Headlight 1999 I30 Fits 2000 Infiniti Qx4 - 185.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83661</id><published>2010-05-24T04:33:49.0-05:00</published><updated>2010-05-24T04:33:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1996 Bronco Specs Eddie Bauer, Garmont Bronco Hiking Boot - 362.tgrconversions.com</title><content type="html">Pingback from  1996 Bronco Specs Eddie Bauer, Garmont Bronco Hiking Boot - 362.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83781</id><published>2010-05-24T05:30:17.0-05:00</published><updated>2010-05-24T05:30:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Hhr Engineering Twin Turbo Kit, Chevrolet Hhr Engine Floor Mats - 206.binggreen.com</title><content type="html">Pingback from  Hhr Engineering Twin Turbo Kit, Chevrolet Hhr Engine Floor Mats - 206.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83820</id><published>2010-05-24T05:48:50.0-05:00</published><updated>2010-05-24T05:48:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Prius Price Specs, Toyota Prius Safety - 153.renters.ws</title><content type="html">Pingback from  Prius Price Specs, Toyota Prius Safety - 153.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83852</id><published>2010-05-24T06:04:36.0-05:00</published><updated>2010-05-24T06:04:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1980 Mercedes 350sl, 380slc Diagram 350sl - 459.an74.com</title><content type="html">Pingback from  1980 Mercedes 350sl, 380slc Diagram 350sl - 459.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83892</id><published>2010-05-24T06:23:07.0-05:00</published><updated>2010-05-24T06:23:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">L300 3 Headlight Eastern Oe, Discount 2007 Saturn L300 - 412.animejin.com</title><content type="html">Pingback from  L300 3 Headlight Eastern Oe, Discount 2007 Saturn L300 - 412.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>83909</id><published>2010-05-24T06:30:43.0-05:00</published><updated>2010-05-24T06:30:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Clk550 Class Car, Clk550 Installation Brushed Cotton - 377.dlmreza.net</title><content type="html">Pingback from  Clk550 Class Car, Clk550 Installation Brushed Cotton - 377.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84367</id><published>2010-05-24T10:02:35.0-05:00</published><updated>2010-05-24T10:02:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1040 Fifth Avenue New York City, 1983 Chrysler Fifth Parts Avenue Fender - 198.myipgirl.com</title><content type="html">Pingback from  1040 Fifth Avenue New York City, 1983 Chrysler Fifth Parts Avenue Fender - 198.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84454</id><published>2010-05-24T10:41:54.0-05:00</published><updated>2010-05-24T10:41:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Mark V Part Shock Absorber Lincoln Town Car, Rent A Mercedes Benz Cape Town - 435.1fh.org</title><content type="html">Pingback from  Mark V Part Shock Absorber Lincoln Town Car, Rent A Mercedes Benz Cape Town - 435.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84475</id><published>2010-05-24T10:51:02.0-05:00</published><updated>2010-05-24T10:51:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sl320 Zone Auto, 300sd Parts Buy Shock Absorber Mercedes Sl320 - 322.rkwrh.com</title><content type="html">Pingback from  Sl320 Zone Auto, 300sd Parts Buy Shock Absorber Mercedes Sl320 - 322.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84586</id><published>2010-05-24T11:43:42.0-05:00</published><updated>2010-05-24T11:43:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Hhr Price Quotes Chevrolet Aveo5, Aveo Part Discount - 477.unlockiphone30.net</title><content type="html">Pingback from  Hhr Price Quotes Chevrolet Aveo5, Aveo Part Discount - 477.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84595</id><published>2010-05-24T11:47:52.0-05:00</published><updated>2010-05-24T11:47:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Saratoga Dry Socket, Saratoga Used Pt Cruiser 1951 Chrysler - 261.myipgirl.com</title><content type="html">Pingback from  Saratoga Dry Socket, Saratoga Used Pt Cruiser 1951 Chrysler - 261.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84735</id><published>2010-05-24T12:59:47.0-05:00</published><updated>2010-05-24T12:59:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pinto Bean Soup Calories, Pinto Buy Used - 47.jeepsunlimted.com</title><content type="html">Pingback from  Pinto Bean Soup Calories, Pinto Buy Used - 47.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84737</id><published>2010-05-24T13:01:38.0-05:00</published><updated>2010-05-24T13:01:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Hyundai Accent Rotor Replacement Timing Belt, Engine 2006 Accent Hyundai Xg350 - 376.jordanbrandallamerican.com</title><content type="html">Pingback from  Hyundai Accent Rotor Replacement Timing Belt, Engine 2006 Accent Hyundai Xg350 - 376.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84784</id><published>2010-05-24T13:24:55.0-05:00</published><updated>2010-05-24T13:24:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Zephyr Font, Ls Continental Mkx Lincoln Zephyr For Sale - 337.mfbattle.com</title><content type="html">Pingback from  Zephyr Font, Ls Continental Mkx Lincoln Zephyr For Sale - 337.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84790</id><published>2010-05-24T13:27:45.0-05:00</published><updated>2010-05-24T13:27:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">D300 Price Photo Digital Slr, Ikelite D300 Review - 100.computeronlinebingo.com</title><content type="html">Pingback from  D300 Price Photo Digital Slr, Ikelite D300 Review - 100.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84794</id><published>2010-05-24T13:29:22.0-05:00</published><updated>2010-05-24T13:29:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gmc C35 C3500 Pickup Aftermarket Dana 60 Front Axle Chevrolet Chevy, C36 C3500 Silverado Radiator Fan - 206.tgrconversions.com</title><content type="html">Pingback from  Gmc C35 C3500 Pickup Aftermarket Dana 60 Front Axle Chevrolet Chevy, C36 C3500 Silverado Radiator Fan - 206.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>84957</id><published>2010-05-24T14:45:48.0-05:00</published><updated>2010-05-24T14:45:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Kingswood Auto Trader, Kingswood Shop - 17.codebluehacks.org</title><content type="html">Pingback from  Kingswood Auto Trader, Kingswood Shop - 17.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85064</id><published>2010-05-24T15:40:03.0-05:00</published><updated>2010-05-24T15:40:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">D50 Rating, D50 Diabetes Blood Pressure Hypertension - 25.akemet.com</title><content type="html">Pingback from  D50 Rating, D50 Diabetes Blood Pressure Hypertension - 25.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85198</id><published>2010-05-24T16:50:15.0-05:00</published><updated>2010-05-24T16:50:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Yamaha Tsx 130 Price, Acura Tsx Body Kits Accord - 118.tijuanareader.com</title><content type="html">Pingback from  Yamaha Tsx 130 Price, Acura Tsx Body Kits Accord - 118.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85210</id><published>2010-05-24T16:56:31.0-05:00</published><updated>2010-05-24T16:56:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1500 2003 Chevrolet Silverado High Performance, Sierra 1500 Hd Apartments Gmc Yukon Xl - 82.eumreborn.com</title><content type="html">Pingback from  1500 2003 Chevrolet Silverado High Performance, Sierra 1500 Hd Apartments Gmc Yukon Xl - 82.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85255</id><published>2010-05-24T17:19:23.0-05:00</published><updated>2010-05-24T17:19:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Aerostar Promotion Buy, E 350 Club Wagon Episode Ford Aerostar - 201.1fh.org</title><content type="html">Pingback from  Aerostar Promotion Buy, E 350 Club Wagon Episode Ford Aerostar - 201.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85306</id><published>2010-05-24T17:52:41.0-05:00</published><updated>2010-05-24T17:52:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Mercedes Benz Clk320 Cabriolet Dual Zone, Second Hand Clk Cabriolet - 72.renters.ws</title><content type="html">Pingback from  Mercedes Benz Clk320 Cabriolet Dual Zone, Second Hand Clk Cabriolet - 72.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85404</id><published>2010-05-24T18:47:52.0-05:00</published><updated>2010-05-24T18:47:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Repair Highlander, 2007 Suzuki Xl 7 Chevrolet Equinox Toyota Highlander - 285.ja3ra.com</title><content type="html">Pingback from  Repair Highlander, 2007 Suzuki Xl 7 Chevrolet Equinox Toyota Highlander - 285.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85549</id><published>2010-05-24T22:34:12.0-05:00</published><updated>2010-05-24T22:34:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Perfecto Sedona Aquarium, Kia Sedona Repair Books - 477.defutbolazo.com</title><content type="html">Pingback from  Perfecto Sedona Aquarium, Kia Sedona Repair Books - 477.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85778</id><published>2010-05-25T00:23:31.0-05:00</published><updated>2010-05-25T00:23:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">500sl Spoiler, 2006 Mercedes Benz 500sl Miles Cd Changer - 129.eumreborn.com</title><content type="html">Pingback from  500sl Spoiler, 2006 Mercedes Benz 500sl Miles Cd Changer - 129.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85956</id><published>2010-05-25T01:47:46.0-05:00</published><updated>2010-05-25T01:47:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1985 442 For Sale Oldsmobile, Oldsmobile Salon Promotion Cutlass Supreme - 447.eumreborn.com</title><content type="html">Pingback from  1985 442 For Sale Oldsmobile, Oldsmobile Salon Promotion Cutlass Supreme - 447.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>85986</id><published>2010-05-25T02:03:49.0-05:00</published><updated>2010-05-25T02:03:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1964 Chevrolet Brookwood, Chevrolet Brookwood Bulb Bean - 141.computeronlinebingo.com</title><content type="html">Pingback from  1964 Chevrolet Brookwood, Chevrolet Brookwood Bulb Bean - 141.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>86237</id><published>2010-05-25T04:12:25.0-05:00</published><updated>2010-05-25T04:12:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E250 Part Auto, Sansa E250 Mp3 Player 2gb Manual - 374.unlockiphone30.net</title><content type="html">Pingback from  E250 Part Auto, Sansa E250 Mp3 Player 2gb Manual - 374.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>86436</id><published>2010-05-25T10:44:40.0-05:00</published><updated>2010-05-25T10:44:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevy Tahoe Full Size Suv Need, Chevy Tahoe Hybrid Deals - 99.rkwrh.com</title><content type="html">Pingback from  Chevy Tahoe Full Size Suv Need, Chevy Tahoe Hybrid Deals - 99.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>86633</id><published>2010-05-25T12:21:02.0-05:00</published><updated>2010-05-25T12:21:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Garmin Nuvi 265 Gps System, 265 Bypass Humidifier Honeywell He265h8908 - 128.jordanbrandallamerican.com</title><content type="html">Pingback from  Garmin Nuvi 265 Gps System, 265 Bypass Humidifier Honeywell He265h8908 - 128.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>86959</id><published>2010-05-25T15:01:07.0-05:00</published><updated>2010-05-25T15:01:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Amigo Full Rapidshare, 1989 Isuzu Amigo For Sale Owned - 118.an74.com</title><content type="html">Pingback from  Amigo Full Rapidshare, 1989 Isuzu Amigo For Sale Owned - 118.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>87001</id><published>2010-05-25T15:22:41.0-05:00</published><updated>2010-05-25T15:22:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">P16 P1500 Vancouver Bulb, Van Heusen Dresses - 289.jordanbrandallamerican.com</title><content type="html">Pingback from  P16 P1500 Vancouver Bulb, Van Heusen Dresses - 289.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>87239</id><published>2010-05-25T17:28:38.0-05:00</published><updated>2010-05-25T17:28:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Part G500 Oem Amg Wheels, Mercedes Benz G500 Replacement Cls55 Cl55 Amg - 316.unlockiphone30.net</title><content type="html">Pingback from  Part G500 Oem Amg Wheels, Mercedes Benz G500 Replacement Cls55 Cl55 Amg - 316.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>87362</id><published>2010-05-25T18:33:54.0-05:00</published><updated>2010-05-25T18:33:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">F 100 Sale Classifieds Feature, 100.5 Wheels - 121.akemet.com</title><content type="html">Pingback from  F 100 Sale Classifieds Feature, 100.5 Wheels - 121.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>87495</id><published>2010-05-25T19:38:47.0-05:00</published><updated>2010-05-25T19:38:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Problems 1996 Lumina, 1997 Radio Removal 97 Chevy Lumina - 238.akemet.com</title><content type="html">Pingback from  Problems 1996 Lumina, 1997 Radio Removal 97 Chevy Lumina - 238.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>87573</id><published>2010-05-25T20:21:42.0-05:00</published><updated>2010-05-25T20:21:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Triumph Bonneville Headlight Replacement, Trans Sport Wholesale Bonneville Pontiac T1000 - 375.dlmreza.net</title><content type="html">Pingback from  Triumph Bonneville Headlight Replacement, Trans Sport Wholesale Bonneville Pontiac T1000 - 375.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>87575</id><published>2010-05-25T20:22:59.0-05:00</published><updated>2010-05-25T20:22:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bmw 850 Performance Programmer, 850i Part 740i Bmw 323i - 44.luna-atra.net</title><content type="html">Pingback from  Bmw 850 Performance Programmer, 850i Part 740i Bmw 323i - 44.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>88010</id><published>2010-05-27T05:44:56.0-05:00</published><updated>2010-05-27T05:44:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1985 - 1983 @ Matrix Parts Floor Mats Toyota Highlander, Treasure Island Party Ideas Chest - 99.jordanbrandallamerican.com</title><content type="html">Pingback from  1985 - 1983 @ Matrix Parts Floor Mats Toyota Highlander, Treasure Island Party Ideas Chest - 99.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>88059</id><published>2010-05-27T06:23:37.0-05:00</published><updated>2010-05-27T06:23:37.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1999 @ Lx450 Parts Chemical, Lexus Lx450 Removal Wheel - 294.jordanbrandallamerican.com</title><content type="html">Pingback from  2000 - 1999 @ Lx450 Parts Chemical, Lexus Lx450 Removal Wheel - 294.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>88179</id><published>2010-05-27T07:50:46.0-05:00</published><updated>2010-05-27T07:50:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2009 - 1980 @ 1992 Pontiac Bonneville Radiator Engine Oil Cooler, Montana Aftermarket Today Bonneville Pontiac Fiero - 487.computeronlinebingo.com</title><content type="html">Pingback from  2009 - 1980 @ 1992 Pontiac Bonneville Radiator Engine Oil Cooler, Montana Aftermarket Today Bonneville Pontiac Fiero - 487.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>88373</id><published>2010-05-30T17:25:47.0-05:00</published><updated>2010-05-30T17:25:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 1980 @ Corsica Repair, Lots For Sale Corsica - 129.unlockiphone30.net</title><content type="html">Pingback from  1999 - 1980 @ Corsica Repair, Lots For Sale Corsica - 129.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>88638</id><published>2010-05-30T20:47:07.0-05:00</published><updated>2010-05-30T20:47:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1992 - 2001 @ Used Buying 2004 Suzuki Aerio, Free Used Suzuki Aerio - 250.cmanager.org</title><content type="html">Pingback from  1992 - 2001 @ Used Buying 2004 Suzuki Aerio, Free Used Suzuki Aerio - 250.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>88689</id><published>2010-05-30T23:36:54.0-05:00</published><updated>2010-05-30T23:36:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2008 @ Chevrolet Kingswood Gamefaqs, Kingswood Sale 1960 Chevrolet Disc Brakes - 403.tgrconversions.com</title><content type="html">Pingback from  1989 - 2008 @ Chevrolet Kingswood Gamefaqs, Kingswood Sale 1960 Chevrolet Disc Brakes - 403.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>89102</id><published>2010-05-31T13:08:24.0-05:00</published><updated>2010-05-31T13:08:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1993 - 1987 @ Benz Cls63 Amg Part 2010 Mercedes V8 Engine, R63 Parts Cls63 Cl65 Cl63 Amg - 3.animejin.com</title><content type="html">Pingback from  1993 - 1987 @ Benz Cls63 Amg Part 2010 Mercedes V8 Engine, R63 Parts Cls63 Cl65 Cl63 Amg - 3.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>89248</id><published>2010-05-31T14:34:04.0-05:00</published><updated>2010-05-31T14:34:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1990 - 2007 @ Gameboy 450e, Used Logan 450 Blick Art Materials - 67.myipgirl.com</title><content type="html">Pingback from  1990 - 2007 @ Gameboy 450e, Used Logan 450 Blick Art Materials - 67.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>89339</id><published>2010-05-31T15:25:44.0-05:00</published><updated>2010-05-31T15:25:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2009 - 2008 @ Free Shipping Used Lexus Lx450, 500 Truck Body Parts Super Duty F 450 - 122.cmanager.org</title><content type="html">Pingback from  2009 - 2008 @ Free Shipping Used Lexus Lx450, 500 Truck Body Parts Super Duty F 450 - 122.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>95303</id><published>2010-09-18T09:25:57.0-05:00</published><updated>2010-09-18T09:25:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lexus LX450 First Photos | Lexus Pictures</title><content type="html">Pingback from  Lexus LX450 First Photos | Lexus Pictures</content><author><name>Anonymous</name></author><thr:in-reply-to ref="18137"></thr:in-reply-to></entry><entry><id>18474</id><published>2006-01-30T15:18:00.0-05:00</published><updated>2006-01-30T15:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How to build a distributed application: Why Theory Matters</title><content type="html">&lt;div&gt;After looking at the comments on my last post, I have decided to write a few words about why I think it's important to have a theoretical framework for how to build distributed applications. Our industry is beset with faddism, magical thinking, and tribalism. We spend an enormous amount of time debating best practices, patterns, and "the right tool for the job". Unfortunately, we usually end up with nothing more than slogans, silver bullets and shibboleths. Without a coherent mental model for what makes things work, we can easily get lost in a jungle of received wisdom, industry trends, and vendor claims. I like to think of the OODA loop as my "machete of truth". It's no guarantee that I'll find the right path, but at least I can clear out the most obnoxious undergrowth.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;A few specific examples will probably help explain this more clearly. Suppose you hear about a new tool or technique that is supposed to help improve your application development process or application architecture. How do you decide if its potential value outweighs the costs of changing the way you do things? Here's one I've started looking at: &lt;a href="http://fit.c2.com/"&gt;FIT&lt;/a&gt;. I take a quick look around the web and I like what I see. I have a lot of respect for the work of Ward Cunningham and James Shore. On the other hand, I also know that the real superstars of development are much more productive than I and my team members are. Superstars often make the mistake of assuming that it's their tools or techniques that make them productive, but that is usually not the case. What works for Ward and James may not work for me. If the OODA Loop has predictive power and can tell me why some tools and techniques work better than others, I am in a much better position to decide whether or not to push for incorporating FIT into my preferred process. In this case, FIT fits the OODA loop model very well. Now, I'm faced with the hard work of really learning about it, figuring out how hard to push my organization to accept it, and when to introduce it into the process. Has anybody done any work to hook FIT into Team System? &lt;a href="http://codebetter.com/blogs/sam.gentile/default.aspx"&gt;Sam&lt;/a&gt;? Anyone?&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;Using the OODA Loop as a mental model can also help you understand how to use a potentially dangerous tool (and all powerful tools are potentially dangerous). As you might expect from a VB-loving Mort, I absolutely adore "Edit and Continue". I'm certainly aware of the &lt;a href="http://wintellect.com/WEBLOGS/wintellect/archive/2004/10/17/546.aspx"&gt;dangers&lt;/a&gt; of that feature, but I've also used its power in extremely productive ways. Writing code in a late-bound, loosely typed, verbose language with an IDE that supports auto completion, edit and continue, and excellent framework support allows me to engage in exploratory coding that approaches "coding as thinking". This technique allows me to iterate through a variety of potential solutions to a particular problem without the friction inherent in the more traditional method I use in developing production quality code.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I would like to posit the "spinning balls" from MTS/COM+ as an example from distributed application architecture. Back in the day, I spent many hours becoming intimately acquainted with the ins and outs of MTS. At the time, I didn't understand why IT managers and business users were so fixated on those darn spinning balls. Now I understand that, for most of them, this was their first exposure to distributed applications that provided them with insight into what was happening as the application ran. Understanding the OODA loop allowed me to appreciate the importance of this feature. The vast majority of distributed applications are completely opaque to the people who pay for them and the people who support them day in and day out. As application architects considering code hosting environments (e.g. ASP.Net, BizTalk, Windows Activation Services), the first question we should be asking is "Where are the spinning balls?" The ability to see what's happening as your systems run is so vital that no modern distributed application can afford to be without it. Building that capability on your own can be devilishly difficult.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;These examples are really just about how I use the OODA loop in the small. My main goal is to develop and propound a theory that unifies the process and the architecture of distributed applications. I don't think that's really been attempted before (this statement is my attempt to elicit evidence to the contrary). &lt;a href="http://blogs.msdn.com/a_pasha/default.aspx"&gt;Ali Pasha&lt;/a&gt; asked what other frameworks had I considered. The closest thing to what I'm trying to do that I'm aware of is &lt;a href="http://www.featuredrivendevelopment.com/"&gt;feature driven development&lt;/a&gt;. Unfortunately, FDD is very closely tied to OO in ways that I think are inappropriate for distributed applications. Of course, that doesn't stop me from appropriating all the things about FDD that I like. On the process side of the fence, I think &lt;a href="http://www.controlchaos.com/"&gt;Scrum&lt;/a&gt; has the best theoretical underpinnings. I will borrow heavily from it and the ideas of &lt;a href="http://www.agilemanagement.net/Articles/Weblog/blog.html"&gt;David Anderson&lt;/a&gt;. I would be remiss if I didn't point out that one of my favorite &lt;a href="http://blogs.msdn.com/nickmalik/default.aspx"&gt;bloggers&lt;/a&gt; has considered the idea of connecting agile development with SOA and pretty much &lt;a href="http://blogs.msdn.com/nickmalik/archive/2006/01/04/509457.aspx"&gt;dismissed it out of hand&lt;/a&gt;.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author></entry><entry><id>20243</id><published>2006-03-18T16:45:00.0-05:00</published><updated>2006-03-18T16:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">How to build a distributed application: Why Practice Matters</title><content type="html">&lt;div&gt;"In theory, theory and practice are the same. In practice, they aren't even close."&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I have no idea who said that first, but they are words that an application architect should live by. As I mentioned in my last post, I really do think it is important to have a strong theoretical underpinning to serve as a guide for developing a distributed application. It is also true that our ultimate goal as application architects is deliver working code that solves real business problems. Building actual systems is a continuous process of trade-offs, compromises, and imperfect choices. With this post, I start applying my theory to real application scenarios. The rest of this series will focus on a mix of scenarios from a slightly abstracted version of an application that is currently in development and pieces of applications I've helped build in the past. My goal is to show how to apply a simple set of constructs and processes to solve real-world challenges familiar to most business application architects and developers. The goal of the application architect is to supply an underlying infrastructure that lets developers concentrate on delivering business functionality without getting lost in the morass of conflicting forces that must be balanced to design and develop an effective &lt;strong&gt;distributed &lt;/strong&gt;application.&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Business Processes: User Tools, Documents, Messages, Services&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;I think of distributed applications as a set of technological artifacts constructed to support one or more business processes. I'm not going to attempt to define a business process. If you are a business application developer or architect, I hope you know what your organization does and you have a pretty good handle on the business process(es) that your application is supposed to support. If not, you're reading the wrong blog. From an architectural perspective, I recommend modeling your distributed application as a combination of user tools, documents, messages, and services. No doubt, this will strike many of my readers as a bit odd. There are no objects, protocols, databases, frameworks, APIs, or platforms in sight. All of those are implementation details. We'll get to them eventually, but you should start at a higher level. Let's look at each of the four constructs in more detail and try to make a few technological decisions along the way. Because most of my experience has been on the Windows platform, my examples will use Microsoft technologies, but the principles apply more generally.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;User Tools&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;You may be more comfortable with terms like user interface, presentation layer, or rich/smart/thick/thin/dumb/browser-based client. I think it's more useful to think of the tools your users need to fulfill their roles in the business process. This puts the focus on your users and what they need, rather than concepts driven by technical constraints. Ideally, you want to choose a computing platform and developer tools that let your business developers deliver the best possible user experience. In reality, many times your choices are limited by things like corporate standards, application requirements, and developer expertise. This is the area where I've experienced the most painful of those trade-offs, compromises, and imperfect choices that I mentioned above. You have to weigh a wide variety of conflicting forces in a constantly changing environment. For the purposes of this series, I'm assuming one of the best possible environments for developing a distributed application: a corporate environment with managed desktops running Windows XP SP2 with automated deployment of the .NET framework 2.0. Given that environment, there is no doubt that Windows Forms is the best way to deliver user tools for internal users. I'll assume the use of a cross-browser compatible web application for our user tools for external users. If your environment is substantially different, your choices for user tools may be quite different and it can have a substantive impact on your architecture. I'll try to point out some of the differences as we work our way through various scenarios.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Documents&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Most business processes revolve around users manipulating documents: purchase orders, customer information, vendor information, service requests, etc. Fortunately, most of the technical world has settled on a single technology for representing business documents that is straightforward and well supported: XML. Unfortunately, most of the technical world has settled on a single technology for representing the &lt;strong&gt;structure &lt;/strong&gt;of business documents that is overly complex and unevenly supported: XML Schema. I recommend embracing XML in your architecture and frameworks. Some application developers will want an OO façade around XML documents and others will want to work directly with the XML document. Let them make that choice and do the work. XML Schema, on the other hand, should be treated like MSIL. Folks should know it is there and understand how to get to it, but nobody should be building it by hand and you should realize that you can accomplish everything you are likely to need by using only a very small part of its capabilities.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Messages&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Your user tools and services will communicate using messages. Typically, messages represent interactions focused on documents (i.e. requests for documents, commands with documents, etc.). Most discussions about distributed application design get bogged down in arguments about how to best send, receive, and represent messages. Mostly these are what I like to call "artichokes and roses" arguments. If you don't know what I mean, just ask the next 10 people you meet which are better, artichokes or roses? You won't get a coherent answer (and most people will decide that you are a bit loony) because the question is meaningless without some context. Handling messages and network communications is where the application architect should really earn their keep. In my next post, I'll show you how to design a communications API that is easy for developers to understand and fosters good distributed application design. I'll use SOAP as the underlying messaging model (mostly because it gives us a good interop story), but completely hide it from the application developer.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h4 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Services&lt;/strong&gt;&lt;/h4&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;Services are where most of the work of the distributed application happens. Services allow you to harness all the power of server-based computing to solve real business needs. The biggest challenge facing most service developers is the difficulty of multithreaded programming. Answering that challenge will be the ultimate goal of this series. I just wish I knew for sure how it turns out in the end. &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;h3 style="FONT-WEIGHT: normal"&gt;&lt;strong&gt;Next Up - A Communications API&lt;/strong&gt;&lt;/h3&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt;In my next post, I'm going to try deliver something of real value in building a distributed applications (about time, after all this theory and modeling stuff): A message-based communications API for user tools. I'll follow that up with a complementary API for services to use.&lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;
&lt;div style="FONT-WEIGHT: normal"&gt; &lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>3</thr:total></entry><entry><id>20255</id><published>2006-03-19T05:01:00.0-05:00</published><updated>2006-03-19T05:01:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Interesting Finds</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="20243"></thr:in-reply-to></entry><entry><id>24208</id><published>2006-05-18T04:31:00.0-05:00</published><updated>2006-05-18T04:31:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: How to build a distributed application: Why Practice Matters</title><content type="html">Interesting article. Awaiting for your article on Communications API.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="20243"></thr:in-reply-to></entry><entry><id>48959</id><published>2007-11-06T23:27:00.0-05:00</published><updated>2007-11-06T23:27:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">:)</title><content type="html">Very nice one....thank you..</content><author><name>Anonymous</name></author><thr:in-reply-to ref="20243"></thr:in-reply-to></entry><entry><id>20244</id><published>2006-03-18T17:13:00.0-05:00</published><updated>2006-03-18T17:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Helping Don spend $100</title><content type="html">&lt;div&gt;While I was writing that last post, Don Box &lt;a href="http://pluralsight.com/blogs/dbox/archive/2006/03/18/20236.aspx"&gt;asked for some help&lt;/a&gt; spending "100 engineering dollars" at Microsoft on HTTP, XML, and REST. Now, I would rather give him some advice on spending $100 on the other side of his job (WCF, WSE, SOAP and such), but since he specifically asked for this, here goes:&lt;/div&gt;
&lt;div&gt; &lt;/div&gt;
&lt;ol type="1" style="MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px"&gt;
&lt;li&gt;
&lt;div&gt;$50 on fixing the XSD mess. Specifically, develop a well-defined subset of XSD that is useful for defining the structure of business documents (and really I think you can cover 80% of all business documents with 20% or less of the current XSD spec). Build a really cool visual tool that uses this subset of XSD to help application architects design distributed systems around business documents. Make that tool part of Visual Studio Team System. I don't want to prevent anybody from using all the XSD spec, if they really want to and can completely explain all the ramifications of UPA. I just don't want to be bothered with all that extraneous crap.&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;$45 on putting all the XML coolness of VB9 into C# 3.0. This is strictly altruism on my part. I use VB, but I have good friends who, for reasons totally inexplicable, like the whole case sensitive curly brace lifestyle.&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div&gt;$5 on tool support of &lt;a href="http://www.ssdl.org/"&gt;SSDL&lt;/a&gt;. OK, I'm cheating here. This is SOAP related, but it wouldn't cost much and maybe Tim Bray wouldn't even notice.&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;
&lt;div&gt; &lt;/div&gt;
&lt;div&gt;I really don't think any of the rest of the stuff he mentioned in his post really requires any additional investment beyond what Microsoft has already committed to.&lt;/div&gt;</content><author><name>john-cavnar-johnson</name></author><thr:total>1</thr:total></entry><entry><id>20385</id><published>2006-03-20T20:08:00.0-05:00</published><updated>2006-03-20T20:08:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Helping Don spend $100</title><content type="html">Thought you were using C#? You're back to VB are you? I wonder how many others who went to C# switch back?
&lt;br /&gt;
&lt;br /&gt;4. $129 for Visual Assist X; to make typing C# as easy, if not easier, than VB. ;-)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="20244"></thr:in-reply-to></entry></feed>