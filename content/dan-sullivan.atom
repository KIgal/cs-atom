<!--Generated by a crappy script that Craig Andera wrote : https://github.com/candera/cs-atom--><feed xmlns="http://www.w3.org/2005/Atom" xmlns:thr="http://purl.org/syndication/thread/1.0"><id>feed-id</id><updated>2011-12-25T08:45:42.591-05:00</updated><title type="text">Blog Title Here</title><generator version="7.00" uri="http://www.blogger.com">Blogger</generator><entry><id>15073</id><published>2005-09-28T08:59:00.0-05:00</published><updated>2005-09-28T08:59:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Yet Another Median Calculation</title><content type="html">&lt;table border="0" width="100%" cellspacing="0" class="fixedTable blogpost"&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="bvh8"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td id="msgcns!1pJ9rDz-37tfFhNe9-WpU59g!115"&gt;
&lt;div&gt;&lt;font size="5" color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/*&lt;/font&gt;&lt;font size="6" face="Verdana, Geneva, Arial, Sans-serif"&gt;YAMC&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="6"&gt;Yet Another Median Calculation&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;SQL Server 2005 gives us yet another way to calculate a median. The &lt;/font&gt;&lt;font size="3"&gt;secret is the ROW_NUMBER() function, it can be used to find the &lt;/font&gt;&lt;font size="3"&gt;"middle" row. ROW_NUMBER() is a bit special because an alias &lt;/font&gt;&lt;font size="3"&gt;for it cannot be used in a predicate in the same query. Either &lt;/font&gt;&lt;font size="3"&gt;a CTE or sub-query can be used to get around this.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The basic idea is to order the data on the value for which you &lt;/font&gt;&lt;font size="3"&gt;need to calculate a median, then select the row whose ROW_NUMBER() &lt;/font&gt;&lt;font size="3"&gt;is half the size of the result of the query. There is a problem though, &lt;/font&gt;&lt;font size="3"&gt;if the number of rows is even, there is no single "middle" row.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The options here are to pick a value between the "middle" &lt;/font&gt;&lt;font size="3"&gt;rows or just pick one of the rows. The value between the two &lt;/font&gt;&lt;font size="3"&gt;"middle" values is called the financial median. If the first &lt;/font&gt;&lt;font size="3"&gt;of the two "middle" rows is used it is  called the statistical &lt;/font&gt;&lt;font size="3"&gt;median.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- this is a very simple example table&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- we will use as a source of data for&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- median calculations&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;create&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;table&lt;/font&gt;&lt;font color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;id &lt;font color="#0000ff"&gt;int&lt;/font&gt; &lt;font color="#0000ff"&gt;Primary&lt;/font&gt; &lt;font color="#0000ff"&gt;Key&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;value&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;float&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;)&lt;/font&gt;&lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;-- see then end of this note for a helper&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- script that will fill the table with&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- some random data.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;/*&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;Now we look at some solutions using CTE's&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- this calculates the financial median&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;with&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; positions&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#0000ff"&gt;as&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#000000"&gt;1 &lt;/font&gt;&lt;font color="#808080"&gt;+&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;Count&lt;/font&gt;&lt;font color="#808080"&gt;(*))&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;/&lt;/font&gt;&lt;font color="#000000"&gt; 2 &lt;/font&gt;&lt;font color="#0000ff"&gt;as&lt;/font&gt;&lt;font color="#000000"&gt; mid&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;1&lt;font color="#808080"&gt;-(&lt;/font&gt;&lt;font color="#ff00ff"&gt;count&lt;/font&gt;&lt;font color="#808080"&gt;(*)&lt;/font&gt; &lt;font color="#808080"&gt;%&lt;/font&gt; 2&lt;font color="#808080"&gt;)&lt;/font&gt; &lt;font color="#0000ff"&gt;as&lt;/font&gt; even&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;from&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;),&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;rows&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#0000ff"&gt;as&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;/font&gt;&lt;font color="#000000"&gt; &lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;row_number&lt;font color="#808080"&gt;()&lt;/font&gt; &lt;font color="#0000ff"&gt;over&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;order&lt;/font&gt; &lt;font color="#0000ff"&gt;by&lt;/font&gt; &lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt; &lt;font color="#0000ff"&gt;as&lt;/font&gt; rn&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;from&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;AVG&lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;from&lt;/font&gt;&lt;font color="#000000"&gt; rows &lt;/font&gt;&lt;font color="#808080"&gt;JOIN&lt;/font&gt;&lt;font color="#000000"&gt; positions &lt;/font&gt;&lt;font color="#0000ff"&gt;on&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;rn &lt;font color="#808080"&gt;in&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;positions&lt;font color="#808080"&gt;.&lt;/font&gt;mid&lt;font color="#808080"&gt;,&lt;/font&gt; positions&lt;font color="#808080"&gt;.&lt;/font&gt;mid &lt;font color="#808080"&gt;+&lt;/font&gt; positions&lt;font color="#808080"&gt;.&lt;/font&gt;even&lt;/font&gt;&lt;font color="#808080"&gt;&lt;font size="3"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/* &lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;The first CTE, positions, calculates the a couple of aggregates &lt;/font&gt;&lt;font size="3"&gt;on our sample data.&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;position.mid is the number of the middle row if the number &lt;/font&gt;&lt;font size="3"&gt;of rows is odd, otherwise it is the number of the &lt;/font&gt;&lt;font size="3"&gt;first middle row.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;position.even is a marker that is one if the number of rows &lt;/font&gt;&lt;font size="3"&gt;is even and zero otherwise.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The second CTE, rows, calculates the row number of each &lt;/font&gt;&lt;font size="3"&gt;value in our sample data when ordered by value. The &lt;/font&gt;&lt;font size="3"&gt;ROW_NUMBER() is aliased as rows.rn. You might be tempted &lt;/font&gt;&lt;font size="3"&gt;use this alias in a predicate of this CTE to shortcut &lt;/font&gt;&lt;font size="3"&gt;the calculation of the median, but an alias for the &lt;/font&gt;&lt;font size="3"&gt;ROW_NUMBER() function cannot be used in a predicate &lt;/font&gt;&lt;font size="3"&gt;of the expression that defines it.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The final expression selects the average value of the values &lt;/font&gt;&lt;font size="3"&gt;from the positions CTE whose row number is either &lt;/font&gt;&lt;font size="3"&gt;position.mid or position.mid + position.even. Note that when &lt;/font&gt;&lt;font size="3"&gt;the number of rows in data is odd both position.mid and &lt;/font&gt;&lt;font size="3"&gt;position.mid + position.even will be the same value.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The result of averaging one or two rows will be the financial &lt;/font&gt;&lt;font size="3"&gt;median for the values in the data table.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;Another way to calculate the median, which can be used in &lt;/font&gt;&lt;font size="3"&gt;versions of SQL Server prior to 2005, is to move &lt;/font&gt;&lt;font size="3"&gt;the sorted values into a temporary table that has an &lt;/font&gt;&lt;font size="3"&gt;identity column. The identity column is, in effect, the same &lt;/font&gt;&lt;font size="3"&gt;as the ROW_NUMBER(). Then, as the ROW_NUMBER based solution &lt;/font&gt;&lt;font size="3"&gt;does, pick the "middle" row&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- temp table median calculation of median&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;declare&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; @positions &lt;/font&gt;&lt;font color="#0000ff"&gt;TABLE&lt;/font&gt;&lt;font color="#000000"&gt; &lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;id &lt;font color="#0000ff"&gt;int&lt;/font&gt; &lt;font color="#0000ff"&gt;identity&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;/font&gt; &lt;font color="#0000ff"&gt;value&lt;/font&gt; &lt;font color="#0000ff"&gt;float&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;insert&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;into&lt;/font&gt;&lt;font color="#000000"&gt; @positions &lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#0000ff"&gt;select&lt;/font&gt; &lt;font color="#0000ff"&gt;value&lt;/font&gt; &lt;font color="#0000ff"&gt;from&lt;/font&gt; data &lt;font color="#0000ff"&gt;order&lt;/font&gt; &lt;font color="#0000ff"&gt;by&lt;/font&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;value&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;DECLARE&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; @mid &lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;int&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;DECLARE&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; @even &lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;int&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;SELECT&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; @mid &lt;/font&gt;&lt;font color="#808080"&gt;=&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#000000"&gt;1 &lt;/font&gt;&lt;font color="#808080"&gt;+&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;count&lt;/font&gt;&lt;font color="#808080"&gt;(*))/&lt;/font&gt;&lt;font color="#000000"&gt;2&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;@even &lt;font color="#808080"&gt;=&lt;/font&gt; 1 &lt;font color="#808080"&gt;-&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#ff00ff"&gt;count&lt;/font&gt;&lt;font color="#808080"&gt;(*)&lt;/font&gt; &lt;font color="#808080"&gt;%&lt;/font&gt; 2&lt;font color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#0000ff"&gt;from&lt;/font&gt; @positions&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;AVG&lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;from&lt;/font&gt;&lt;font color="#000000"&gt; @positions&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#0000ff"&gt;where&lt;/font&gt; id &lt;font color="#808080"&gt;in&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;@mid&lt;font color="#808080"&gt;,&lt;/font&gt; @mid&lt;font color="#808080"&gt;+&lt;/font&gt;@even&lt;/font&gt;&lt;font color="#808080"&gt;&lt;font size="3"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/*&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;Is there any advantage to using the ROW_NUMBER based solution? &lt;/font&gt;&lt;font size="3"&gt;If you compare the actual execution plan of the two calculations run in a single batch, &lt;/font&gt;&lt;font size="3"&gt;the ROW_NUMBER based one has an insignificant advantage, 48% &lt;/font&gt;&lt;font size="3"&gt;vs. 52% of the overall plan on my test system.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The ROW_NUMBER solution does have one nice feature though, it &lt;/font&gt;&lt;font size="3"&gt;is a SQL expression and the temporary table solution is a batch, &lt;/font&gt;&lt;font size="3"&gt;not an expression. You can use this fact to improve the relative &lt;/font&gt;&lt;font size="3"&gt;performance of the ROW_NUMBER based calculation. If you know &lt;/font&gt;&lt;font size="3"&gt;you are going to do this median calculation very often you &lt;/font&gt;&lt;font size="3"&gt;can add an index to the value column of the data table. This, &lt;/font&gt;&lt;font size="3"&gt;of course, is not for free, you are making a space/time &lt;/font&gt;&lt;font size="3"&gt;tradeoff by spending space to cut down time.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- index to speed up ROW_NUMBER&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- based median calculation&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;create&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;index&lt;/font&gt;&lt;font color="#000000"&gt; value_indx &lt;/font&gt;&lt;font color="#0000ff"&gt;on&lt;/font&gt;&lt;font color="#000000"&gt; data&lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/*&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;With this index in place you will find a notable difference &lt;/font&gt;&lt;font size="3"&gt;between the execution plans for the ROW_NUMBER and temporary &lt;/font&gt;&lt;font size="3"&gt;table calculations, the ROW_NUMBER calculation takes up only &lt;/font&gt;&lt;font size="3"&gt;37% of the overall plan on my test system.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;The reason for this is that when there is no index that sorts &lt;/font&gt;&lt;font size="3"&gt;the values the ROW_NUMBER calculation must build a temporary &lt;/font&gt;&lt;font size="3"&gt;table itself and sort it, just like temporary table calculation &lt;/font&gt;&lt;font size="3"&gt;does. But the temporary table solution always builds the &lt;/font&gt;&lt;font size="3"&gt;temporary table, even if there is a index available to sort it. &lt;/font&gt;&lt;font size="3"&gt;The ROW_NUMBER solution mearly has to walk over the index to &lt;/font&gt;&lt;font size="3"&gt;find the middle value.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;Calculating the statistical mean, the one that always uses &lt;/font&gt;&lt;font size="3"&gt;one of the values from the table, takes a bit more work, but &lt;/font&gt;&lt;font size="3"&gt;not much.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- calculation of statistical mean&lt;/font&gt;&lt;/p&gt;&lt;font size="3" color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;with&lt;br /&gt;&lt;font size="3"&gt;positions&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#0000ff"&gt;as&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#000000"&gt;1 &lt;/font&gt;&lt;font color="#808080"&gt;+&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;Count&lt;/font&gt;&lt;font color="#808080"&gt;(*))&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;/&lt;/font&gt;&lt;font color="#000000"&gt; 2 &lt;/font&gt;&lt;font color="#0000ff"&gt;as&lt;/font&gt;&lt;font color="#000000"&gt; mid&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;1&lt;font color="#808080"&gt;-(&lt;/font&gt;&lt;font color="#ff00ff"&gt;count&lt;/font&gt;&lt;font color="#808080"&gt;(*)&lt;/font&gt; &lt;font color="#808080"&gt;%&lt;/font&gt; 2&lt;font color="#808080"&gt;)&lt;/font&gt; &lt;font color="#0000ff"&gt;as&lt;/font&gt; even&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;from&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;),&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;rows&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#0000ff"&gt;as&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;/font&gt;&lt;font color="#000000"&gt; &lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;row_number&lt;font color="#808080"&gt;()&lt;/font&gt; &lt;font color="#0000ff"&gt;over&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;order&lt;/font&gt; &lt;font color="#0000ff"&gt;by&lt;/font&gt; &lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt; &lt;font color="#0000ff"&gt;as&lt;/font&gt; rn&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;from&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;TOP&lt;/font&gt;&lt;font color="#000000"&gt; 1 &lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;from&lt;/font&gt;&lt;font color="#000000"&gt; rows &lt;/font&gt;&lt;font color="#808080"&gt;JOIN&lt;/font&gt;&lt;font color="#000000"&gt; positions &lt;/font&gt;&lt;font color="#0000ff"&gt;on&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;rn &lt;font color="#808080"&gt;in&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;positions&lt;font color="#808080"&gt;.&lt;/font&gt;mid&lt;font color="#808080"&gt;,&lt;/font&gt; positions&lt;font color="#808080"&gt;.&lt;/font&gt;mid &lt;font color="#808080"&gt;+&lt;/font&gt; positions&lt;font color="#808080"&gt;.&lt;/font&gt;even&lt;font color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;ORDER&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;BY&lt;/font&gt;&lt;font color="#000000"&gt; rn&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/*&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;For the statistical mean you must sort the results by &lt;/font&gt;&lt;font size="3"&gt;row number and pick the first one. If you want the last &lt;/font&gt;&lt;font size="3"&gt;one then do an DESC sort.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;This calculation isn't a real aggregate, but you can get &lt;/font&gt;&lt;font size="3"&gt;some of the effect of an aggregate by wrapping it inside of an &lt;/font&gt;&lt;font size="3"&gt;inline table valued user defined function. Note that &lt;/font&gt;&lt;font size="3"&gt;because the ROW_NUMBER calculation is a SQL expression &lt;/font&gt;&lt;font size="3"&gt;you can do this. The temporary table solution can only &lt;/font&gt;&lt;font size="3"&gt;be wrapped into a multi-line user defined function.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- median TVF&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- note that this function&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- always returns a table&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;-- with a single row&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;CREATE&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;FUNCTION&lt;/font&gt;&lt;font color="#000000"&gt; dataMedian&lt;/font&gt;&lt;font color="#808080"&gt;()&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;returns&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;table&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;return&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;with&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;positions&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#0000ff"&gt;as&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#000000"&gt;1 &lt;/font&gt;&lt;font color="#808080"&gt;+&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;Count&lt;/font&gt;&lt;font color="#808080"&gt;(*))&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;/&lt;/font&gt;&lt;font color="#000000"&gt; 2 &lt;/font&gt;&lt;font color="#0000ff"&gt;as&lt;/font&gt;&lt;font color="#000000"&gt; mid&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;1&lt;font color="#808080"&gt;-(&lt;/font&gt;&lt;font color="#ff00ff"&gt;count&lt;/font&gt;&lt;font color="#808080"&gt;(*)&lt;/font&gt; &lt;font color="#808080"&gt;%&lt;/font&gt; 2&lt;font color="#808080"&gt;)&lt;/font&gt; &lt;font color="#0000ff"&gt;as&lt;/font&gt; even&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;from&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;),&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;rows&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#0000ff"&gt;as&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;(&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;/font&gt;&lt;font color="#000000"&gt; &lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;row_number&lt;font color="#808080"&gt;()&lt;/font&gt; &lt;font color="#0000ff"&gt;over&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;order&lt;/font&gt; &lt;font color="#0000ff"&gt;by&lt;/font&gt; &lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt; &lt;font color="#0000ff"&gt;as&lt;/font&gt; rn&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;from&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; data&lt;br /&gt;&lt;/font&gt;&lt;font size="3" color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;select&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;AVG&lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;as&lt;/font&gt;&lt;font color="#000000"&gt; median &lt;/font&gt;&lt;font color="#0000ff"&gt;from&lt;/font&gt;&lt;font color="#000000"&gt; rows &lt;/font&gt;&lt;font color="#808080"&gt;JOIN&lt;/font&gt;&lt;font color="#000000"&gt; positions &lt;/font&gt;&lt;font color="#0000ff"&gt;on&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;rn &lt;font color="#808080"&gt;in&lt;/font&gt; &lt;font color="#808080"&gt;(&lt;/font&gt;positions&lt;font color="#808080"&gt;.&lt;/font&gt;mid&lt;font color="#808080"&gt;,&lt;/font&gt; positions&lt;font color="#808080"&gt;.&lt;/font&gt;mid &lt;font color="#808080"&gt;+&lt;/font&gt; positions&lt;font color="#808080"&gt;.&lt;/font&gt;even&lt;/font&gt;&lt;font color="#808080"&gt;&lt;font size="3"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/*&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;So if you now want to get all the values in the &lt;/font&gt;&lt;font size="3"&gt;data table that are greater than the median you &lt;/font&gt;&lt;font size="3"&gt;can do something like:&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;Select&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; id&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;from&lt;/font&gt;&lt;font color="#000000"&gt; data &lt;/font&gt;&lt;font color="#808080"&gt;JOIN&lt;/font&gt;&lt;font color="#000000"&gt; dbo&lt;/font&gt;&lt;font color="#808080"&gt;.&lt;/font&gt;&lt;font color="#000000"&gt;dataMedian&lt;/font&gt;&lt;font color="#808080"&gt;()&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;ON&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;value&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;&amp;gt;&lt;/font&gt;&lt;font color="#000000"&gt; median&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font color="#008000"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;/*&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;So that is yet another median calculation for SQL Server. &lt;/font&gt;&lt;font size="3"&gt;In some cases it will may provide better performance &lt;/font&gt;&lt;font size="3"&gt;than using a temporary table, but at the cost of space. &lt;/font&gt;&lt;font size="3"&gt;It not worse that using a temporary table and gives &lt;/font&gt;&lt;font size="3"&gt;you the option of making the space/time tradeoff &lt;/font&gt;&lt;font size="3"&gt;whenever you feel it is necessary.&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;*/&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;-- helper script to fill sample TABLE data&lt;/font&gt;&lt;/p&gt;&lt;font color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font size="3"&gt;set&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;nocount&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;on&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;declare&lt;/font&gt;&lt;/font&gt;&lt;font size="3" color="#000000"&gt; @index &lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;int&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;set&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; @index &lt;/font&gt;&lt;font color="#808080"&gt;=&lt;/font&gt;&lt;font color="#000000"&gt; 20001&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;while&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; @index &lt;/font&gt;&lt;font color="#808080"&gt;&amp;gt;&lt;/font&gt;&lt;font color="#000000"&gt; 0&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;BEGIN&lt;br /&gt;&lt;/font&gt;&lt;font size="3"&gt;Insert&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#0000ff"&gt;into&lt;/font&gt;&lt;font color="#000000"&gt; data &lt;/font&gt;&lt;font color="#0000ff"&gt;values&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;(&lt;/font&gt;&lt;font color="#000000"&gt;@index&lt;/font&gt;&lt;font color="#808080"&gt;,&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#ff00ff"&gt;RAND&lt;/font&gt;&lt;font color="#808080"&gt;()&lt;/font&gt;&lt;font color="#000000"&gt; &lt;/font&gt;&lt;font color="#808080"&gt;*&lt;/font&gt;&lt;font color="#000000"&gt; 1000&lt;/font&gt;&lt;font color="#808080"&gt;)&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color="#0000ff"&gt;&lt;font size="3"&gt;set&lt;/font&gt;&lt;/font&gt;&lt;font size="3"&gt;&lt;font color="#000000"&gt; @index &lt;/font&gt;&lt;font color="#808080"&gt;=&lt;/font&gt;&lt;font color="#000000"&gt; @index &lt;/font&gt;&lt;font color="#808080"&gt;-&lt;/font&gt;&lt;font color="#000000"&gt; 1&lt;br /&gt;&lt;/font&gt;&lt;/font&gt;&lt;font size="5" color="#0000ff"&gt;&lt;font size="3"&gt;END&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3"&gt;&lt;/font&gt; &lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</content><author><name>dan-sullivan</name></author><thr:total>8</thr:total></entry><entry><id>16068</id><published>2005-10-31T21:00:00.0-05:00</published><updated>2005-10-31T21:00:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Calculating Medians with SQL Server 2005 </title><content type="html">I needed to calculate a median using some data I had in SQL Server 2005 today.&amp;amp;nbsp; I thought the new...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>18890</id><published>2006-02-18T12:26:00.0-05:00</published><updated>2006-02-18T12:26:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yet Another Median Calculation</title><content type="html">&lt;br /&gt;Try this version, with nly one CTE table:
&lt;br /&gt;
&lt;br /&gt;WITH Middle (value, up, down)
&lt;br /&gt;AS
&lt;br /&gt;(SELECT value,
&lt;br /&gt;        ROW_NUMBER() OVER(ORDER BY value ASC),
&lt;br /&gt;        ROW_NUMBER() OVER(ORDER BY value DESC)
&lt;br /&gt;   FROM Data)
&lt;br /&gt;SELECT AVG(value) AS median 
&lt;br /&gt;  FROM Middle
&lt;br /&gt; WHERE up = (down, down-1, down+1);
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>21611</id><published>2006-04-11T21:17:00.0-05:00</published><updated>2006-04-11T21:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yet Another Median Calculation</title><content type="html">Dear Sir,
&lt;br /&gt;I AM new to SQL 2005.When i execute the ROW_NUMBER() query i have the following ERROR
&lt;br /&gt;
&lt;br /&gt;Query:
&lt;br /&gt;
&lt;br /&gt;SELECT ROW_NUMBER()OVER (ORDER BY QuestionID) AS 'Row Number',Answer,AnswerID,QuestionNumber,FROM dbo.Questions;
&lt;br /&gt;
&lt;br /&gt;ERROR:
&lt;br /&gt;Msg 195, Level 15, State 10, Line 2
&lt;br /&gt;'ROW_NUMBER' is not a recognized function name.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;Kindly give your Suggesion ASAP.
&lt;br /&gt;
&lt;br /&gt;Gideon
&lt;br /&gt;
&lt;br /&gt;gidyaxn@gmail.com  </content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>21638</id><published>2006-04-12T04:42:00.0-05:00</published><updated>2006-04-12T04:42:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yet Another Median Calculation</title><content type="html">There is a typo in your query, an extra comma after QuestionNumber. That however, I think, would give you a different error.
&lt;br /&gt;
&lt;br /&gt;Try this query, it doesn't depend on any particular table being in your database
&lt;br /&gt;
&lt;br /&gt;SELECT ROW_NUMBER()OVER (ORDER BY NUM)  AS NUMBER
&lt;br /&gt;FROM (SELECT 1 AS NUM)  A
&lt;br /&gt;
&lt;br /&gt;If this doens't work it's hard to say what is wrong.  You can confirm that you are actually running 2005 by
&lt;br /&gt;
&lt;br /&gt;SELECT @@VERSION
&lt;br /&gt;
&lt;br /&gt;You should get back:
&lt;br /&gt;
&lt;br /&gt;Microsoft SQL Server 2005 - 9.00.1399.06 (Intel X86)   Oct 14 2005 00:33:37   Copyright (c) 1988-2005 Microsoft Corporation  Developer Edition on Windows NT 5.1 (Build 2600: Service Pack 2) 
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>36321</id><published>2006-08-26T12:52:00.0-05:00</published><updated>2006-08-26T12:52:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">CLR Based Histogram Functions and SQL Server 2005</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>41433</id><published>2006-10-30T09:22:00.0-05:00</published><updated>2006-10-30T09:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Calculating Medians with SQL Server 2005 </title><content type="html">I needed to calculate a median using some data I had in SQL Server 2005 today.&amp;amp;nbsp; I thought the new...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>43608</id><published>2006-11-29T08:55:00.0-05:00</published><updated>2006-11-29T08:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yet Another Median Calculation</title><content type="html">/* key to this design is to use the select top xx percent 
&lt;br /&gt;*/
&lt;br /&gt;
&lt;br /&gt;select top 1 justanumber as median_justanumber from
&lt;br /&gt;(
&lt;br /&gt;  select top 50 percent justanumber from 
&lt;br /&gt;  justatable order by justanumber desc
&lt;br /&gt;) a order by justanumber asc
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>55218</id><published>2008-11-22T21:26:22.0-05:00</published><updated>2008-11-22T21:26:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Yet Another Median Calculation</title><content type="html">-- This routine accurately gets Median using the TOP xx perecent method

CREATE TABLE Centres (CallCount SMALLMONEY not null) 
GO 
DECLARE @Median SMALLMONEY

INSERT INTO Centres - get top centre value 
SELECT TOP 1  dRecord as CallCount
FROM (SELECT TOP 50 PERCENT dRecord FROM dBase ORDER BY dRecord asc ) sub Order by  dRecord desc

INSERT INTO Centres get bottom centre value 
SELECT TOP 1  dRecord as CallCount
FROM (SELECT TOP 50 PERCENT dRecord FROM dBase ORDER BY dRecord DESC ) sub ORDER BY dRecord ASC 

SET @Median = (SELECT AVG(CallCount) FROM Centres)

DROP TABLE Centres</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15073"></thr:in-reply-to></entry><entry><id>15082</id><published>2005-09-29T06:26:00.0-05:00</published><updated>2005-09-29T06:26:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Psuedo Median Aggregate</title><content type="html">&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;/*&lt;/p&gt;
&lt;p style="FONT-WEIGHT: bold; FONT-SIZE: 24pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Psuedo Median Aggregrate&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;In an item I previously blogged, YAMC, I showed how to use the ROW_NUMBER() function in SQL Server 2005 to do a pretty efficient median calculation. Being able to calculate the median in an expression can be useful, but a median aggregate function would be much more useful.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Well T-SQL, even in SQL Server 2005, doesn't provide a median aggregate function and the is no way to write one using user defined aggregates written in a CLR language either.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Remember that an aggregate is set in, scalar out. YAMC was an aggregate calculation, but not an aggregate function. One of the useful things about aggregate function, like SUM(), is that they can be used in conjunction with GROUP BY phrases, so you can get an aggregate per some kind of value.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;We are going to look at how to extend the YAMC to use a GROUP BY phrase so that it can be used, efficiently, to produce the same results as a MEDIAN() aggregate function would.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;We will use the sales table that follows as example data. A script that will initialize it with some sample data is at the end of this blog item.&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;*/&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;Create&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;table&lt;/span&gt;&lt;span style="COLOR: black"&gt; Sales&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;(&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;PONumber &lt;/span&gt;&lt;span style="COLOR: blue"&gt;int&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;Primary&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;Key&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;Value&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;Money&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;State &lt;/span&gt;&lt;span style="COLOR: blue"&gt;NCHAR&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt;2&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;)&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;/*&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;A simple aggregate calculation could be the SUM of the values by state.&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;*/&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SELECT&lt;/span&gt;&lt;span style="COLOR: black"&gt; State&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;SUM&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;FROM&lt;/span&gt;&lt;span style="COLOR: black"&gt; Sales &lt;/span&gt;&lt;span style="COLOR: blue"&gt;GROUP&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;BY&lt;/span&gt;&lt;span style="COLOR: black"&gt; State&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;/*&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Here is a little bit of the output...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;NB 891760.7953&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;WI 1001671.6347&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;PA 962849.0728&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;IL 1055766.3988&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;What we would like to do thougth is:&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;SELECT State, MEDIAN(Value) FROM Sales GROUP BY State&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;but that won't work because T-SQL has no  MEDIAN aggregate function.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;We could calculate the median of the whole table or a specific state using YAMC by modifying it a bit to just use rows from the state we are interest in.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;*/&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;with&lt;/span&gt;&lt;span style="COLOR: black"&gt; positions&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;as&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;(&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;select&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: black"&gt;1 &lt;/span&gt;&lt;span style="COLOR: gray"&gt;+&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;Count&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(*))&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;/&lt;/span&gt;&lt;span style="COLOR: black"&gt; 2 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;as&lt;/span&gt;&lt;span style="COLOR: black"&gt; mid&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;1&lt;/span&gt;&lt;span style="COLOR: gray"&gt;-(&lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;count&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(*)&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;%&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; 2&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;as&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; even&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;from&lt;/span&gt;&lt;span style="COLOR: black"&gt; Sales &lt;/span&gt;&lt;span style="COLOR: blue"&gt;where&lt;/span&gt;&lt;span style="COLOR: black"&gt; State &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: red"&gt;'NB'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;),&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: #716f6f; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;rows&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;as&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;(&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;select&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;ROW_NUMBER&lt;/span&gt;&lt;span style="COLOR: gray"&gt;()&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;over&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: blue"&gt;order&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;by&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;as&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; rn&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;from&lt;/span&gt;&lt;span style="COLOR: black"&gt; Sales &lt;/span&gt;&lt;span style="COLOR: blue"&gt;where&lt;/span&gt;&lt;span style="COLOR: black"&gt; State &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: red"&gt;'NB'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;)&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;select&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: red"&gt;'NB'&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;as&lt;/span&gt;&lt;span style="COLOR: black"&gt; State&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;AVG&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;from&lt;/span&gt;&lt;span style="COLOR: black"&gt; rows &lt;/span&gt;&lt;span style="COLOR: gray"&gt;JOIN&lt;/span&gt;&lt;span style="COLOR: black"&gt; positions &lt;/span&gt;&lt;span style="COLOR: blue"&gt;on&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;rn &lt;/span&gt;&lt;span style="COLOR: gray"&gt;in&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt;positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt;mid&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt;mid &lt;/span&gt;&lt;span style="COLOR: gray"&gt;+&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt;even&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;/*&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;And we get...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;NB 4218.464&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;It turns out ROW_NUMBER() has a friend named PARTITION BY, whose purpose in spirit is the same as GROUP BY. In fact by using PARTITION  BY and GROUP BY together we can do an aggregate calculation grouped by a value, just as you can using the built in aggregate functions.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Here is a "psuedo" median aggregate that calculates the median sales value by state.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;*/&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;-- psuedo median aggregate&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;WITH&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: #716f6f; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;positions&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;AS&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;(&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SELECT&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: black"&gt;1 &lt;/span&gt;&lt;span style="COLOR: gray"&gt;+&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;count&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(*))&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;/&lt;/span&gt;&lt;span style="COLOR: black"&gt; 2 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;AS&lt;/span&gt;&lt;span style="COLOR: black"&gt; mid&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;1&lt;/span&gt;&lt;span style="COLOR: gray"&gt;-(&lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;count&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(*)&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;%&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; 2&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;AS&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; even&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: #716f6f; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;state&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;FROM&lt;/span&gt;&lt;span style="COLOR: black"&gt; Sales &lt;/span&gt;&lt;span style="COLOR: blue"&gt;GROUP&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;BY&lt;/span&gt;&lt;span style="COLOR: black"&gt; state&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;),&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: #716f6f"&gt;rows &lt;/span&gt;&lt;span style="COLOR: blue"&gt;AS&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;(&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SELECT&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; state&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; row_number&lt;/span&gt;&lt;span style="COLOR: gray"&gt;()&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;OVER&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: blue"&gt;PARTITION&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;BY&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; state &lt;/span&gt;&lt;span style="COLOR: blue"&gt;order&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;by&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;AS&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; rn &lt;/span&gt;&lt;span style="COLOR: blue"&gt;FROM&lt;/span&gt;&lt;span style="COLOR: #716f6f"&gt; sales&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: gray; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;)&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SELECT&lt;/span&gt;&lt;span style="COLOR: black"&gt; rows&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;state&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;AVG&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: black"&gt;rows&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: blue"&gt;value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;AS&lt;/span&gt;&lt;span style="COLOR: black"&gt; median&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;FROM&lt;/span&gt;&lt;span style="COLOR: black"&gt; rows &lt;/span&gt;&lt;span style="COLOR: gray"&gt;JOIN&lt;/span&gt;&lt;span style="COLOR: black"&gt; positions&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;ON&lt;/span&gt;&lt;span style="COLOR: black"&gt; rows&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;state &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;state&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: gray"&gt;AND&lt;/span&gt;&lt;span style="COLOR: black"&gt; rows&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;rn &lt;/span&gt;&lt;span style="COLOR: gray"&gt;IN&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: black"&gt;positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;mid&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;mid &lt;/span&gt;&lt;span style="COLOR: gray"&gt;+&lt;/span&gt;&lt;span style="COLOR: black"&gt; positions&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;even&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;GROUP&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;BY&lt;/span&gt;&lt;span style="COLOR: black"&gt; rows&lt;/span&gt;&lt;span style="COLOR: gray"&gt;.&lt;/span&gt;&lt;span style="COLOR: black"&gt;state&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;/*&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;This explaination assumes you have already read the YAMC blog item.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Similar as in YAMC, positions calculates the mid and even values, but this time groups the values by state.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Again, similar to YAMC, rows associates a row number with each value, but this time partitions the row numbers by state. This means that each state will have its own set of row numbers starting with one.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;The SELECT that follows the CTE's is a bit more complex than the one in YAMC. It joins together positions and rows just as YAMC did. However it adds to the predicate a clause that makes the row and positions have the same state. And at the end it groups the AVG() aggregate by state.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Here is a little bit of what it produces...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;AK 5158.6132&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;AL 5222.3433&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;AR 5347.351&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;AZ 5190.8084&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;CA 5015.9836&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;NB 4218.464&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;It would be much easier, and a lot more flexible, if T-SQL just gave us a MEDIAN() aggregate function, but for now at least we can do a real Median grouped by value if we want to.&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;Since this idiom accomplises pretty much what an aggregate function does, I wonder if the SQL team could cook up a syntax that used PARTITION BY and GROUP BY so that we could write our own user defined aggregates in T-SQL? One can dream...&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;*/&lt;/p&gt;
&lt;p style="FONT-SIZE: 10pt; MARGIN: 0in; FONT-FAMILY: Verdana; mso-outline-level: 1"&gt; &lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: green; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;-- genrates test data&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;DECLARE&lt;/span&gt;&lt;span style="COLOR: black"&gt; @index &lt;/span&gt;&lt;span style="COLOR: blue"&gt;int&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SET&lt;/span&gt;&lt;span style="COLOR: black"&gt; @index &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; 10000&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHILE&lt;/span&gt;&lt;span style="COLOR: black"&gt; @index &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&amp;gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 0&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;BEGIN&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;DECLARE&lt;/span&gt;&lt;span style="COLOR: black"&gt; @state &lt;/span&gt;&lt;span style="COLOR: blue"&gt;NVARCHAR&lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: black"&gt;2&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;DECLARE&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: blue"&gt;float&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SET&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;RAND&lt;/span&gt;&lt;span style="COLOR: gray"&gt;()&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;*&lt;/span&gt;&lt;span style="COLOR: black"&gt; 50&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SET&lt;/span&gt;&lt;span style="COLOR: black"&gt; @state &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;CASE&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 1 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'AL'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 2 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'AK'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 3 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'AZ'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 4 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'CA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 5 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'CO'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 6 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'CT'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 7 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'DE'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 8 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'FL'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 9 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'GA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 10 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'HI'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 11 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'ID'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 12 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'IL'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 13 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'IA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 14 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'IN'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 15 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'KS'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 16 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'KY'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 17 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'LA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 18 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 19 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MD'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 20 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MN'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 21 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MI'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 22 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MS'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 23 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MO'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 24 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'MT'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 25 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NB'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 26 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NV'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 27 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NH'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 28 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NJ'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 29 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NM'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 30 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NY'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 31 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'NC'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 32 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'ND'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 33 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'OH'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 34 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'OK'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 35 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'OR'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 36 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'PA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 37 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'RI'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 38 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'SC'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 39 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'SD'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 40 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'TN'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 41 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'TX'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 42 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'UT'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 43 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'VT'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 44 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'VA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 45 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'WA'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 46 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'WV'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 47 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'WI'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 48 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'WY'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 49 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'AR'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;WHEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; @rand &lt;/span&gt;&lt;span style="COLOR: gray"&gt;&lt;/span&gt;&lt;span style="COLOR: black"&gt; 50 &lt;/span&gt;&lt;span style="COLOR: blue"&gt;THEN&lt;/span&gt;&lt;span style="COLOR: black"&gt; N&lt;/span&gt;&lt;span style="COLOR: red"&gt;'AL'&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;END&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;DECLARE&lt;/span&gt;&lt;span style="COLOR: black"&gt; @value &lt;/span&gt;&lt;span style="COLOR: blue"&gt;MONEY&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SET&lt;/span&gt;&lt;span style="COLOR: black"&gt; @value &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: fuchsia"&gt;RAND&lt;/span&gt;&lt;span style="COLOR: gray"&gt;()&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;*&lt;/span&gt;&lt;span style="COLOR: black"&gt; 10000&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;INSERT&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: blue"&gt;INTO&lt;/span&gt;&lt;span style="COLOR: black"&gt; SALES &lt;/span&gt;&lt;span style="COLOR: blue"&gt;VALUES&lt;/span&gt;&lt;span style="COLOR: black"&gt; &lt;/span&gt;&lt;span style="COLOR: gray"&gt;(&lt;/span&gt;&lt;span style="COLOR: black"&gt;@index&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; @value&lt;/span&gt;&lt;span style="COLOR: gray"&gt;,&lt;/span&gt;&lt;span style="COLOR: black"&gt; @state&lt;/span&gt;&lt;span style="COLOR: gray"&gt;)&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;&lt;span style="COLOR: blue"&gt;SET&lt;/span&gt;&lt;span style="COLOR: black"&gt; @index &lt;/span&gt;&lt;span style="COLOR: gray"&gt;=&lt;/span&gt;&lt;span style="COLOR: black"&gt; @index &lt;/span&gt;&lt;span style="COLOR: gray"&gt;-&lt;/span&gt;&lt;span style="COLOR: black"&gt; 1&lt;/span&gt;&lt;/p&gt;
&lt;p style="FONT-SIZE: 12pt; MARGIN: 0in; COLOR: blue; FONT-FAMILY: Tahoma; mso-outline-level: 1"&gt;END&lt;/p&gt;
&lt;div&gt;
&lt;p style="MARGIN: 0in"&gt; &lt;/p&gt;&lt;/div&gt;</content><author><name>dan-sullivan</name></author><thr:total>3</thr:total></entry><entry><id>15086</id><published>2005-09-29T07:34:00.0-05:00</published><updated>2005-09-29T07:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Welcome Dan Sullivan!</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="15082"></thr:in-reply-to></entry><entry><id>19945</id><published>2006-03-10T15:18:00.0-05:00</published><updated>2006-03-10T15:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Psuedo Median Aggregate</title><content type="html">Dan- 
&lt;br /&gt;This is great - for when I finally get SQL 2005, any suggestions for SQL 2000?
&lt;br /&gt;-Megan</content><author><name>Anonymous</name></author><thr:in-reply-to ref="15082"></thr:in-reply-to></entry><entry><id>36318</id><published>2006-08-26T09:54:00.0-05:00</published><updated>2006-08-26T09:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">CLR Based Histogram Functions and SQL Server 2005</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="15082"></thr:in-reply-to></entry><entry><id>17703</id><published>2005-12-28T22:02:00.0-05:00</published><updated>2005-12-28T22:02:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">msh+SMO</title><content type="html">&lt;div&gt;
&lt;h1 class="Title"&gt;&lt;a name="0_pgfId-998290"&gt;&lt;/a&gt;msh+SMO&lt;/h1&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007661"&gt;&lt;/a&gt;The Microsoft Command Shell, called msh, is a new command line shell from Microsoft for Windows. You can think of it as a new and wizzy version of the DOS shell that is part of Windows now. If you have worked on Unix systems then you can look at msh as being yet another shell, except that msh works directly with objects and is integrated into the .NET framework very closely.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1009248"&gt;&lt;/a&gt;There is a printable pdf version of this article at &lt;a href="http://www.pluralsight.com/dan/arts/mshsmo.pdf"&gt;http://www.pluralsight.com/dan/arts/mshsmo.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008263"&gt;&lt;/a&gt;Combine msh with SQL Server Management Objects, SMO, and you have a powerful command line tool for managing SQL Server.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-998337"&gt;&lt;/a&gt;SQL Server 2005 includes both SQL Server Management Studio, or SSMS, and sqlcmd utilities to manage SQL Server. Msh+SMO to some extent cherry picks the best of each of these utilities and then adds a few features. Of course you milage may vary.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-998378"&gt;&lt;/a&gt;Sqlcmd is sometimes really nice to use because it is just so light-weight; it starts right up, your fingers never need to leave the keyboard, and you can use to run scripts. Of course you tend to have to keep a lot more things in head that SSMS would just keep on the screen and you can't "just look" at something as you can with SSMS. But SSMS is not light weight and you end up doing a lot of clicking and typing when you use it. But that is the typical trade-off there always is between command line and GUI tools.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1004898"&gt;&lt;/a&gt;A lot of the GUI features in SSMS are really just graphically exposing the object models of SQL Server that are part of SMO. SMO can be incorporated in msh and provide all of these features and more, though not in GUI form.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007673"&gt;&lt;/a&gt;As an example of something you can do with msh+SMO &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt; shows it being used to find all of the log files for all of the databases in an instance of SQL Server named "CANOPUS5". Even though we haven't said anything about how to use msh+SMO, you can probably see what is going on.&lt;a name="0_35540"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-1.gif" /&gt; &lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1004904"&gt;&lt;/a&gt;Figure 1&lt;a name="0_60184"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1000358"&gt;&lt;/a&gt;You could have gotten the same information from SSMS with a fair number of mouse clicks of course, but it would not have been all summarized on a single screen. Likewise with sqlcmd you could have found the log files, but it would have a bit more typing and log file information is in different places on SQL Server 2005 than it is on SQL Server 2000; the msh commands in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt; will work on either.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-998488"&gt;&lt;/a&gt;Msh+SMO satisfies one of my requirements for switching to a "new" technology, it takes less typing than the other technologies I have previously been using. However msh+SMO adds a few more things to the mix; it has the equivalent of Intellisense, but for the command line. It also makes it easier to integrate Windows stuff with SQL Server stuff. You certainly can use the!! syntax to invoke Windows utilities in sqlcmd scripts, but with msh+SMO it much easier to integrate the results.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007653"&gt;&lt;/a&gt;Before we go any further let's talk about setting up msh+SMO. To use msh+SMO you need two things; msh and SMO. Msh is a beta product and it also requires that the .NET Framework 2.0 is already installed on your system, as does SMO. You can get msh in two ways. One is to download the standalone version of it from http://www.microsoft.com/technet/scriptcenter/topics/msh/download.mspx. The other is to download the Microsoft WinFX SDK from http://www.microsoft.com/downloads/details.aspx?FamilyID=23a22468-5807-4ff7-a363-ce6fe69b8f04&amp;amp;DisplayLang=en. Msh is part of the WinFX SDK.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007684"&gt;&lt;/a&gt;SMO is bunch of .NET assemblies and is included in the client tools for SQL Server 2005. It gives .NET programs object models of SQL Server that they can program against. It is also available as part of the Feature Pack for SQL Server 2005 available at http://www.microsoft.com/downloads/details.aspx?familyid=d09c1d60-a13c-4479-9b91-9e8b9d835cdc&amp;amp;displaylang=en.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007689"&gt;&lt;/a&gt;At least those were the URL's as I wrote this, things do have a tendency to move around though.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007690"&gt;&lt;/a&gt;Msh requires that .NET 2.0 be installed on your system, as was previously mentioned. This really a feature, not a requirement because anything that is available in a .NET assembly is available in msh. You can also extend msh with .NET assemblies to create your own shell, but I'll save that for another article. SMO is a set of .NET assemblies ergo it can be used from msh. The example in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt; just used one of the object models from SMO, i.e. "$canopus4" was an object that represented an instance of SQL Server and "databases" is a property of an instance of SQL Server that contains all the databases in that instance.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007709"&gt;&lt;/a&gt;Once you have installed .NET 2.0, msh, and SMO you are ready to get started. You won't be able to run the example shown in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt; right out of the box because msh only knows about the assemblies that are shipped with .NET 2.0, but I'll get to that shortly. There is a lot more information about msh, also called Monad, at http://www.microsoft.com/technet/scriptcenter/hubs/msh.mspx. There is even a book from O'Reilly publishing, Monad, ISBM: 0-596-10009-4. First we will look just enough of the basics to get stated using msh+SMO, use the references mentioned for more discussion. Once you get the shell installed and start it by running the msh.exe program. You will get a console window that looks very similar to the one for the DOS shell. It is shown in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_29473" class="XRef"&gt;Figure 2&lt;/a&gt;. You type command into this window.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-2.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007720"&gt;&lt;/a&gt;Figure 2&lt;a name="0_29473"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008310"&gt;&lt;/a&gt;Msh, as the name implies, is a shell. It wraps a hierarchical object model of, well, just about anything. The hierarchy is produced by what is called a Monad Provider and you can make your own. Msh comes with a number of providers, the obvious one is for the file system, but there are providers for the registry, environment and other things.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008318"&gt;&lt;/a&gt;&lt;a href="/blogs/dan/admin/mshsmo.htm#0_31690" class="XRef"&gt;Figure 3&lt;/a&gt; shows some very basic operations in msh. Variables can hold anything in msh, but their name always starts with "$". This example starts witha variable, named $a, being assigned j the value of one. Then another variable, named $b, being assigned k the value of $a plus one . Msh has all of the arithmetic and string operators you might expect. If you enter just the name of a variable l into msh it will write out it value.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007748"&gt;&lt;/a&gt;The "|" character it the pipe operator. It says to pass whatever is on its left to what ever is on its right. We use it to pass m the $b variable to the get-member cmdlet.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007813"&gt;&lt;/a&gt;In msh what you would probably call a command, msh calls a cmdlet. All cmdlets have the form of verb-noun. The get-member cmdlet tells you the type of the object passed into it and all the members of that type. Here we can see that the $b variable is of type System.Int32 and has a number of methods associated with it.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-3.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007721"&gt;&lt;/a&gt;Figure 3&lt;a name="0_31690"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007773"&gt;&lt;/a&gt;We can use any of those methods from msh.&lt;a href="/blogs/dan/admin/mshsmo.htm#0_75409" class="XRef"&gt;Figure 4&lt;/a&gt; shows some of those methods being used &lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-4.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007785"&gt;&lt;/a&gt;Figure 4&lt;a name="0_75409"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007733"&gt;&lt;/a&gt;If you have been working with .NET you will probably recognize these methods, all classes in .NET have them. In some cases you might not remember what the input parameters or return types are. If you were writing code in Visual Studio you would have Intellisense to help you along. Msh has something that is sort of like "command line intellisense", you can always ask about a method of a class. Just enter the object name and the name of the method separated by a "." as shown in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_47112" class="XRef"&gt;Figure 5&lt;/a&gt;. &lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-5.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007801"&gt;&lt;/a&gt;Figure 5&lt;a name="0_47112"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007812"&gt;&lt;/a&gt;This gives us our "command line intellisense". The information scrolls up on the screen rather than appearing in a tooltip, but the result is about the same. Msh is has a number of way to get help about and information out of objects. For example "get-help get*" will get you help on all the cmdlets that begin with "get".&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007817"&gt;&lt;/a&gt;That's a lightning introduction to msh, and is enough to go onto setting things up for using SMO. But before that we need a lightning introduction to SMO. There is a lot of reference material on SMO that is part of MSDN once you install either the SQL Server client tools or the Feature Pack for SQL Server 2005.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007818"&gt;&lt;/a&gt;SMO provides a number of object models for SQL Server. One of the these is an object model of an instance of SQL Server and all the objects it contains. Typically SMO is used by applications written to manage SQL Server, for example SSMS are based on SMO.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008279"&gt;&lt;/a&gt;Msh can use any of classes in a .NET assembly, including those in the assemblies distibuted with SMO, interactively or as part of a script. &lt;a href="/blogs/dan/admin/mshsmo.htm#0_47658" class="XRef"&gt;Figure 6&lt;/a&gt; shows an example of msh making an array of strings using the .NET System.String class. The new-object cmdlet is the equivalent of "new" in C#. It is used in this example to create an instance of a class, a string array, in variable $a, that can hold three strings. Next it fills the array with the strings "a", "b", and "c", then it enters $a and msh prints out its content.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-6.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1008208"&gt;&lt;/a&gt;Figure 6&lt;a name="0_47658"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007835"&gt;&lt;/a&gt;We see, now, that msh can make an instance of any .NET class and then use that instance in its script. The class we are interested in using is the Server class from SMO, specifically the Microsoft.SqlServer.Management.Smo.Server class. Note that there are a number of classes named Server in the .NET Framework, but they are in other namepaces.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007862"&gt;&lt;/a&gt;The Server class represents an instance of SQL Server and is initialized by passing the name or IP address of the server into the constuctor for the class. That is what the example in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt; did to access the default instance of SQL Server running on the CANOPUS5 machine.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007866"&gt;&lt;/a&gt;In order for an application to use a class from a .NET assembly that contains the class must be loaded into that application at runtime. This is typically done automatically because a reference added to the application when it is compiled. However msh does not automatically load the assemblies needed for SMO, you must do that explicitly in msh.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007880"&gt;&lt;/a&gt;There are number of assemblies associated with SMO, but for the typical things you might want to with an instance of SQL Server only three are needed. They are "Microsoft.SqlServer.ConnectionInfo" j, "Microsoft.SqlServer.Smo" k, and "Microsoft.SqlServer.SmoEnum" l. Assemblies can be loaded programmatically in .NET and &lt;a href="/blogs/dan/admin/mshsmo.htm#0_53596" class="XRef"&gt;Figure 7&lt;/a&gt; shows the Reflection.Assembly class being used to do this. Note that even though msh does not automatically load the SMO assemblies it does automatically load most of the assemblies in the .NET frame work including the assembly that includes the Reflection.Assembly class. Also note that msh in most cases is case insensitive.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-7.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007871"&gt;&lt;/a&gt;Figure 7&lt;a name="0_53596"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007875"&gt;&lt;/a&gt;Once these assemblies have been loaded into msh you can start to use SMO. These assemblies were loaded into msh prior to running the example shown in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt;. From &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt; we saw a very small part of the object model for an instance of SQL Server. We saw that the instance in the $canopus5 variable contained a collection of databases. The SMO object model for an instance of SQL Server is complete and is therefore rather large, I can't even begin to go through all of it here, but we can look at a small part of it just to see how it works. &lt;a href="/blogs/dan/admin/mshsmo.htm#0_54193" class="XRef"&gt;Figure 8&lt;/a&gt; shows a small part of the object model created by SMO for the CANOPUS5 instance of SQL Server shown in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_60184" class="XRef"&gt;Figure 1&lt;/a&gt;.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007903"&gt;&lt;/a&gt;The new-object cmdlet requires the full name of a class, including the namespace. It very useful to create a variable that hold the string for the "Microsoft.SqlServer.Management.Smo." namespace because it will be used quite often. That string is in the $smo variable in &lt;a href="/blogs/dan/admin/mshsmo.htm#0_54193" class="XRef"&gt;Figure 8&lt;/a&gt;.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1011069"&gt;&lt;/a&gt;Note that when you use msh+SMO to access SQL Server in this example the identity that you are using to run msh must have a Window login in SQL Server and you will only be able to access what the login can access. There are other ways to login to SQL Server with SMO, but I won't be covering them in this article.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-8.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007956"&gt;&lt;/a&gt;Figure 8&lt;a name="0_54193"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007983"&gt;&lt;/a&gt;To use an object model you have know the object model. Just trading off remembering a bunch of tables and stored procedures to use sqlcmd, for remembering a bunch of objects and their relations to each other to use msh+SMO isn't such a good deal. But wait, there' s more!?&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007994"&gt;&lt;/a&gt;We can use the get-member cmdlet to explore the object model. &lt;a href="/blogs/dan/admin/mshsmo.htm#0_85454" class="XRef"&gt;Figure 9&lt;/a&gt; shows how to do this. First the $advw variable is assigned the AdventureWorks database. The instance, $canopus5 has a property named databases that is an associative array. You use the name of the database you want as the index into that array.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008008"&gt;&lt;/a&gt;The object model is expanded through the properties of an object. The get-member cmdlet is used to get just the properties of the object. Note that &lt;a href="/blogs/dan/admin/mshsmo.htm#0_85454" class="XRef"&gt;Figure 9&lt;/a&gt; only shows the first dozen or so properties.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-9.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1007999"&gt;&lt;/a&gt;Figure 9&lt;a name="0_85454"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008003"&gt;&lt;/a&gt;Once we know an object's properties we can drill even further. &lt;a href="/blogs/dan/admin/mshsmo.htm#0_78152" class="XRef"&gt;Figure 10&lt;/a&gt; show the $advw variable being used to get the size and whether or not the AdventureWorks database is case sensensitive.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-10.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1008022"&gt;&lt;/a&gt;Figure 10&lt;a name="0_78152"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008026"&gt;&lt;/a&gt;So far we have seen that msh+SMO gives us "command line intellisense" and the ability to interactively drill through an object model of SQL server and even figure out what the model is on the fly. But you can also modify the instance of SQL Server. &lt;a href="/blogs/dan/admin/mshsmo.htm#0_31012" class="XRef"&gt;Figure 11&lt;/a&gt; show and example of this. It starts by creating a new database object and assigns it to the $NewDB variable. The database isn't yet part of the instance until you call the Create method on it, which is done next. Then just to confirm it worked it uses the format-table cmdlet to list the databases in the CANOPUS5. You can see that the Sales database has been added., &lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-11.gif" /&gt; &lt;/div&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1007899"&gt;&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1008039"&gt;&lt;/a&gt;Figure 11&lt;a name="0_31012"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008043"&gt;&lt;/a&gt;The last thing we will look at is functions. You can create you own functions with msh. Below is a function which is sort of like the sp_executesql stored procedure in SQL Server. This function connects to the local server then executes the command passed to it and generates tabular results for what comes back. I'm not going to go into the details of how it works, I'l leave that as an execise for you.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008052"&gt;&lt;/a&gt;function executesql {&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008053"&gt;&lt;/a&gt;$server = new-object ('microsoft.sqlserver.management.smo.server');&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008054"&gt;&lt;/a&gt;write-host "executing " $args[0]&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008055"&gt;&lt;/a&gt;write-host "Server:"$server.Name&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008056"&gt;&lt;/a&gt;$rdr = $server.ConnectionContext.executeReader($args[0]);&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008057"&gt;&lt;/a&gt;while($rdr.Read())&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008058"&gt;&lt;/a&gt;{&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008059"&gt;&lt;/a&gt;for($c = 0; $c -lt $rdr.FieldCount; $c++) { ($rdr.GetName($c) + ":" + $rdr.GetValue($c)) }&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008060"&gt;&lt;/a&gt;write-host ""&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008061"&gt;&lt;/a&gt;}&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008062"&gt;&lt;/a&gt;$rdr.close();&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008063"&gt;&lt;/a&gt;}&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008050"&gt;&lt;/a&gt;&lt;a href="/blogs/dan/admin/mshsmo.htm#0_67207" class="XRef"&gt;Figure 12&lt;/a&gt; shows using the executesql function to execute a select statement to get the rows from the authors table in the pubs database.&lt;/p&gt;
&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/mshsmo/mshsmo-12.gif" /&gt; &lt;/div&gt;&lt;/div&gt;
&lt;div&gt;
&lt;h3 class="Figure"&gt;&lt;a name="0_pgfId-1008099"&gt;&lt;/a&gt;Figure 12&lt;a name="0_67207"&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008103"&gt;&lt;/a&gt;The purpose of the article has been to be a very brief introduction into msh+SMO. It is very sketchy and skips over many, many details. It showed us that with msh+SMO we have a command line tool that has its own version of intellisense and can drill though an object model of SQL Server, even if you don't know the object model before you start. But it doesn't even begin to explore what can be done with msh+SMO. If feedback on this article indicates there is some real interest in msh+SMO I'll post some more in depth articles in the future, but what's here is enough to get you started.&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008119"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008120"&gt;&lt;/a&gt;Dan Sulllivan&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008121"&gt;&lt;/a&gt;Coming in April&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008131"&gt;&lt;/a&gt;A Developers Guide to SQL Server 2005&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008122"&gt;&lt;/a&gt;Bob Beauchemin and Dan Sullivan&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008123"&gt;&lt;/a&gt;Addison-Wesley&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008124"&gt;&lt;/a&gt;ISBN: 0321382188&lt;/p&gt;
&lt;p class="Body"&gt;&lt;a name="0_pgfId-1008295"&gt;&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>dan-sullivan</name></author><thr:total>15</thr:total></entry><entry><id>17786</id><published>2006-01-03T04:21:00.0-05:00</published><updated>2006-01-03T04:21:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: msh+SMO</title><content type="html">Cool! By the way: Is it possible to use objects on a remote computer (Computer B) when I am sitting on my comp (Computer A) with only a shell running MSH available? This might be usefull when a full GUI is unavailable / remote desktop can't be used...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>17787</id><published>2006-01-03T04:27:00.0-05:00</published><updated>2006-01-03T04:27:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: msh+SMO</title><content type="html">Sure, as long as you have the SMO assemblies on the machine you are running MSH on.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>17789</id><published>2006-01-03T07:28:00.0-05:00</published><updated>2006-01-03T07:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: msh+SMO</title><content type="html">I am not able to open the pdf, are you sure the document is ok?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>17790</id><published>2006-01-03T07:48:00.0-05:00</published><updated>2006-01-03T07:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: msh+SMO</title><content type="html">You will need Adobe Reader 7, the current version. You can download it from:
&lt;br /&gt;
&lt;br /&gt;http://www.adobe.com/products/acrobat/readstep2.html
&lt;br /&gt;
&lt;br /&gt;Dan</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>17793</id><published>2006-01-03T10:59:00.0-05:00</published><updated>2006-01-03T10:59:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Add oil to fire: SMO and Monad -- a flammable combination</title><content type="html">Euan pointed me to&amp;amp;nbsp;an interesting article about the use of Monad together with SMO. Those who know...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>17989</id><published>2006-01-13T04:06:00.0-05:00</published><updated>2006-01-13T04:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Microsoft finally wakes up to the 60s...</title><content type="html">Microsoft has added an actual, powerful shell to their arsenal.&amp;amp;nbsp; You know what I mean.&amp;amp;nbsp; It's...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>20560</id><published>2006-03-23T00:51:00.0-05:00</published><updated>2006-03-23T00:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Loving Mush - I mean Monad</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>21639</id><published>2006-04-12T05:49:00.0-05:00</published><updated>2006-04-12T05:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Meet Monad - your new best friend</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>32641</id><published>2006-07-28T07:46:00.0-05:00</published><updated>2006-07-28T07:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: msh+SMO</title><content type="html">I seriously wished that i had come across this blog entry about using SMO with PowerShell... months ago.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>36601</id><published>2006-08-29T11:42:00.0-05:00</published><updated>2006-08-29T11:42:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Show the status of the TFS jobs on a database server</title><content type="html">It's a very simple use of SMO, and there's much more you could do with this, but I wanted to get a very...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>37120</id><published>2006-09-03T21:19:00.0-05:00</published><updated>2006-09-03T21:19:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">tail -f on the TFS activity log</title><content type="html">We already saw how we could use the QueryServerRequests web method to tell the calls that are actively...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>41844</id><published>2006-11-06T01:12:00.0-05:00</published><updated>2006-11-06T01:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">SMO scripting at TechEd Europe</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>41937</id><published>2006-11-07T11:55:00.0-05:00</published><updated>2006-11-07T11:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">PowerSMO!</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>41938</id><published>2006-11-07T11:57:00.0-05:00</published><updated>2006-11-07T11:57:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">PowerSMO!</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>45672</id><published>2007-01-12T13:11:00.0-05:00</published><updated>2007-01-12T13:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Add oil to fire: SMO and Monad -- a flammable combination</title><content type="html">Euan pointed me to an interesting article about the use of Monad together with SMO . Those who know me</content><author><name>Anonymous</name></author><thr:in-reply-to ref="17703"></thr:in-reply-to></entry><entry><id>17822</id><published>2006-01-04T15:15:00.0-05:00</published><updated>2006-01-04T15:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Interpreting WCF</title><content type="html">
&lt;div&gt;
&lt;h1 class="Title"&gt;
&lt;a name="0_pgfId-998290"&gt;&lt;/a&gt;Interpreting WCF&lt;/h1&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-998295"&gt;&lt;/a&gt;In Aaron's latest MSDN Magazine article Learn The ABCs Of Programming Windows Communication Foundation, he covers building and hosting a service using WCF and then building a client to consume the service. Often one of the reasons you build a client so you can do some quick testing of your brand new service.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-998410"&gt;&lt;/a&gt;Aaron's article shows a couple of ways to generate a proxy that you can then use in a program to do some testing of your web service. Sometimes, though, you aren't really sure what to put in your test program... you just want to poke at your new web service. The Microsoft Command Shell, also referred to Monad or msh, that is part of the WinFX SDK is a great way to do this.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-998425"&gt;&lt;/a&gt;Part of Aaron's article shows how to make a service that has an Echo operation and host it on a multiple different endpoints. &lt;a class="XRef" href="InterpretingWCF.htm#0_81760"&gt;&lt;/a&gt; &lt;a class="XRef" href="InterpretingWCF.htm#0_66285"&gt;Figure 1&lt;/a&gt; shows using msh to a quick test of the Echo operation on three of these endpoints.&lt;a name="0_81760"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-1.gif" /&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-998435"&gt;&lt;/a&gt;&lt;a name="0_66285"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-998451"&gt;&lt;/a&gt;Pretty easy to do, huh? For a couple of days there Aaron just repeated everything you said to him... now we can see he was just working on getting that Echo operation perfect.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-998440"&gt;&lt;/a&gt;In a previous blog article, &lt;a class="URL" href="http://www.pluralsight.com/blogs/dan/archive/2005/12/29/17703.aspx"&gt;msh+SMO&lt;/a&gt;, I discussed using msh as a tool to manage SQL Server. That article has information on where you can obtain msh and some of the basics of using it. You can download msh from &lt;a class="URL" href="http://www.microsoft.com/technet/scriptcenter/topics/msh/download.mspx"&gt;http://www.microsoft.com/technet/scriptcenter/topics/msh/download.mspx&lt;/a&gt; or install the WinFX SDK. This article is going to continue that theme and discuss using msh to work with web services.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999372"&gt;&lt;/a&gt;The purpose article has a number of purposes; one is to show how to setup msh to do ad-hoc testing of a web service. Another is to show a little bit about the information available from a svcutil generated proxy. And lastly it is meant to show some of the features of msh.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999377"&gt;&lt;/a&gt;makeProxies is a function but isn't one of the functions included with msh, we are going to look at that next. There is a pdf version of this article and sample code at &lt;a class="URL" href="http://www.pluralsight.com/dan/arts/interpretingwcf.zip"&gt;http://www.pluralsight.com/dan/arts/interpretingwcf.zip&lt;/a&gt;. It includes the wsproxies.msh script that creates the makeProxies function.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-998449"&gt;&lt;/a&gt;Basically makeProxies does about what you would do to create proxies; it runs svcutil, then runs the C# compiler to build an assembly, loads the assembly into msh, then uses the config file created by svcutil to get the information it needs to create instances of the proxies.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999563"&gt;&lt;/a&gt;The wsproxies.msh script creates the makeProxies function. You run this script inside of msh. &lt;a class="XRef" href="InterpretingWCF.htm#0_27874"&gt;Figure 2&lt;/a&gt; shows this. One important point about running this script is that it must be run in the scope of the shell you are interacting with. The "." a at the beginning of the command line tells msh to run the script in the file b following in the current scope..&lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-2.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-999571"&gt;&lt;/a&gt;&lt;a name="0_27874"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999553"&gt;&lt;/a&gt;Depending on the configuration of msh you may not be able to run this script. The latest builds of msh have their ExecutionPolicy by default set to "Restricted" which limits msh to loading only signed scripts. You can change this to "RemoteSigned" by making a change to the registry. Set The "ExecutionPolicy" value of the registry "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSH\Microsoft.Management.Automation.msh" to "RemoteSigned" and then you will be able to load local scripts into msh.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999594"&gt;&lt;/a&gt;The first thing that wsproxies.msh does is a little bookkeeping as shown in &lt;a class="XRef" href="InterpretingWCF.htm#0_43020"&gt;Figure 3&lt;/a&gt;. It creates aliases a for svcutil and csc so the later part of the script will be less cluttered. More important though is that it loads b the System.ServiceModel assembly into msh. By default msh loads a number of assemblies from the .NET Framework, but not this one. Note that the @junk variable is there just to capture the text that would appear in the msh console window, so it can run silently.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999544"&gt;&lt;/a&gt;a   set-alias svcutil "C:\Program Files\Microsoft SDKs\Windows\v1.0\Bin\SvcUtil.exe"&lt;br /&gt;
 set-alias csc "C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\csc.exe"&lt;br /&gt;
b $junk = [reflection.assembly]::LoadWithPartialName("System.ServiceModel");&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-999438"&gt;&lt;/a&gt;&lt;a name="0_43020"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999368"&gt;&lt;/a&gt;The next thing that wsproxies.msh is to make the makeProxies function. &lt;a class="XRef" href="InterpretingWCF.htm#0_30390"&gt;&lt;/a&gt; &lt;a class="XRef" href="InterpretingWCF.htm#0_35020"&gt;Figure 4&lt;/a&gt; shows the beginning of the function definition. makeProxies takes a single parameter a which is a url for a WSDL file. This url is passed to svcutil b which uses it. Note that svcutil is pretty smart about how it uses that url, as long there is some way for the url to produce a WSDL file svcutil will figure it out. Note that the $junk variable is used to capture the output of scvutil that would normally go to the screen.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999757"&gt;&lt;/a&gt;The svcutil utility produces two outputs, a configuration file and a source code file. This script generates a random name for each of those. The [IO.Path]::GetRandomfilename() tells msh to run the static GetRandomFileName method of the System.IO.Path class and captures what this returns in the $CSFileName variable. The svcutil directory creates the files in the present working directory which in msh is in the $PWD variable. On of the nice things about msh is that you can use just about anything from the.NET Framework in your scripts.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999758"&gt;&lt;/a&gt;Note that, just to keep things simple, this script is not bullet-proof; it is not doing any error checking.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999769"&gt;&lt;/a&gt;Once svcutil has created the configuration file and the source code the C# compiler is used c to make an assembly that holds the proxies. Note that this assembly needs a reference to the System.Runtime.Serialization.dll assembly. The $dllName variable holds the random file name used for the proxy assembly.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999770"&gt;&lt;/a&gt;Once the assembly has been created it is loaded d into msh. Note that a bit of slight of hand is used to do this. The assembly could have been loaded directly from its file name, but instead this script reads the assembly into an array of bytes, then loads that array of bytes into msh. This is done this way so there will be no reference held on the assembly file itself that would prevent it from being cleaned up later on.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999711"&gt;&lt;/a&gt;function makeProxies ($url) a&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999712"&gt;&lt;/a&gt;{&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999713"&gt;&lt;/a&gt; $CSFileName = [IO.Path]::GetRandomFileName();&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999714"&gt;&lt;/a&gt; $config = $CSFilename + ".xml"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999715"&gt;&lt;/a&gt;b $junk=svcutil /noLogo  /directory:"$PWD" /config:"$config" /o:"$CSFileName"   "$url";&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999716"&gt;&lt;/a&gt; $CSFileName += ".cs";&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999717"&gt;&lt;/a&gt; $CSFileName = [IO.Path]::Combine($PWD, $CSFileName)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999718"&gt;&lt;/a&gt; $dllName = [IO.Path]::Combine($PWD, [IO.Path]::GetRandomFileName());&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999719"&gt;&lt;/a&gt;c $junk=csc /nologo /r:System.ServiceModel.dll /r:System.Runtime.Serialization.dll /   out:"$dllName" /target:library "$CSFileName"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999720"&gt;&lt;/a&gt; $bytes = [System.IO.File]::ReadAllBytes("$dllName");&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999721"&gt;&lt;/a&gt;d $junk=[reflection.assembly]::Load($bytes);&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999722"&gt;&lt;/a&gt; &lt;a name="0_30390"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000440"&gt;&lt;/a&gt;&lt;a name="0_35020"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999738"&gt;&lt;/a&gt;Now we have an assembly that can make proxies for the web services at the url passed into makeProxies loaded into msh. Next the makeProxies function creates a binding for each of the bindings in the configuration file. It will need these bindings to create the proxies for the endpoints listed in the configuration file. There is a binding element for binding that will be needed.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999937"&gt;&lt;/a&gt;&lt;a class="XRef" href="InterpretingWCF.htm#0_39462"&gt;Figure 5&lt;/a&gt; shows a fragment of a typical configuration file produced by svcutil. There is a binding element a for each of the bindings that will be needed for the endpoints listed in the configuration file. We will be looking at the endpoints shortly.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999786"&gt;&lt;/a&gt;configuration&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999787"&gt;&lt;/a&gt;    &amp;lt;system.serviceModel&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999788"&gt;&lt;/a&gt;        &amp;lt;client&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999928"&gt;&lt;/a&gt; ... &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999963"&gt;&lt;/a&gt; &amp;lt;/client&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999796"&gt;&lt;/a&gt;       &amp;lt;bindings&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999797"&gt;&lt;/a&gt;            &amp;lt;customBinding&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999798"&gt;&lt;/a&gt;           a     &amp;lt;binding name="BasicHttpBinding_YEchoService2a"&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999799"&gt;&lt;/a&gt;                    &amp;lt;textMessageEncoding maxReadPoolSize="64" &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999942"&gt;&lt;/a&gt;    maxWritePoolSize="16"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999800"&gt;&lt;/a&gt;                        messageVersion="Soap11Addressing1" writeEncoding="utf-8" /&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999801"&gt;&lt;/a&gt;                    &amp;lt;httpTransport manualAddressing="false" maxBufferPoolSize="524288"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999802"&gt;&lt;/a&gt;                        maxMessageSize="65536" allowCookies="false" &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999946"&gt;&lt;/a&gt;    authenticationScheme="Anonymous"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999803"&gt;&lt;/a&gt;                            bypassProxyOnLocal="false"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999950"&gt;&lt;/a&gt;    hostNameComparisonMode="StrongWildcard"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999804"&gt;&lt;/a&gt;                            mapAddressingHeadersToHttpHeaders="true"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999954"&gt;&lt;/a&gt;    proxyAuthenticationScheme="Anonymous"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999805"&gt;&lt;/a&gt;                            realm="" transferMode="Buffered" &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999958"&gt;&lt;/a&gt;    unsafeConnectionNtlmAuthentication="false"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999806"&gt;&lt;/a&gt;                        useDefaultWebProxy="true" /&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999807"&gt;&lt;/a&gt;                &amp;lt;/binding&amp;gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-999932"&gt;&lt;/a&gt;&lt;a name="0_39462"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-999936"&gt;&lt;/a&gt;&lt;a class="XRef" href="InterpretingWCF.htm#0_91161"&gt;Figure 6&lt;/a&gt; shows the part of the makeProxies that builds the bindings. We could use one of the XML stacks from the .NET Framework to pull the information out of this configuration file if we wanted to, but instead we will used the XML support built into msh itself. The $xdoc variable a is assigned the content of the configuration file. The [xml] tells msh that the data returned by get-content should be treated as xml. &lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000051"&gt;&lt;/a&gt;The $bindings variable b is an empty hashtable that the rest of the script will fill with bindings. The @{} syntax creates an empty hashtable.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000059"&gt;&lt;/a&gt;The foreach statement iterates though each of the binding elements in the configuration file. Because $xdoc is XML the in clause of the foreach statement can use a dotted syntax to select the binding elements. &lt;a class="XRef" href="InterpretingWCF.htm#0_95966"&gt;Figure 7&lt;/a&gt; shows how this syntax winds through the configuration file to select the binding elements.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000070"&gt;&lt;/a&gt;Inside the foreach statement the script tests to see if the binding is an http or tcp binding. It does this by using a dotted syntax with the $binding variable d to extract the httpTransport element, if there is one in this binding. If there is it creates an instance e of the BasicHttpBinding class then fills out its properties with values from the configuration file. Once the binding is intialized it is added to the $bindings hashtable and indexed by the value of the name attribute of the binding element in the configuration file. It does likewise for the tcpTransport element. &lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000078"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000079"&gt;&lt;/a&gt;It does likewise if it finds a tcpTransport element.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999975"&gt;&lt;/a&gt;a $xdoc = [xml]$(get-content $config)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000054"&gt;&lt;/a&gt;b $bindings = @{};&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000055"&gt;&lt;/a&gt;c foreach($binding in $xdoc.configuration."system.serviceModel".bindings.customBind ing.binding)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000056"&gt;&lt;/a&gt;{&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999979"&gt;&lt;/a&gt;d $httpTransport = $binding.httpTransport;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999980"&gt;&lt;/a&gt; $tcpTransport = $binding.tcpTransport;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999981"&gt;&lt;/a&gt; if($httpTransport -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999982"&gt;&lt;/a&gt; {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999983"&gt;&lt;/a&gt; e $b = new-object System.ServiceModel.BasicHttpBinding;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999984"&gt;&lt;/a&gt;  if($httpTransport.maxMessageSize -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999985"&gt;&lt;/a&gt;  {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999986"&gt;&lt;/a&gt;   $b.maxMessageSize = $httpTransport.maxMessageSize;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999987"&gt;&lt;/a&gt;  }&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999988"&gt;&lt;/a&gt;  if($httpTransport.maxBufferPoolSize -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999989"&gt;&lt;/a&gt;  {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999990"&gt;&lt;/a&gt;   $b.maxBufferPoolSize = $httpTransport.maxBufferPoolSize;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999991"&gt;&lt;/a&gt;  }&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999992"&gt;&lt;/a&gt;  if($httpTransport.hostNameComparisonMode -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999993"&gt;&lt;/a&gt;  {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999994"&gt;&lt;/a&gt;   $b.hostNameComparisonMode = $httpTransport.hostNameComparisonMode;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999995"&gt;&lt;/a&gt;  }&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999996"&gt;&lt;/a&gt;  if($httpTransport.bypassProxyOnLocal -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999997"&gt;&lt;/a&gt;  {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999998"&gt;&lt;/a&gt;   $b.bypassProxyOnLocal = $httpTransport.bypassProxyOnLocal;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-999999"&gt;&lt;/a&gt;  }&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000000"&gt;&lt;/a&gt;  if($httpTransport.transferMode -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000001"&gt;&lt;/a&gt;  {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000002"&gt;&lt;/a&gt;   $b.transferMode = $httpTransport.transferMode;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000003"&gt;&lt;/a&gt;  }  &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000004"&gt;&lt;/a&gt; f $bindings[$binding.name] = $b;  &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000005"&gt;&lt;/a&gt; }&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000006"&gt;&lt;/a&gt; if($tcpTransport -ne $null)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000007"&gt;&lt;/a&gt; {&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000008"&gt;&lt;/a&gt;  $b = new-object System.ServiceModel.NetTcpBinding&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000009"&gt;&lt;/a&gt;  $bindings[$binding.name] = $b;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000010"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000011"&gt;&lt;/a&gt; }&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000012"&gt;&lt;/a&gt;}&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-998367"&gt;&lt;/a&gt;&lt;a name="0_91161"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000029"&gt;&lt;/a&gt;Note that the script that builds the bindings could be more complete, but it does show the basic technique you would use.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000031"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-3.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000039"&gt;&lt;/a&gt;&lt;a name="0_95966"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000080"&gt;&lt;/a&gt;Once all the bindings have been built the script can build proxies for the endpoints. This is the easiest part. &lt;a class="XRef" href="InterpretingWCF.htm#0_88572"&gt;Figure 8&lt;/a&gt; shows a typical endpoint element from a configuration file created by svcutil.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000162"&gt;&lt;/a&gt;&amp;lt;endpoint address="http://localhost:8080/echo/svs" &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000167"&gt;&lt;/a&gt; bindingConfiguration="BasicHttpBinding_YEchoService2a"&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000163"&gt;&lt;/a&gt; binding="customBinding" &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000171"&gt;&lt;/a&gt; name="YEchoService2a" &lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000175"&gt;&lt;/a&gt; contract="YEchoService2a" /&amp;gt;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000149"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000153"&gt;&lt;/a&gt;&lt;a name="0_88572"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000123"&gt;&lt;/a&gt; &lt;a class="XRef" href="InterpretingWCF.htm#0_97564"&gt;Figure 9&lt;/a&gt; shows the foreach statement that uses a dotted syntax again, but this time to extract the endpoints from the configuration file. It uses the name of the contract for the endpoint with the suffix "Proxy" as the name of the class a for the proxy because that is the way that svcutil generates the name of the proxy class. It makes an instance b of that class using the binding indexed by the address attribute of the endpoint element.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000181"&gt;&lt;/a&gt;If you are used to using a language like C# or Visual Basic it might seem strange to just make an instance of an object and seemingly throw it away. With msh when you make an instance of an object but don't assign it to a variable it is just returned to the caller of the function. If you make more than one object this way then msh returns an array of all the object made this way.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000095"&gt;&lt;/a&gt;foreach($endpoint in $xdoc.configuration."system.serviceModel".client.endpoint)&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000096"&gt;&lt;/a&gt;{&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000097"&gt;&lt;/a&gt;a $class = $endpoint.contract + "Proxy";&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000098"&gt;&lt;/a&gt; $address = new-object System.ServiceModel.EndpointAddress $endpoint.address;&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000099"&gt;&lt;/a&gt; $b = $bindings[$endpoint.bindingConfiguration]&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000100"&gt;&lt;/a&gt;b new-object $class ($b, $address);&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000093"&gt;&lt;/a&gt;}&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000120"&gt;&lt;/a&gt;&lt;a name="0_97564"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000182"&gt;&lt;/a&gt;The last thing the script does is clean up after itself. This is shown in &lt;a class="XRef" href="InterpretingWCF.htm#0_44398"&gt;Figure 10&lt;/a&gt;. The remove-item does a delete in the file system. Note that we are able to delete the dll for the assembly because we used that slight of hand and loaded its bytes instead of the file itself.&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000185"&gt;&lt;/a&gt;remove-item $PWD/$config&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000186"&gt;&lt;/a&gt;remove-item $CSFileName&lt;/p&gt;
&lt;p class="Code"&gt;
&lt;a name="0_pgfId-1000183"&gt;&lt;/a&gt;remove-item $dllName&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000217"&gt;&lt;/a&gt;&lt;a name="0_44398"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000207"&gt;&lt;/a&gt;Now we have the makeProxies function that we used in &lt;a class="XRef" href="InterpretingWCF.htm#0_66285"&gt;Figure 1&lt;/a&gt; to try out the Echo operations on the endpoint from http://localhost:8080/echo. Of course I knew there were three endpoints and each had an echo operation, but you wouldn't necessarily know that for an arbitrary endpoint. However msh will tell you everything you need to know about the proxies. In fact the easiest thing you can do with the proxies returned by makeProxies is just let msh to tell you about them.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000228"&gt;&lt;/a&gt;&lt;a class="XRef" href="InterpretingWCF.htm#0_87160"&gt;Figure 11&lt;/a&gt; shows the format-list filter being used to list the properties of each of the proxies in $p. A filter in msh processes any object passed into it. The format-list filter lists the properties of the objects it processes. The $p variable, which is an array, is passed to the format-list filter though a pipe, that's the "|" symbol, so that each object it contain is processed individually by format-list. From this we can see that $p contains three endpoints.  &lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-4.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000232"&gt;&lt;/a&gt;&lt;a name="0_87160"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000275"&gt;&lt;/a&gt;What can the endpoints in $p do? We can use the same technique to drill into endpoints. &lt;a class="XRef" href="InterpretingWCF.htm#0_86849"&gt;Figure 12&lt;/a&gt; shows the properties of the first endpoint. As you see with this technique you can interactively discover the information about a proxy.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000271"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-5.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000282"&gt;&lt;/a&gt;&lt;a name="0_86849"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000290"&gt;&lt;/a&gt;If you drill a bit further you will find the operations associated with the proxy. &lt;a class="XRef" href="InterpretingWCF.htm#0_79634"&gt;Figure 13&lt;/a&gt; shows that the first proxy has two operations, Echo and EchoMessage.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000291"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-6.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000299"&gt;&lt;/a&gt;&lt;a name="0_79634"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000307"&gt;&lt;/a&gt;This seems to operate well for WCF, but what about non-WCF web services. Well, first of all there are web services and how they are implemented doesn't really matter. We'll try using makeProxies on an ancient web service; TerraService. &lt;a class="XRef" href="InterpretingWCF.htm#0_65571"&gt;Figure 14&lt;/a&gt; shows makeProxies being used to find the Longitude and Latitude of Boston, Massachusetts. I'll leave you, the reader, to do the drilling into the TerraService proxy to find out it capabilites.&lt;/p&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000314"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;div&gt;
&lt;img src="http://www.pluralsight.com/dan/IWCF/InterpretingWCF-7.gif" /&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h5 class="Figure"&gt;
&lt;a name="0_pgfId-1000322"&gt;&lt;/a&gt;&lt;a name="0_65571"&gt;&lt;/a&gt; &lt;/h5&gt;
&lt;p class="Body"&gt;
&lt;a name="0_pgfId-1000334"&gt;&lt;/a&gt;I hope this very brief introduction to using msh to do ad hoc testing of web services leads to dig deeper into msh. We have barely scratched the surface of what is possible with it. We used it to do ad hoc testing of web services, but really what were doing was testing some classes that happened to be proxies for web services; this technique can be used to do ad hoc testing on any class from the .NET Framework or those you design.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><author><name>dan-sullivan</name></author></entry><entry><id>21375</id><published>2006-04-09T11:13:00.0-05:00</published><updated>2006-04-09T11:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">EncryptByPassphrase Encryption Algorithm</title><content type="html">/*
&lt;p&gt;Copyright 2006 Danal Technology Inc 
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;SQL Server has a really straightforward way to encrypt data by using EncryptDataByPassphrase. What's handy about it is that it doesn't require any keys to be added to SQL Server as the other encryption mechanisms do, you just use DecryptByPassphrase to get the original data back.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;DECLARE @cyphertext VARBINARY(MAX)
&lt;/p&gt;&lt;p&gt;SET @cyphertext = EncryptByPassphrase('some handy passphrase', 'encrypt me!')
&lt;/p&gt;&lt;p&gt;SELECT CAST(DecryptByPassphrase('some handy passphrase', @cyphertext) AS VARCHAR(MAX))
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;This produces:
&lt;/p&gt;&lt;p&gt;encrypt me!
&lt;/p&gt;&lt;p&gt;As expected
&lt;/p&gt;&lt;p&gt;One of the questions that seems to come up quite often is "What the algorithm is being used?" Afterall if all it was doing was XORing the passphrase with the clear text that is input to it, it would not be much more useful than those "Secret Decoder" rings that sometimes are included as prizes in cerial boxes.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;The algorithm isn't documented in the Books Online, but a number of people have speculated that triple DES is used. That kinda' makes sense because that's what SQL Server uses to encrypt database master passwords and such. 
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;This blog enry shows how to confirm that EncyptByPassphrase, EBP for short, uses triple DES and also passes along a little bit of other info about symmetric encryption in SQL Server.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;One strategy that might be used to confirm that EBP uses triple DES is to encrypt some data using a triple DES directly and then encrypt the same data with EBP and compare the results. This technique will not work, but let's try it anyhow and see why that is. In the end part of implementing this strategy will be useful for the one that does work.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;Making a triple DES symmetric key in SQL Server is pretty easy: 
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;CREATE SYMMETRIC KEY MyKey &lt;br /&gt;WITH ALGORITHM = TRIPLE_DES&lt;br /&gt;ENCRYPTION BY PASSWORD = '58!^8Cg3G7)!1)4='&lt;br /&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;This creates, in effect, a random symmetric key. We want some more control. Another way to create a symmetric key is to have the key be based on a passphrase... hmmmm maybe that's what EBP does?
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;CREATE SYMMETRIC KEY MyKeyEBP WITH&lt;br /&gt;ALGORITHM = TRIPLE_DES,&lt;br /&gt;KEY_SOURCE='some handy passphrase'&lt;br /&gt;ENCRYPTION BY PASSWORD = '58!^8Cg3G7)!1)4='
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;Once we have a key we can encrypt some data.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;OPEN SYMMETRIC KEY MyKeyEBP DECRYPTION BY PASSWORD='58!^8Cg3G7)!1)4='&lt;br /&gt;SELECT EncryptByKey(Key_GUID('MyKeyEBP'), 'encrypt me!')
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;This produces some cyphertext:&lt;/p&gt;
&lt;p&gt;0x006516ECAA24984EBC491AF8BB1266F30100000069B2C375271736F6F762E1721AB97AAEC297BE868E89865856DFDF60134A7E02
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;A symmetric key must be opened before it is used. It has to be identified by it GUID, not its name, that's what the Key_GUID function is for.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;Lets encrypt the same text using EPB with the passphrase the same as the KEY_SOURCE for our symmetric key.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;SELECT EncryptByPassphrase('some handy passphrase', 'encrypt me!')
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt; 
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;This produces:
&lt;/p&gt;&lt;p&gt;0x01000000CD8F1DEDAFD40521968C9DC614463AB62D79B994A67C85F251E28D896EC51108
&lt;/p&gt;&lt;p&gt;As you can see, this is not even close. This doesn't prove one way or the other that EPB uses triple DES, but what's going on here?
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;There are a couple of things working against us. To see one of them, lets redo the MyKeyEBP encryption again.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;SELECT EncryptByKey(Key_GUID('MyKeyEBP'), 'encrypt me!')
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;0x006516ECAA24984EBC491AF8BB1266F30100000013868CB3274E23A53E011ACADE6D5167520EA94616CA5ECA96DA903B59DB5446
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;If you look closely you will see that even though we are encrypting the same text with the same key it is producing different results. That is because triple DES, as used by SQL Server, is non-deterministic. It does not produce the same results even if the same text is encrypted again with the same key. 
&lt;/p&gt;&lt;p&gt;Without going into a lot of detail it is due to the fact that triple DES is a block cypher and SQL Server uses a different random first block everytime it runs it, and includes the block it uses in the results.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;This is actually a very good thing, otherwise the bad guys could recognize when the same text was being encypted.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;So there is no reason to believe EBP would produce the same output as some other triple DES encrytion would.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;But compare the EPB output and the triple DES output again. They are not even the same length. The reason for this will become apparent by looking at the DecryptByKey function.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;SELECT CAST( DecryptByKey(0x006516ECAA24984EBC491AF8BB1266F30100000013868CB3274E23A53E011ACADE6D5167520EA94616CA5ECA96DA903B59DB5446) AS VARCHAR(MAX))
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;This produces:
&lt;/p&gt;&lt;p&gt;encrypt me!
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;which is what we would expect.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;Notice that all we gave DecryptByKey was the cypher text, we did not tell it which key to use. How did it pick the right one? The secret is that EncryptByKey always adds puts the guid for the key at the beginning of the cypher text it produces.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;SELECT CAST(Key_GUID('MyKeyEBP') AS VARBINARY(16))
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;Produces:
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;0x006516ECAA24984EBC491AF8BB1266F3
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;which is the beginning of 
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;0x006516ECAA24984EBC491AF8BB1266F30100000013868CB3274E23A53E011ACADE6D5167520EA94616CA5ECA96DA903B59DB5446
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;That means that if we put the GUID for the MyKeyEBP in front of the cypher text produced by EBP we should be able to decrypt it using DecryptByKey. The batch script below shows this. Make sure the MyKeyEBP is open when you run this script.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;-- make a variable to hold the cypher text&lt;br /&gt;DECLARE @cyphertext VARBINARY(MAX)&lt;br /&gt;-- use EBP to encrypt some text&lt;br /&gt;SET @cyphertext = EncryptByPassphrase('some handy passphrase', 'encrypt me!')&lt;br /&gt;-- select it just so we can see it&lt;br /&gt;SELECT @cyphertext&lt;br /&gt;-- next stick the guid for MyKeyEBP in front of the cypher text produced by EBP&lt;br /&gt;SET @cyphertext = CAST(Key_GUID('MyKeyEBP') AS VARBINARY(16)) + @cyphertext&lt;br /&gt;-- select it again just so we can see it&lt;br /&gt;SELECT @cyphertext&lt;br /&gt;-- now use DecryptByKey with the fixed up cyphertext&lt;br /&gt;SELECT CAST(DecryptByKey(@cyphertext) AS VARCHAR(MAX))
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;The script produces:
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;0x01000000A54E180B2BF9545268BE3E7CD59235E48053F4174FF1848C69A61ACA37159337
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;0x006516ECAA24984EBC491AF8BB1266F301000000A54E180B2BF9545268BE3E7CD59235E48053F4174FF1848C69A61ACA37159337
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;encrypt me!
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;/*
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;So we can conclude that EBP uses triple DES becuase we can run the cyphertext it produce through a triple DES decypter and it produces the same text that EBP encrypted.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;At this point some caveats are in order. 
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;When you use a passphrase to encrypt data, or use one to produce a symmetric key, you are responsible for maintaining the privacy of the passphrase. This typically is not that easy to do, especially if the passphrase has to be given to others. Most of the other encryption features in SQL Server are there so that you will can use SQL Server to keep your keys private.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;The passphrase you choose determines how strong the key is that encrypts your data, not so much the algorithm used. BTW 'some handy passphrase' is a terrible choice for a passphrase. It has to be much longer and preferably be just a random sequence of characters.
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;In any case if you abide by the caveats for EncryptByPassphrase is a very handy tool to have. It is very easy to use, and not even the sysadmin or database owner will be able to decrypt your data.
&lt;/p&gt;&lt;p&gt; 
&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.aw-bc.com/catalog/academic/product/0,1144,0321382188,00.html"&gt;A Developers Guide To SQL Server 2005&lt;/a&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;*/
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;&lt;p&gt;
&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>42</thr:total></entry><entry><id>21410</id><published>2006-04-10T04:24:00.0-05:00</published><updated>2006-04-10T04:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Interesting Finds</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>32784</id><published>2006-08-02T12:25:00.0-05:00</published><updated>2006-08-02T12:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: EncryptByPassphrase Encryption Algorithm</title><content type="html">Thanks for the interesting article and breakdown :)
&lt;br /&gt;
&lt;br /&gt;I would agree with you that this seems to be done with TRIPLE_DES. One reason I think so is that the CREATE MASTER KEY statement uses TRIPLE_DES in addition to the passwords that you mentioned. Makes sense to me...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>76752</id><published>2010-05-18T12:17:14.0-05:00</published><updated>2010-05-18T12:17:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Knoahsoft Announces Pci Compliance For Today&amp;amp;#8217;s Ip Contact Centers | voip equipment blog</title><content type="html">Pingback from  Knoahsoft Announces Pci Compliance For Today’s Ip Contact Centers | voip equipment blog</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>78889</id><published>2010-05-21T15:02:34.0-05:00</published><updated>2010-05-21T15:02:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Second Hand 300 Lexus Gs430, Lexus Gs430 Used Search Pre Owned</title><content type="html">Pingback from  Second Hand 300 Lexus Gs430, Lexus Gs430 Used Search Pre Owned</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>80010</id><published>2010-05-22T03:43:22.0-05:00</published><updated>2010-05-22T03:43:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Parts 1989 Mercury Topaz Bumper Cover Headlight Assembly, Smokey Topaz Quartz Countertop</title><content type="html">Pingback from  Parts 1989 Mercury Topaz Bumper Cover Headlight Assembly, Smokey Topaz Quartz Countertop</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>80181</id><published>2010-05-22T05:17:04.0-05:00</published><updated>2010-05-22T05:17:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sale Mazda Millenia S, Millenia Code Egr Valve</title><content type="html">Pingback from  Sale Mazda Millenia S, Millenia Code Egr Valve</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>82001</id><published>2010-05-22T20:43:59.0-05:00</published><updated>2010-05-22T20:43:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy 1998 Volvo S90 Replacement, Onkyo Ht S907 Home Theater System</title><content type="html">Pingback from  Buy 1998 Volvo S90 Replacement, Onkyo Ht S907 Home Theater System</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>83164</id><published>2010-05-23T06:06:05.0-05:00</published><updated>2010-05-23T06:06:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2002 Mercedes Benz S500 Manual, Toshiba Portege R500 S5007v Review - 183.ja3ra.com</title><content type="html">Pingback from  2002 Mercedes Benz S500 Manual, Toshiba Portege R500 S5007v Review - 183.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>83376</id><published>2010-05-23T07:38:22.0-05:00</published><updated>2010-05-23T07:38:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">S2000 Duraflex Body Kits 2008 Lexus Sc430, Oem Sc400 Lexus Sc430 - 291.luna-atra.net</title><content type="html">Pingback from  S2000 Duraflex Body Kits 2008 Lexus Sc430, Oem Sc400 Lexus Sc430 - 291.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>84424</id><published>2010-05-24T10:28:23.0-05:00</published><updated>2010-05-24T10:28:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lexus Lx450 Heater Aftermarket, Lx450 Episode Lexus Ls400 - 143.mfbattle.com</title><content type="html">Pingback from  Lexus Lx450 Heater Aftermarket, Lx450 Episode Lexus Ls400 - 143.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>84444</id><published>2010-05-24T10:36:40.0-05:00</published><updated>2010-05-24T10:36:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sage 2005 Acura Mdx Touring, Radiator 2007 Acura Tsx Brake Caliper - 302.1fh.org</title><content type="html">Pingback from  Sage 2005 Acura Mdx Touring, Radiator 2007 Acura Tsx Brake Caliper - 302.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>84581</id><published>2010-05-24T11:42:22.0-05:00</published><updated>2010-05-24T11:42:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pulsar Nx 04 Nissan Sentra 240sx S14, 620 Pickup Discounts Nissan 240sx - 90.luna-atra.net</title><content type="html">Pingback from  Pulsar Nx 04 Nissan Sentra 240sx S14, 620 Pickup Discounts Nissan 240sx - 90.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>84897</id><published>2010-05-24T14:18:57.0-05:00</published><updated>2010-05-24T14:18:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cj5a Used Review, Car Lights Jeep Cj5a - 484.an74.com</title><content type="html">Pingback from  Cj5a Used Review, Car Lights Jeep Cj5a - 484.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85024</id><published>2010-05-24T15:19:25.0-05:00</published><updated>2010-05-24T15:19:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Scrambler Rent Thruxton, Scrambler 78 - 41.mfbattle.com</title><content type="html">Pingback from  Scrambler Rent Thruxton, Scrambler 78 - 41.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85228</id><published>2010-05-24T17:06:14.0-05:00</published><updated>2010-05-24T17:06:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dodge Pb200 Bulb Fog Light, Pb200 Support - 100.tvshowzone.com</title><content type="html">Pingback from  Dodge Pb200 Bulb Fog Light, Pb200 Support - 100.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85460</id><published>2010-05-24T19:19:20.0-05:00</published><updated>2010-05-24T19:19:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lincoln Aviator Manual Free, Used Navigator In Delaware Lincoln Aviator - 332.dlmreza.net</title><content type="html">Pingback from  Lincoln Aviator Manual Free, Used Navigator In Delaware Lincoln Aviator - 332.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85484</id><published>2010-05-24T19:30:06.0-05:00</published><updated>2010-05-24T19:30:06.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevrolet Trailblazer Kofferraum 2002 Audi, 2006 Chevrolet Trailblazer Ss Fuel Economy - 380.eumreborn.com</title><content type="html">Pingback from  Chevrolet Trailblazer Kofferraum 2002 Audi, 2006 Chevrolet Trailblazer Ss Fuel Economy - 380.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85566</id><published>2010-05-24T22:45:33.0-05:00</published><updated>2010-05-24T22:45:33.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1953 Ford F100 Frame, 1981 Ford F100 Stepside - 46.jeepsunlimted.com</title><content type="html">Pingback from  1953 Ford F100 Frame, 1981 Ford F100 Stepside - 46.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85667</id><published>2010-05-24T23:32:59.0-05:00</published><updated>2010-05-24T23:32:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2001 Corvette Sale, Factory Five Corvette - 86.ja3ra.com</title><content type="html">Pingback from  2001 Corvette Sale, Factory Five Corvette - 86.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>85771</id><published>2010-05-25T00:20:40.0-05:00</published><updated>2010-05-25T00:20:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Aluminum Radiator Phoenix Az, Phoenix Honda Store Glasgow - 211.an74.com</title><content type="html">Pingback from  Aluminum Radiator Phoenix Az, Phoenix Honda Store Glasgow - 211.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>86231</id><published>2010-05-25T04:09:28.0-05:00</published><updated>2010-05-25T04:09:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">P 51 Mustang Wingspan, Used Mustang Sale Bullitt Rims - 495.eumreborn.com</title><content type="html">Pingback from  P 51 Mustang Wingspan, Used Mustang Sale Bullitt Rims - 495.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>86289</id><published>2010-05-25T04:34:54.0-05:00</published><updated>2010-05-25T04:34:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1961 Oldsmobile Super 88 Parts, Sony Ericsson K550i Cnet - 304.zapstreaming.com</title><content type="html">Pingback from  1961 Oldsmobile Super 88 Parts, Sony Ericsson K550i Cnet - 304.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>86517</id><published>2010-05-25T11:26:19.0-05:00</published><updated>2010-05-25T11:26:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chrylser Lamp Headlight, Chrylser Alternative Green - 94.renters.ws</title><content type="html">Pingback from  Chrylser Lamp Headlight, Chrylser Alternative Green - 94.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>86812</id><published>2010-05-25T13:48:31.0-05:00</published><updated>2010-05-25T13:48:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Toyota Echo Headlight Halogen Bulbs, Echo Portugal - 106.tvshowzone.com</title><content type="html">Pingback from  Toyota Echo Headlight Halogen Bulbs, Echo Portugal - 106.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>87281</id><published>2010-05-25T17:50:56.0-05:00</published><updated>2010-05-25T17:50:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Colony Park Discount Won, Led Plymouth Colony - 380.tgrconversions.com</title><content type="html">Pingback from  Colony Park Discount Won, Led Plymouth Colony - 380.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>87454</id><published>2010-05-25T19:18:57.0-05:00</published><updated>2010-05-25T19:18:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Grand Marquis Body Kits, Marquis Sable Used Parts Mercury Ln7 - 226.computeronlinebingo.com</title><content type="html">Pingback from  Grand Marquis Body Kits, Marquis Sable Used Parts Mercury Ln7 - 226.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>87943</id><published>2010-05-27T04:57:42.0-05:00</published><updated>2010-05-27T04:57:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 - 1983 @ Junk Yards Ford Escape Dismantle, Parts 2008 Ford Escape Mercury Mariner - 254.codebluehacks.org</title><content type="html">Pingback from  1995 - 1983 @ Junk Yards Ford Escape Dismantle, Parts 2008 Ford Escape Mercury Mariner - 254.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>87963</id><published>2010-05-27T05:11:49.0-05:00</published><updated>2010-05-27T05:11:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ S Golf Clubs Renewable Choice, Nickent Golf Entertainment - 464.myipgirl.com</title><content type="html">Pingback from  1989 - 2000 @ S Golf Clubs Renewable Choice, Nickent Golf Entertainment - 464.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88213</id><published>2010-05-27T08:13:13.0-05:00</published><updated>2010-05-27T08:13:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2005 - 2002 @ Lion Country Safari Tickets, Safari Cars Envoy Xl Used Gmc Acadia - 139.unlockiphone30.net</title><content type="html">Pingback from  2005 - 2002 @ Lion Country Safari Tickets, Safari Cars Envoy Xl Used Gmc Acadia - 139.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88414</id><published>2010-05-30T17:51:26.0-05:00</published><updated>2010-05-30T17:51:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1981 - 1980 @ Gmc V3500 Part Fender Flares Matte Black, Motors V3500 Part Fuel - 192.computeronlinebingo.com</title><content type="html">Pingback from  1981 - 1980 @ Gmc V3500 Part Fender Flares Matte Black, Motors V3500 Part Fuel - 192.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88419</id><published>2010-05-30T17:55:45.0-05:00</published><updated>2010-05-30T17:55:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1981 - 2003 @ V323i Headlight Accessories, Wheels 1998 Bmw 323is - 262.unlockiphone30.net</title><content type="html">Pingback from  1981 - 2003 @ V323i Headlight Accessories, Wheels 1998 Bmw 323is - 262.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88457</id><published>2010-05-30T18:16:55.0-05:00</published><updated>2010-05-30T18:16:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1986 - 1982 @ Part Energy Gmc C2500, C25k C2500 Tacoma Buy - 431.computeronlinebingo.com</title><content type="html">Pingback from  1986 - 1982 @ Part Energy Gmc C2500, C25k C2500 Tacoma Buy - 431.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88587</id><published>2010-05-30T20:22:27.0-05:00</published><updated>2010-05-30T20:22:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2002 - 2007 @ Compaq Presario F500 Battery Prices, Compaq Presario F500 Cell Replacement Hp Pavilion Dv6000 - 378.1fh.org</title><content type="html">Pingback from  2002 - 2007 @ Compaq Presario F500 Battery Prices, Compaq Presario F500 Cell Replacement Hp Pavilion Dv6000 - 378.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88595</id><published>2010-05-30T20:26:09.0-05:00</published><updated>2010-05-30T20:26:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 - 1997 @ 1971 Pontiac Grandville Sale Convertible Top, Pontiac Grandville Used Am Fm Music - 177.binggreen.com</title><content type="html">Pingback from  1995 - 1997 @ 1971 Pontiac Grandville Sale Convertible Top, Pontiac Grandville Used Am Fm Music - 177.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88653</id><published>2010-05-30T20:54:18.0-05:00</published><updated>2010-05-30T20:54:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 1980 @ Relay January, 240sx Bulb Check Relay - 304.1fh.org</title><content type="html">Pingback from  1999 - 1980 @ Relay January, 240sx Bulb Check Relay - 304.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88729</id><published>2010-05-30T23:54:57.0-05:00</published><updated>2010-05-30T23:54:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2005 - 1992 @ Toyota Previa Dealers, Buy Previa Nissan Murano - 479.computeronlinebingo.com</title><content type="html">Pingback from  2005 - 1992 @ Toyota Previa Dealers, Buy Previa Nissan Murano - 479.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88907</id><published>2010-05-31T01:30:57.0-05:00</published><updated>2010-05-31T01:30:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1981 - 1984 @ C55 Ml55 Amg Replacement Part, Ml430 Model Ml55 Amg Fcp Groton - 10.cmanager.org</title><content type="html">Pingback from  1981 - 1984 @ C55 Ml55 Amg Replacement Part, Ml430 Model Ml55 Amg Fcp Groton - 10.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88958</id><published>2010-05-31T02:00:48.0-05:00</published><updated>2010-05-31T02:00:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1986 - 1982 @ 1800 Find, 1800 Sale 2002 Honda Highway Pegs - 311.ja3ra.com</title><content type="html">Pingback from  1986 - 1982 @ 1800 Find, 1800 Sale 2002 Honda Highway Pegs - 311.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>88973</id><published>2010-05-31T02:09:58.0-05:00</published><updated>2010-05-31T02:09:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1996 - 1985 @ Driver Hp Photosmart 3210 Tout, Natural Gas Grills Weber Spirit E 210 Finest - 473.myipgirl.com</title><content type="html">Pingback from  1996 - 1985 @ Driver Hp Photosmart 3210 Tout, Natural Gas Grills Weber Spirit E 210 Finest - 473.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>89035</id><published>2010-05-31T12:33:18.0-05:00</published><updated>2010-05-31T12:33:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1998 - 1980 @ K2500 Suburban Headlight 6.5 L Petro, Gmc K2500 Used Car Apartments - 260.myipgirl.com</title><content type="html">Pingback from  1998 - 1980 @ K2500 Suburban Headlight 6.5 L Petro, Gmc K2500 Used Car Apartments - 260.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>89160</id><published>2010-05-31T13:43:10.0-05:00</published><updated>2010-05-31T13:43:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1981 - 1984 @ Electric Ford Pinto, Pinto Radiator 1979 Ford Repair Estimates - 260.animejin.com</title><content type="html">Pingback from  1981 - 1984 @ Electric Ford Pinto, Pinto Radiator 1979 Ford Repair Estimates - 260.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>89187</id><published>2010-05-31T13:59:16.0-05:00</published><updated>2010-05-31T13:59:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1990 - 2005 @ P35 P3005 Van Aftermarket Years Msi K9n Neo F V2, Canon Pixma Ip3500 Driver - 352.renters.ws</title><content type="html">Pingback from  1990 - 2005 @ P35 P3005 Van Aftermarket Years Msi K9n Neo F V2, Canon Pixma Ip3500 Driver - 352.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="21375"></thr:in-reply-to></entry><entry><id>32588</id><published>2006-07-27T06:41:00.0-05:00</published><updated>2006-07-27T06:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Making Scripts to deploy CLR functionality from SQL Server 2005</title><content type="html">&lt;p&gt;One of the things that seems to be missing from Visual Studio's support of SQL Server 2005 for CLR based functions, stored procedures and such it the ability to build a deployment script. Visual Studio makes it easy to deploy CLR functionality to SQL Server while you are in a developement enviornment, but no way to make a script to do the deployment. Of course the purpose of Visual Studio deployment feature is to make it easy to change functionality as you proceed developing it, by removing most everything that needs to be removed before deploying the new versions.&lt;/p&gt;
&lt;p&gt;I've put togther a sample program that uses SMO [SQL Server Management Objects] that allows you to select some assemblies for deployment, then build a script. It looks like:&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;&lt;div&gt;&lt;img src="http://www.pluralsight.com/dan/CLRDeploy/ClrDeployScripter.gif" /&gt; &lt;/div&gt;

&lt;p&gt;The main purpose of this sample is just to show some of the features of SMO, its not a production utility. There are a lot of things that could be added to it and in my copious spare time I just might add them. The sample is implemented using C# and you can download the &lt;a href="http://www.pluralsight.com/dan/CLRDeploy/ClrDeployScripter.zip"&gt;project from here.&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;The main problem with deploying assemblies is that the must be deployed in the correct order. The sys.assembly_references system view shows you the dependencies. If assembly A depends on assembly B, then assembly B must be loaded before assembly A. Fortunately a recursive common table expression can sort this all out and SMO can execute ad hoc SQL and get the results back in a dataset.&lt;/p&gt;
&lt;p&gt;Look in the DoScript function to see how SMO can be used to build an object model of a database. Objects in SMO can be scripted just be calling their associated Script function. So just look through the comments in this method to see how this is done.&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>1</thr:total></entry><entry><id>32601</id><published>2006-07-27T19:29:00.0-05:00</published><updated>2006-07-27T19:29:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Interesting Finds: July 27, 2006</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="32588"></thr:in-reply-to></entry><entry><id>32597</id><published>2006-07-27T08:50:00.0-05:00</published><updated>2006-07-27T08:50:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">&lt;p&gt;I saw a wish list blogged at http://omnibuzz-sql.blogspot.com/2006/07/next-version-of-sql-server-wish-list.html. It wanted a sql function that would evaluate an string arithmetic expression in the next version of SQL Server. It turns out that function is already available, sort of, in T-SQL on SQL Server 2005. Here is an example: &lt;/p&gt;&lt;pre&gt; 
DECLARE @x xml
DECLARE @v FLOAT
SET @x = ''
SET @v = @x.value('(1 + 4) div 3', 'FLOAT')
SELECT @v
 ----------------
1.666666
&lt;/pre&gt;
&lt;p&gt;Unfortunately the following will not work...&lt;/p&gt;&lt;pre&gt;DECLARE @x xml
SET @x = ''
DECLARE @e VARCHAR(MAX)
DECLARE @v FLOAT
SET @e = '(1 + 4) div 3'
SET @v = @x.value(@v, 'FLOAT')
SELECT @v
&lt;/pre&gt;
&lt;p&gt;... because value and other XQuery functions require literal XQuery expressions. But all is not lost!&lt;/p&gt;
&lt;p&gt;We can weave together a number of .NET technologies in SQL Server 2005 and make our own EvaluateArithmethicExpression scalar valued user defined function. All we have to do is add some basic XPath to an XPathNavigator and regular expressions. XPath itself has builtin support for evaluating arithmetic expressions, albeit some of the operations are names rather than single characters, but a regular expression can clean that up. At the end of this article is a C# function that implements a CLR based user defined function that evaluates string arithmetic expressions. Here is an example of using this function: &lt;/p&gt;&lt;pre&gt;&lt;font size="2" color="#0000ff"&gt;&lt;/font&gt;&lt;/pre&gt;&lt;p&gt;&lt;font color="#000000"&gt;SELECT&lt;/font&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; dbo&lt;/font&gt;&lt;font size="2"&gt;.&lt;/font&gt;&lt;font size="2"&gt;EvaluateArithmethicExpression&lt;/font&gt;&lt;font size="2"&gt;(&lt;/font&gt;&lt;font size="2"&gt;'(50.1234 * 1 + 2)/3'&lt;/font&gt;&lt;font size="2"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;DECLARE&lt;/font&gt;&lt;font size="2" color="#000000"&gt; @f &lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#000000"&gt;FLOAT&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font color="#000000"&gt;DECLARE&lt;/font&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; @e &lt;/font&gt;&lt;font size="2"&gt;VARCHAR&lt;/font&gt;&lt;font size="2"&gt;(&lt;/font&gt;&lt;font size="2"&gt;MAX&lt;/font&gt;&lt;font size="2"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;SET&lt;/font&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; @e &lt;/font&gt;&lt;font size="2"&gt;=&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2"&gt;'(50.1234 * 1 + 2)/3'&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;SET&lt;/font&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; @f &lt;/font&gt;&lt;font size="2"&gt;=&lt;/font&gt;&lt;font size="2"&gt; dbo&lt;/font&gt;&lt;font size="2"&gt;.&lt;/font&gt;&lt;font size="2"&gt;EvaluateArithmethicExpression&lt;/font&gt;&lt;font size="2"&gt;(&lt;/font&gt;&lt;font size="2"&gt;@e&lt;/font&gt;&lt;font size="2"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;SELECT&lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#000000"&gt; @f&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;SET&lt;/font&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; @e &lt;/font&gt;&lt;font size="2"&gt;=&lt;/font&gt;&lt;font size="2"&gt; &lt;/font&gt;&lt;font size="2"&gt;'((50.1234 * 1 + 2)/3) % 5'&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;SET&lt;/font&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; @f &lt;/font&gt;&lt;font size="2"&gt;=&lt;/font&gt;&lt;font size="2"&gt; dbo&lt;/font&gt;&lt;font size="2"&gt;.&lt;/font&gt;&lt;font size="2"&gt;EvaluateArithmethicExpression&lt;/font&gt;&lt;font size="2"&gt;(&lt;/font&gt;&lt;font size="2"&gt;@e&lt;/font&gt;&lt;font size="2"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;SELECT&lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#000000"&gt; @f&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2"&gt;&lt;/font&gt; &lt;/p&gt;&lt;font size="2"&gt;&lt;font size="1"&gt;&lt;/font&gt;&lt;/font&gt;&lt;p&gt;&lt;font color="#000000"&gt;----------------------&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;17.3744666666667&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;(1 row(s) affected)&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;&lt;/font&gt; &lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;----------------------&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;17.3744666666667&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;(1 row(s) affected)&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;&lt;/font&gt; &lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;----------------------&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;2.37446666666667&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font size="2" color="#000000"&gt;(1 row(s) affected)&lt;/font&gt;&lt;/p&gt;&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can even access all the math functions in XPath itself...&lt;/p&gt;&lt;font size="2" color="#0000ff"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font color="#000000" face="Courier New"&gt;DECLARE&lt;/font&gt;&lt;font size="2" color="#000000" face="Courier New"&gt; @f &lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#000000" face="Courier New"&gt;FLOAT&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color="#000000" face="Courier New"&gt;SET&lt;/font&gt;&lt;font face="Courier New"&gt;&lt;font color="#000000"&gt;&lt;font size="2"&gt; @f &lt;/font&gt;&lt;font size="2"&gt;=&lt;/font&gt;&lt;font size="2"&gt; dbo&lt;/font&gt;&lt;font size="2"&gt;.&lt;/font&gt;&lt;font size="2"&gt;EvaluateArithmethicExpression&lt;/font&gt;&lt;font size="2"&gt;(&lt;/font&gt;&lt;font size="2"&gt;'ceiling((50.1234 * 1 + 2)/3) % 5'&lt;/font&gt;&lt;font size="2"&gt;)&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;
&lt;/font&gt;&lt;p&gt;&lt;font color="#000000" face="Courier New"&gt;SELECT&lt;/font&gt;&lt;font size="2"&gt;&lt;font color="#000000" face="Courier New"&gt; @f&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;&lt;font size="2"&gt;&lt;font size="1"&gt;
&lt;/font&gt;&lt;/font&gt;&lt;p&gt;&lt;font face="Courier New"&gt;----------------------&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size="3" face="Courier New"&gt;3&lt;/font&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Here is the source code for the EvaluateArithmeticExpression&lt;/p&gt;&lt;pre&gt;using System;
using System.Data;
using System.Data.SqlClient;
using System.Data.SqlTypes;
using Microsoft.SqlServer.Server;
using System.Xml;
using System.Xml.XPath;
using System.IO;
using System.Text.RegularExpressions;
public class ArithmeticCalculations
{
 // dummy doc for XPath eval's
 static readonly XPathDocument xpdoc;
 static ArithmeticCalculations()
 {
  StringReader sr = new StringReader("&lt;a&gt;");
  // doesn't matter whats in the doc
  // we just need something to call evaluate on
  xpdoc = new XPathDocument(sr);
  sr.Close();
 }
 [Microsoft.SqlServer.Server.SqlFunction]
 public static SqlDouble EvaluateArithmethicExpression(SqlString expression)
 {
  // give me a null and you will get on back
  if (expression.IsNull)
  {
   return SqlDouble.Null;
  }
  // use regex's to convert typical arithmetic ops to the ones XPath likes
  // also force the result to be a double
  String useExpression = "number("+Regex.Replace(expression.Value, "/", " div ")+")";
  useExpression = Regex.Replace(useExpression, "%", " mod ");
  XPathNavigator nav = xpdoc.CreateNavigator();
  SqlDouble retval = SqlDouble.Null;
  try
  {
   retval = (Double)nav.Evaluate(useExpression);
  }
  catch
  {
   // if its not a plain ol' arithmetic expression
   // you will get a null back
   retval = SqlDouble.Null;
  }
  return retval;
 }
};
&lt;/a&gt;&lt;/pre&gt;</content><author><name>dan-sullivan</name></author><thr:total>137</thr:total></entry><entry><id>32603</id><published>2006-07-28T00:28:00.0-05:00</published><updated>2006-07-28T00:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">DECLARE @f1 FLOAT
&lt;br /&gt;CREATE TABLE #t(f float)
&lt;br /&gt;INSERT #t
&lt;br /&gt;EXEC('DECLARE @f2 FLOAT;SET @f2 = 1.0 + 2.0/3.0;SELECT @f2')
&lt;br /&gt;SELECT	*
&lt;br /&gt;FROM	#t
&lt;br /&gt;DROP TABLE #t
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>32798</id><published>2006-08-03T21:34:00.0-05:00</published><updated>2006-08-03T21:34:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">Nice article Dan. the XML way was good.. only one problem, value method requires a string literal.. 
&lt;br /&gt;And if I am going to use a string literal it defeats the purpose of using a string to evaluate... Correct me if I am wrong...
&lt;br /&gt;The CLR way is cool.. juz what I was looking for... Thanks for granting my wish.. may god bless you :)
&lt;br /&gt;
&lt;br /&gt;-Dark Omni
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>37756</id><published>2006-09-12T19:15:00.0-05:00</published><updated>2006-09-12T19:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions - Exception</title><content type="html">When I try to run your sample query, I get an exception: "The type initializer for 'TESTSCORING1.ArithmeticCalculations' threw an exception. ---&amp;gt; System.Xml.XmlException: Root element is missing." I don't see how any object would even require a Root element, I mean, there's not XMLDocument here I see and XPathDocument is ReadOnly.
&lt;br /&gt;
&lt;br /&gt;What am I missing?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>37760</id><published>2006-09-13T03:55:00.0-05:00</published><updated>2006-09-13T03:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">Not quite sure what happened  but replace:
&lt;br /&gt;
&lt;br /&gt;static readonly XPathDocument xpdoc;
&lt;br /&gt;
&lt;br /&gt;with
&lt;br /&gt;
&lt;br /&gt;static readonly XPathNavigator nav = new XmlDocument().CreateNavigator();
&lt;br /&gt;
&lt;br /&gt;and remove the static constructor.
&lt;br /&gt;
&lt;br /&gt;and remove the line that says:
&lt;br /&gt;
&lt;br /&gt;XPathNavigator nav = xpdoc.CreateNavigator();
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>37874</id><published>2006-09-14T11:54:00.0-05:00</published><updated>2006-09-14T11:54:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">That did the trick. You've helped us make a major advancement in our database. This one issue is 40% of the reason we have upgraded to SQL 2005. Thank you.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>41960</id><published>2006-11-08T07:55:00.0-05:00</published><updated>2006-11-08T07:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">Hello,
&lt;br /&gt;
&lt;br /&gt;I am trying to bind the result of this function:
&lt;br /&gt;
&lt;br /&gt;SELECT DISTINCT DATENAME(month, CONVERT(Datetime, WeekEnd, 105)) AS [Month Name]
&lt;br /&gt;FROM         StaffHours
&lt;br /&gt;
&lt;br /&gt;To a web control, drop down list. 
&lt;br /&gt;
&lt;br /&gt;When i load the page, i get 3 items in the DDL, which is correct. But the values in the ddl are "System.Data.DataRowView"
&lt;br /&gt;
&lt;br /&gt;Does this mean i cant bind it directly? How would i go about this please?
&lt;br /&gt;
&lt;br /&gt;Many thanks
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>48315</id><published>2007-08-28T21:24:00.0-05:00</published><updated>2007-08-28T21:24:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">Hi, 
&lt;br /&gt;When i try to create the procedure it throws this error
&lt;br /&gt;Msg 6567, Level 16, State 2, Procedure EvaluateArithmethicExpression, Line 1
&lt;br /&gt;CREATE PROCEDURE failed because a CLR Procedure may only be defined on CLR methods that return either SqlInt32, System.Int32, void.
&lt;br /&gt;
&lt;br /&gt;this is my Procedure
&lt;br /&gt;CREATE PROCEDURE EvaluateArithmethicExpression
&lt;br /&gt;@input nvarchar(200)
&lt;br /&gt;AS EXTERNAL NAME 
&lt;br /&gt;ArithmeticCalculations.ArithmeticCalculations.EvaluateArithmethicExpression
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>48793</id><published>2007-10-17T06:10:00.0-05:00</published><updated>2007-10-17T06:10:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">I tried deploying the CLR function given above. Now when i try to execute the function from SQL server, It's not giving the proper results.
&lt;br /&gt;Like if I pass the parameter as 1+2+3, then it return me value of 1 i.e. always returns the 1st number.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>51028</id><published>2008-05-22T14:35:00.0-05:00</published><updated>2008-05-22T14:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">Where should I be putting the c# code? in SQL Server or in VS 2005</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>53550</id><published>2008-09-18T14:08:38.0-05:00</published><updated>2008-09-18T14:08:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Evaluating String Arithmetic Expressions in SQL Server 2005</title><content type="html">The following link helped me get the c# code into SQL Server:

http://www.sqlteam.com/article/writing-clr-stored-procedures-in-charp-introduction-to-charp-part-1

I did have to use Dans modifications above. Just substitue articles code with code above including Dans mods, and name your StoredProcedure EvaluateArithmeticExpression.cs. Save. Build. Deploy. 
You will then see dbo.EvaluateArithmethicExpression under Scalar-valued Functions

Also had to enable CLR integration:
Start-All Programs-Microsoft SQL Server 2005-Configuration Tools-SQL Server Surface Area Configuration
Then Surface Area Configuration for Features-SLR Integration-Enable CLR integration

</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>75467</id><published>2010-03-15T19:24:12.0-05:00</published><updated>2010-03-15T19:24:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Evaluating String Arithmetic Expressions in SQL Server 2005 &amp;amp;#8230; Image</title><content type="html">Pingback from  Evaluating String Arithmetic Expressions in SQL Server 2005 … Image</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>76865</id><published>2010-05-20T11:54:55.0-05:00</published><updated>2010-05-20T11:54:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">B3000 Base Regular Cab, Cb3000 Pics Party</title><content type="html">Pingback from  B3000 Base Regular Cab, Cb3000 Pics Party</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>76870</id><published>2010-05-20T11:58:38.0-05:00</published><updated>2010-05-20T11:58:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Celebrity Infrared, Celebrity Core Fusion Body Sculpt</title><content type="html">Pingback from  Celebrity Infrared, Celebrity Core Fusion Body Sculpt</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77096</id><published>2010-05-20T14:07:35.0-05:00</published><updated>2010-05-20T14:07:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Parts Used Bmw 320i, 320i Burner Rice</title><content type="html">Pingback from  Parts Used Bmw 320i, 320i Burner Rice</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77246</id><published>2010-05-20T15:47:01.0-05:00</published><updated>2010-05-20T15:47:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1984 Oldsmobile Car, Oldsmobile Custom Cruiser Motors Car Parts</title><content type="html">Pingback from  1984 Oldsmobile Car, Oldsmobile Custom Cruiser Motors Car Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77345</id><published>2010-05-20T17:00:34.0-05:00</published><updated>2010-05-20T17:00:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford E 550 F250 Cooling System, 2009 Ford F250 Seat Covers</title><content type="html">Pingback from  Ford E 550 F250 Cooling System, 2009 Ford F250 Seat Covers</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77430</id><published>2010-05-20T17:57:59.0-05:00</published><updated>2010-05-20T17:57:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">P1500 Discount Printer Dell Desktop, P15 P1500 Minivan Used</title><content type="html">Pingback from  P1500 Discount Printer Dell Desktop, P15 P1500 Minivan Used</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77638</id><published>2010-05-20T21:20:59.0-05:00</published><updated>2010-05-20T21:20:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">S70 Nevos70 Nevo Q50, S700 Part Brake Pads Scorpion Exo</title><content type="html">Pingback from  S70 Nevos70 Nevo Q50, S700 Part Brake Pads Scorpion Exo</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77932</id><published>2010-05-21T00:26:56.0-05:00</published><updated>2010-05-21T00:26:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2008 Hyundai Accent Intake Hatchback, France Accent</title><content type="html">Pingback from  2008 Hyundai Accent Intake Hatchback, France Accent</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77969</id><published>2010-05-21T00:47:13.0-05:00</published><updated>2010-05-21T00:47:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">C240 Accessories C43 C36 Amg, 300te Discount C36 Amg Ignition Wire</title><content type="html">Pingback from  C240 Accessories C43 C36 Amg, 300te Discount C36 Amg Ignition Wire</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>77972</id><published>2010-05-21T00:49:38.0-05:00</published><updated>2010-05-21T00:49:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Omni Part Free Shipping Camber Kit, Omnia Pixon</title><content type="html">Pingback from  Omni Part Free Shipping Camber Kit, Omnia Pixon</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>78200</id><published>2010-05-21T03:05:25.0-05:00</published><updated>2010-05-21T03:05:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Century Precision Optics Fisheye, Precis Mitsubishi Lancer Parts Front Bumper Cover</title><content type="html">Pingback from  Century Precision Optics Fisheye, Precis Mitsubishi Lancer Parts Front Bumper Cover</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>78279</id><published>2010-05-21T03:49:34.0-05:00</published><updated>2010-05-21T03:49:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">W150 Retail 5x Optical Zoom, W170 Sell Dsc W150</title><content type="html">Pingback from  W150 Retail 5x Optical Zoom, W170 Sell Dsc W150</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>78394</id><published>2010-05-21T04:53:09.0-05:00</published><updated>2010-05-21T04:53:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Rx300 Cooling System Provides, Used Lexus Rx300 Co Uk</title><content type="html">Pingback from  Rx300 Cooling System Provides, Used Lexus Rx300 Co Uk</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>78431</id><published>2010-05-21T05:17:52.0-05:00</published><updated>2010-05-21T05:17:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">C35 G3500 Pickup Bulb Auto Parts, C3500 Part Mirror Glass S15 Jimmy</title><content type="html">Pingback from  C35 G3500 Pickup Bulb Auto Parts, C3500 Part Mirror Glass S15 Jimmy</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>78547</id><published>2010-05-21T06:19:57.0-05:00</published><updated>2010-05-21T06:19:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Model Dodge W100 Pickup, W100 Model Dsc T70</title><content type="html">Pingback from  Model Dodge W100 Pickup, W100 Model Dsc T70</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>78553</id><published>2010-05-21T06:23:48.0-05:00</published><updated>2010-05-21T06:23:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1994 Mazda Mx3 Specs Alloy Wheels, 93 Mazda Mx3 Specs</title><content type="html">Pingback from  1994 Mazda Mx3 Specs Alloy Wheels, 93 Mazda Mx3 Specs</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79008</id><published>2010-05-21T16:23:52.0-05:00</published><updated>2010-05-21T16:23:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cessna Citation Two, 1992 735i Battery Location Bmw 325ci</title><content type="html">Pingback from  Cessna Citation Two, 1992 735i Battery Location Bmw 325ci</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79013</id><published>2010-05-21T16:27:28.0-05:00</published><updated>2010-05-21T16:27:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Outback Promo Red Lobster, 1997 Subaru Legacy Outback Clutch</title><content type="html">Pingback from  Outback Promo Red Lobster, 1997 Subaru Legacy Outback Clutch</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79045</id><published>2010-05-21T16:47:57.0-05:00</published><updated>2010-05-21T16:47:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gl450 Accessories Comparison, Gl450 Exhaust Look 2009 Mercedes Benz</title><content type="html">Pingback from  Gl450 Accessories Comparison, Gl450 Exhaust Look 2009 Mercedes Benz</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79472</id><published>2010-05-21T21:10:28.0-05:00</published><updated>2010-05-21T21:10:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2008 Hyundai Tiburon Gt Horsepower, 2006 Hyundai Elantra Headlight Warranty</title><content type="html">Pingback from  2008 Hyundai Tiburon Gt Horsepower, 2006 Hyundai Elantra Headlight Warranty</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79517</id><published>2010-05-21T21:38:32.0-05:00</published><updated>2010-05-21T21:38:32.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy E5500 E350 4matic, Firewall E550</title><content type="html">Pingback from  Buy E5500 E350 4matic, Firewall E550</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79702</id><published>2010-05-21T23:27:51.0-05:00</published><updated>2010-05-21T23:27:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Samsung R500 Hue Accessories, Taillight Mercedes Benz R500 Clk55 Amg</title><content type="html">Pingback from  Samsung R500 Hue Accessories, Taillight Mercedes Benz R500 Clk55 Amg</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>79942</id><published>2010-05-22T03:08:22.0-05:00</published><updated>2010-05-22T03:08:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Axiom Price Isuzu Vehicross, Vehicross Tube Isuzu Axiom</title><content type="html">Pingback from  Axiom Price Isuzu Vehicross, Vehicross Tube Isuzu Axiom</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80116</id><published>2010-05-22T04:41:27.0-05:00</published><updated>2010-05-22T04:41:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">J20 Parts 1988 Jeep Suppliers Fog Lights, J20 Cooling System Replacement Exterior</title><content type="html">Pingback from  J20 Parts 1988 Jeep Suppliers Fog Lights, J20 Cooling System Replacement Exterior</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80628</id><published>2010-05-22T09:13:15.0-05:00</published><updated>2010-05-22T09:13:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Star Wars Clone Wars Jedi, Royal Star 1300cc</title><content type="html">Pingback from  Star Wars Clone Wars Jedi, Royal Star 1300cc</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80684</id><published>2010-05-22T09:39:32.0-05:00</published><updated>2010-05-22T09:39:32.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">242 Headlight Metro Transit Switch W0133, 242 Authentic</title><content type="html">Pingback from  242 Headlight Metro Transit Switch W0133, 242 Authentic</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80696</id><published>2010-05-22T09:45:04.0-05:00</published><updated>2010-05-22T09:45:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Acura Tsx Brake Rotors, 2000 Acura Integra Headlight Brake Pads</title><content type="html">Pingback from  Acura Tsx Brake Rotors, 2000 Acura Integra Headlight Brake Pads</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80842</id><published>2010-05-22T11:03:11.0-05:00</published><updated>2010-05-22T11:03:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Omni Radiator Magnum Srt 8 Dodge Ramcharger, 1970 1974 Dodge Challenger 440 Magnum</title><content type="html">Pingback from  Omni Radiator Magnum Srt 8 Dodge Ramcharger, 1970 1974 Dodge Challenger 440 Magnum</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80848</id><published>2010-05-22T11:07:58.0-05:00</published><updated>2010-05-22T11:07:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Nissan 720 Wiki Encyclopedia, Ge 203720 Merv 11</title><content type="html">Pingback from  Nissan 720 Wiki Encyclopedia, Ge 203720 Merv 11</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>80910</id><published>2010-05-22T11:41:10.0-05:00</published><updated>2010-05-22T11:41:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Problems With 1997 Nissan Pathfinder, 1999 Nissan Pathfinder Fog Light</title><content type="html">Pingback from  Problems With 1997 Nissan Pathfinder, 1999 Nissan Pathfinder Fog Light</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81029</id><published>2010-05-22T12:42:11.0-05:00</published><updated>2010-05-22T12:42:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1976 Cj7 Parts, Aftermarket Jeep Wagoneer Auto Cj7 Parts</title><content type="html">Pingback from  1976 Cj7 Parts, Aftermarket Jeep Wagoneer Auto Cj7 Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81035</id><published>2010-05-22T12:44:56.0-05:00</published><updated>2010-05-22T12:44:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Yamaha Rd250 Parts, Rd250 Used</title><content type="html">Pingback from  Yamaha Rd250 Parts, Rd250 Used</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81051</id><published>2010-05-22T12:52:45.0-05:00</published><updated>2010-05-22T12:52:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">C55 Amg Replacement Hacks, C55 Amg Up Used</title><content type="html">Pingback from  C55 Amg Replacement Hacks, C55 Amg Up Used</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81106</id><published>2010-05-22T13:20:12.0-05:00</published><updated>2010-05-22T13:20:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Continental Buying Bmw, Continental Contitech Schlauch</title><content type="html">Pingback from  Continental Buying Bmw, Continental Contitech Schlauch</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81140</id><published>2010-05-22T13:38:09.0-05:00</published><updated>2010-05-22T13:38:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E250 Replacement Mobile Phone Battery, E250 Printable</title><content type="html">Pingback from  E250 Replacement Mobile Phone Battery, E250 Printable</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81238</id><published>2010-05-22T14:27:13.0-05:00</published><updated>2010-05-22T14:27:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">K1500 Suburban Lamp Headlight Assembly, Gmc K35 K3500 Pickup Yukon Denali Xl Body Parts</title><content type="html">Pingback from  K1500 Suburban Lamp Headlight Assembly, Gmc K35 K3500 Pickup Yukon Denali Xl Body Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81282</id><published>2010-05-22T14:48:38.0-05:00</published><updated>2010-05-22T14:48:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Capacitor 1200 Watt Amp, L1200 3 Part Toll</title><content type="html">Pingback from  Capacitor 1200 Watt Amp, L1200 3 Part Toll</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81326</id><published>2010-05-22T15:07:39.0-05:00</published><updated>2010-05-22T15:07:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gmc Sierra C3 Information V8 Engine, Mercedes Cl 500 Ocasion</title><content type="html">Pingback from  Gmc Sierra C3 Information V8 Engine, Mercedes Cl 500 Ocasion</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81397</id><published>2010-05-22T15:45:54.0-05:00</published><updated>2010-05-22T15:45:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Parts Chevrolet Chevy K20 Suburban Transmission Assembly Salvage Yard, Transporter Physical Training Non Insulin Dependent Diabetes Mellitus</title><content type="html">Pingback from  Parts Chevrolet Chevy K20 Suburban Transmission Assembly Salvage Yard, Transporter Physical Training Non Insulin Dependent Diabetes Mellitus</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81494</id><published>2010-05-22T16:33:35.0-05:00</published><updated>2010-05-22T16:33:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Suzuki Vitara Replacement Hood Clutch Kit, 1996 Suzuki Vitara 3 Door</title><content type="html">Pingback from  Suzuki Vitara Replacement Hood Clutch Kit, 1996 Suzuki Vitara 3 Door</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81547</id><published>2010-05-22T17:01:42.0-05:00</published><updated>2010-05-22T17:01:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sony Np Bg1 Battery Charger Best Buy, Dodge Charger Srt8 Hemi</title><content type="html">Pingback from  Sony Np Bg1 Battery Charger Best Buy, Dodge Charger Srt8 Hemi</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81845</id><published>2010-05-22T19:26:20.0-05:00</published><updated>2010-05-22T19:26:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 Acura Tsx, Sl Exchange Aftermarket Acura Tsx</title><content type="html">Pingback from  2000 Acura Tsx, Sl Exchange Aftermarket Acura Tsx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81873</id><published>2010-05-22T19:41:50.0-05:00</published><updated>2010-05-22T19:41:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2005 Suzuki Gs500f Price, Bulb 1997 Suzuki Sidekick Grand Vitara</title><content type="html">Pingback from  2005 Suzuki Gs500f Price, Bulb 1997 Suzuki Sidekick Grand Vitara</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>81887</id><published>2010-05-22T19:47:35.0-05:00</published><updated>2010-05-22T19:47:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gs450h Promo Youtube, Gs450h Used Lexus Es330 Ls 600h</title><content type="html">Pingback from  Gs450h Promo Youtube, Gs450h Used Lexus Es330 Ls 600h</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82018</id><published>2010-05-22T20:53:09.0-05:00</published><updated>2010-05-22T20:53:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Radiator Drain Plug Bmw 740i Expansion Tank, 1997 Bmw 740i Review</title><content type="html">Pingback from  Radiator Drain Plug Bmw 740i Expansion Tank, 1997 Bmw 740i Review</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82112</id><published>2010-05-22T21:38:18.0-05:00</published><updated>2010-05-22T21:38:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Maverick Hood Mercury Comet, Headlight Popular Ford Maverick - 184.ja3ra.com</title><content type="html">Pingback from  Maverick Hood Mercury Comet, Headlight Popular Ford Maverick - 184.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82168</id><published>2010-05-22T22:06:15.0-05:00</published><updated>2010-05-22T22:06:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">R1500 Suburban Headlight Yukon Denali Xl Gmc Canyon, R1500 Suburban Part Used Chevy Car - 14.zapstreaming.com</title><content type="html">Pingback from  R1500 Suburban Headlight Yukon Denali Xl Gmc Canyon, R1500 Suburban Part Used Chevy Car - 14.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82264</id><published>2010-05-22T22:56:36.0-05:00</published><updated>2010-05-22T22:56:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Mazda Mx5 Bristol, Mazda Mx5 Radiator - 7.jeepsunlimted.com</title><content type="html">Pingback from  Used Mazda Mx5 Bristol, Mazda Mx5 Radiator - 7.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82279</id><published>2010-05-22T23:04:04.0-05:00</published><updated>2010-05-22T23:04:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">D400 Removal Restore Disk, D400 Unlock - 383.tgrconversions.com</title><content type="html">Pingback from  D400 Removal Restore Disk, D400 Unlock - 383.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82455</id><published>2010-05-23T00:32:33.0-05:00</published><updated>2010-05-23T00:32:33.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Fusion Club Ad Campaigns, G10 2nd Hand Shots Lithium Ion Battery - 13.binggreen.com</title><content type="html">Pingback from  Fusion Club Ad Campaigns, G10 2nd Hand Shots Lithium Ion Battery - 13.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82480</id><published>2010-05-23T00:47:20.0-05:00</published><updated>2010-05-23T00:47:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Vanagon Syncro, Vanagon Syncro Van Air Cooled - 455.jordanbrandallamerican.com</title><content type="html">Pingback from  Vanagon Syncro, Vanagon Syncro Van Air Cooled - 455.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82487</id><published>2010-05-23T00:50:49.0-05:00</published><updated>2010-05-23T00:50:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sale Cessna Arrow Iv Ifr, Arrow Radiator Reviews Ohio - 496.unlockiphone30.net</title><content type="html">Pingback from  Sale Cessna Arrow Iv Ifr, Arrow Radiator Reviews Ohio - 496.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82549</id><published>2010-05-23T01:17:43.0-05:00</published><updated>2010-05-23T01:17:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pb100 Full Paramount, Dodge D100 Headlight Camper - 401.unlockiphone30.net</title><content type="html">Pingback from  Pb100 Full Paramount, Dodge D100 Headlight Camper - 401.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82685</id><published>2010-05-23T02:19:08.0-05:00</published><updated>2010-05-23T02:19:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Discount 323ci 318ti Bmw 535i, M535i Atlas - 223.mfbattle.com</title><content type="html">Pingback from  Discount 323ci 318ti Bmw 535i, M535i Atlas - 223.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>82959</id><published>2010-05-23T04:29:52.0-05:00</published><updated>2010-05-23T04:29:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">380slc Design Automotive, Dvd 380slc W107 - 203.tijuanareader.com</title><content type="html">Pingback from  380slc Design Automotive, Dvd 380slc W107 - 203.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83061</id><published>2010-05-23T05:19:42.0-05:00</published><updated>2010-05-23T05:19:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ram Radiator Gmc K35 K3500 Pickup, Aftermarket Auto Parts S15 Jimmy Gmc K3500 - 431.mfbattle.com</title><content type="html">Pingback from  Ram Radiator Gmc K35 K3500 Pickup, Aftermarket Auto Parts S15 Jimmy Gmc K3500 - 431.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83067</id><published>2010-05-23T05:22:43.0-05:00</published><updated>2010-05-23T05:22:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">X Trail Headlight Bulbs Price, Interstate Trailers Sell - 412.mfbattle.com</title><content type="html">Pingback from  X Trail Headlight Bulbs Price, Interstate Trailers Sell - 412.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83246</id><published>2010-05-23T06:42:25.0-05:00</published><updated>2010-05-23T06:42:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Aftermarket Mercedes Benz 450sel, 450sel Cooling System Hose - 285.luna-atra.net</title><content type="html">Pingback from  Aftermarket Mercedes Benz 450sel, 450sel Cooling System Hose - 285.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83293</id><published>2010-05-23T07:02:48.0-05:00</published><updated>2010-05-23T07:02:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford Maverick Pep Boys, Mercury Comet Aftermarket Ford Maverick - 483.rkwrh.com</title><content type="html">Pingback from  Ford Maverick Pep Boys, Mercury Comet Aftermarket Ford Maverick - 483.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83336</id><published>2010-05-23T07:22:18.0-05:00</published><updated>2010-05-23T07:22:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Advertising Gmc K25 K2500 Suburban, K25 K2500 Suburban Aftermarket 6.5 L Ethanol - 119.dlmreza.net</title><content type="html">Pingback from  Advertising Gmc K25 K2500 Suburban, K25 K2500 Suburban Aftermarket 6.5 L Ethanol - 119.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83495</id><published>2010-05-23T12:37:49.0-05:00</published><updated>2010-05-23T12:37:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Colorado Arapahoe Basin Summit County, Parker Auto Sales Colorado - 178.cmanager.org</title><content type="html">Pingback from  Colorado Arapahoe Basin Summit County, Parker Auto Sales Colorado - 178.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83525</id><published>2010-05-23T12:51:16.0-05:00</published><updated>2010-05-23T12:51:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 Oldsmobile Aurora Aftermarket Parts, 96 Oldsmobile Aurora Parts - 176.renters.ws</title><content type="html">Pingback from  1999 Oldsmobile Aurora Aftermarket Parts, 96 Oldsmobile Aurora Parts - 176.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83598</id><published>2010-05-24T03:59:54.0-05:00</published><updated>2010-05-24T03:59:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cj6a Outlet Flight, Cj6a Wholesale Headlight Conversion 12 Volt Power Adapter - 403.dlmreza.net</title><content type="html">Pingback from  Cj6a Outlet Flight, Cj6a Wholesale Headlight Conversion 12 Volt Power Adapter - 403.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83824</id><published>2010-05-24T05:50:43.0-05:00</published><updated>2010-05-24T05:50:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bulb Lexus Rx300, Lexus Rx300 Tire Size Specs - 306.eumreborn.com</title><content type="html">Pingback from  Bulb Lexus Rx300, Lexus Rx300 Tire Size Specs - 306.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83869</id><published>2010-05-24T06:12:31.0-05:00</published><updated>2010-05-24T06:12:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Acer 3500 Recovery Disc, C350 Taillight Right Car Parts - 298.cmanager.org</title><content type="html">Pingback from  Acer 3500 Recovery Disc, C350 Taillight Right Car Parts - 298.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83898</id><published>2010-05-24T06:24:46.0-05:00</published><updated>2010-05-24T06:24:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pt Cruiser Trailer Parts, Camry Trailer - 39.binggreen.com</title><content type="html">Pingback from  Pt Cruiser Trailer Parts, Camry Trailer - 39.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83903</id><published>2010-05-24T06:27:43.0-05:00</published><updated>2010-05-24T06:27:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2008 Hyundai Tiburon Rims Mitsubishi Eclipse, Eclipse Bulb Fluorescent Metal Halide - 460.jeepsunlimted.com</title><content type="html">Pingback from  2008 Hyundai Tiburon Rims Mitsubishi Eclipse, Eclipse Bulb Fluorescent Metal Halide - 460.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83950</id><published>2010-05-24T06:48:05.0-05:00</published><updated>2010-05-24T06:48:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gmc G2500 Replacement Universal, G35 G2500 Van Aftermarket Mechanical - 437.renters.ws</title><content type="html">Pingback from  Gmc G2500 Replacement Universal, G35 G2500 Van Aftermarket Mechanical - 437.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>83971</id><published>2010-05-24T06:57:54.0-05:00</published><updated>2010-05-24T06:57:54.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1963 Oldsmobile Starfire Price, Chevrolet Monza Oldsmobile Starfire Buick Skyhawk - 244.unlockiphone30.net</title><content type="html">Pingback from  1963 Oldsmobile Starfire Price, Chevrolet Monza Oldsmobile Starfire Buick Skyhawk - 244.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84015</id><published>2010-05-24T07:17:10.0-05:00</published><updated>2010-05-24T07:17:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chrysler Pacifica Interior Accessories, Chrysler Pacifica 2006 Pricing - 309.binggreen.com</title><content type="html">Pingback from  Chrysler Pacifica Interior Accessories, Chrysler Pacifica 2006 Pricing - 309.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84127</id><published>2010-05-24T08:09:11.0-05:00</published><updated>2010-05-24T08:09:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1993 Problems 1996 Mercury Grand Marquis, 1994 Mercury Cougar Interior - 83.ja3ra.com</title><content type="html">Pingback from  1993 Problems 1996 Mercury Grand Marquis, 1994 Mercury Cougar Interior - 83.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84138</id><published>2010-05-24T08:15:05.0-05:00</published><updated>2010-05-24T08:15:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Find Escape Online, Runescape 99 Range - 109.computeronlinebingo.com</title><content type="html">Pingback from  Find Escape Online, Runescape 99 Range - 109.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84420</id><published>2010-05-24T10:26:41.0-05:00</published><updated>2010-05-24T10:26:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Azera Problems, Azera Cooling System Auto Parts - 176.luna-atra.net</title><content type="html">Pingback from  Azera Problems, Azera Cooling System Auto Parts - 176.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84609</id><published>2010-05-24T11:56:30.0-05:00</published><updated>2010-05-24T11:56:30.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Use Excel Functions, Excelsior Used Export - 330.rkwrh.com</title><content type="html">Pingback from  Use Excel Functions, Excelsior Used Export - 330.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84698</id><published>2010-05-24T12:40:56.0-05:00</published><updated>2010-05-24T12:40:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cl600 Part Shelter, Cl600 Discount 2008 Mercedes Benz Cl550 - 398.1fh.org</title><content type="html">Pingback from  Cl600 Part Shelter, Cl600 Discount 2008 Mercedes Benz Cl550 - 398.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>84927</id><published>2010-05-24T14:33:55.0-05:00</published><updated>2010-05-24T14:33:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">G10 Driver Central Heating, G10 Buy Canon Powershot - 154.dlmreza.net</title><content type="html">Pingback from  G10 Driver Central Heating, G10 Buy Canon Powershot - 154.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85078</id><published>2010-05-24T15:47:26.0-05:00</published><updated>2010-05-24T15:47:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">600sec Parts Discount Pricing Window Regulator, 600sec Cylinder Volume - 58.akemet.com</title><content type="html">Pingback from  600sec Parts Discount Pricing Window Regulator, 600sec Cylinder Volume - 58.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85116</id><published>2010-05-24T16:05:09.0-05:00</published><updated>2010-05-24T16:05:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sundance Marin Exhaust, Sundance Container - 374.jeepsunlimted.com</title><content type="html">Pingback from  Sundance Marin Exhaust, Sundance Container - 374.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85220</id><published>2010-05-24T17:01:03.0-05:00</published><updated>2010-05-24T17:01:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Game G500, G500 Radiator Offer Fit - 235.1fh.org</title><content type="html">Pingback from  Game G500, G500 Radiator Offer Fit - 235.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85285</id><published>2010-05-24T17:34:38.0-05:00</published><updated>2010-05-24T17:34:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Compass Used Magnetic Deviation Geographic North Celestial Pole, Instrucciones Lensatic Compass - 43.mfbattle.com</title><content type="html">Pingback from  Compass Used Magnetic Deviation Geographic North Celestial Pole, Instrucciones Lensatic Compass - 43.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85376</id><published>2010-05-24T18:28:48.0-05:00</published><updated>2010-05-24T18:28:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Minolta Bizhub 210 Toner, Es300 Tanabe Nf210 Lowering Springs - 369.rkwrh.com</title><content type="html">Pingback from  Minolta Bizhub 210 Toner, Es300 Tanabe Nf210 Lowering Springs - 369.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85385</id><published>2010-05-24T18:33:52.0-05:00</published><updated>2010-05-24T18:33:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 Solara Parts 2003 Toyota Camry, 2000 Toyota Camry Recalls - 139.mfbattle.com</title><content type="html">Pingback from  1999 Solara Parts 2003 Toyota Camry, 2000 Toyota Camry Recalls - 139.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85401</id><published>2010-05-24T18:45:17.0-05:00</published><updated>2010-05-24T18:45:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Duster Parts Replacement, 1979 Plymouth Duster Parts Dodge Aspen - 196.defutbolazo.com</title><content type="html">Pingback from  Duster Parts Replacement, 1979 Plymouth Duster Parts Dodge Aspen - 196.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85410</id><published>2010-05-24T18:51:03.0-05:00</published><updated>2010-05-24T18:51:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Concorde Ticket Prices, New Concorde Plane Developing - 208.animejin.com</title><content type="html">Pingback from  Concorde Ticket Prices, New Concorde Plane Developing - 208.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85450</id><published>2010-05-24T19:15:00.0-05:00</published><updated>2010-05-24T19:15:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Hyundai Xg300 Bulbapedia Prices, Hyundai Xg300 Best - 243.renters.ws</title><content type="html">Pingback from  Hyundai Xg300 Bulbapedia Prices, Hyundai Xg300 Best - 243.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85470</id><published>2010-05-24T19:24:26.0-05:00</published><updated>2010-05-24T19:24:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">560sel Custom Car Covers, Calais Used 1989 Oldsmobile Cutlass Custom Cruiser - 195.1fh.org</title><content type="html">Pingback from  560sel Custom Car Covers, Calais Used 1989 Oldsmobile Cutlass Custom Cruiser - 195.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85610</id><published>2010-05-24T23:07:38.0-05:00</published><updated>2010-05-24T23:07:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford Windstar Used Cars For Sale Looking, Starfire Pirate Bay - 455.eumreborn.com</title><content type="html">Pingback from  Ford Windstar Used Cars For Sale Looking, Starfire Pirate Bay - 455.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85692</id><published>2010-05-24T23:44:15.0-05:00</published><updated>2010-05-24T23:44:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Amazon Acura Slx V6 Engine, Slx Manual Acura Cl - 77.animejin.com</title><content type="html">Pingback from  Amazon Acura Slx V6 Engine, Slx Manual Acura Cl - 77.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85703</id><published>2010-05-24T23:48:42.0-05:00</published><updated>2010-05-24T23:48:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">750i Price Xfx Nforce 780i, Nvidia Nforce 780i Sli Chipse - 299.animejin.com</title><content type="html">Pingback from  750i Price Xfx Nforce 780i, Nvidia Nforce 780i Sli Chipse - 299.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85733</id><published>2010-05-25T00:02:40.0-05:00</published><updated>2010-05-25T00:02:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E 250 Econoline Club Wagon Replacement Explorer Sport Trac Tail Lights, E 150 Econoline Club Wagon Engine Position Sensor - 224.animejin.com</title><content type="html">Pingback from  E 250 Econoline Club Wagon Replacement Explorer Sport Trac Tail Lights, E 150 Econoline Club Wagon Engine Position Sensor - 224.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85757</id><published>2010-05-25T00:13:23.0-05:00</published><updated>2010-05-25T00:13:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">318is Body Parts Bmw 323i, 318is Blubster - 180.luna-atra.net</title><content type="html">Pingback from  318is Body Parts Bmw 323i, 318is Blubster - 180.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>85826</id><published>2010-05-25T00:45:34.0-05:00</published><updated>2010-05-25T00:45:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Creative Recreation Exhaust, Pioneer Plasma 42 - 48.tijuanareader.com</title><content type="html">Pingback from  Creative Recreation Exhaust, Pioneer Plasma 42 - 48.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86010</id><published>2010-05-25T02:15:25.0-05:00</published><updated>2010-05-25T02:15:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sundance Refurbished Electronics, Sundance Best Documentary Sebastian Junger - 140.eumreborn.com</title><content type="html">Pingback from  Sundance Refurbished Electronics, Sundance Best Documentary Sebastian Junger - 140.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86046</id><published>2010-05-25T02:34:38.0-05:00</published><updated>2010-05-25T02:34:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bolt Pattern 88 Cutlass Supreme Classic, 230sl Auction Classic - 225.computeronlinebingo.com</title><content type="html">Pingback from  Bolt Pattern 88 Cutlass Supreme Classic, 230sl Auction Classic - 225.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86129</id><published>2010-05-25T03:16:49.0-05:00</published><updated>2010-05-25T03:16:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gs350 Half Comparison, Gs350 Hid Exterior High Intensity Discharge - 244.tgrconversions.com</title><content type="html">Pingback from  Gs350 Half Comparison, Gs350 Hid Exterior High Intensity Discharge - 244.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86150</id><published>2010-05-25T03:25:56.0-05:00</published><updated>2010-05-25T03:25:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lexus Es300 Windshield Replacement Tail Light, Lexus Es300 Passenger Mirror - 421.luna-atra.net</title><content type="html">Pingback from  Lexus Es300 Windshield Replacement Tail Light, Lexus Es300 Passenger Mirror - 421.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86562</id><published>2010-05-25T11:45:36.0-05:00</published><updated>2010-05-25T11:45:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">S320 Headlight Turn Signal 300d Mercedes 280sl, 280sl Engine 1969 Mercedes Benz - 355.eumreborn.com</title><content type="html">Pingback from  S320 Headlight Turn Signal 300d Mercedes 280sl, 280sl Engine 1969 Mercedes Benz - 355.eumreborn.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86566</id><published>2010-05-25T11:46:56.0-05:00</published><updated>2010-05-25T11:46:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Aftermarket 1992 Mighty Max Mitsubishi Mirage, 2003 Mitsubishi Montero Catalytic Converter - 318.computeronlinebingo.com</title><content type="html">Pingback from  Aftermarket 1992 Mighty Max Mitsubishi Mirage, 2003 Mitsubishi Montero Catalytic Converter - 318.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86674</id><published>2010-05-25T12:42:38.0-05:00</published><updated>2010-05-25T12:42:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">280sel Bulb Headlight Osram Sylvania, 280sel Used Parts 1971 Mercedes Benz Fuel Injection Pump - 396.binggreen.com</title><content type="html">Pingback from  280sel Bulb Headlight Osram Sylvania, 280sel Used Parts 1971 Mercedes Benz Fuel Injection Pump - 396.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86823</id><published>2010-05-25T13:53:24.0-05:00</published><updated>2010-05-25T13:53:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">B2500 File, B2500 Combines Usb 2.0 Adapter Pdf Jpeg - 13.rkwrh.com</title><content type="html">Pingback from  B2500 File, B2500 Combines Usb 2.0 Adapter Pdf Jpeg - 13.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>86962</id><published>2010-05-25T15:02:57.0-05:00</published><updated>2010-05-25T15:02:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Rockford Free, Led Lights Ford Fusion - 291.cmanager.org</title><content type="html">Pingback from  Rockford Free, Led Lights Ford Fusion - 291.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87027</id><published>2010-05-25T15:37:50.0-05:00</published><updated>2010-05-25T15:37:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pb25 Movies Headlight, Pb2500 Dramawiki Radiator - 199.jeepsunlimted.com</title><content type="html">Pingback from  Pb25 Movies Headlight, Pb2500 Dramawiki Radiator - 199.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87030</id><published>2010-05-25T15:39:11.0-05:00</published><updated>2010-05-25T15:39:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Classic Pontiac Grandville For Sale Tilt Wheel, Grandville Replacement Direct Fit Door - 118.ja3ra.com</title><content type="html">Pingback from  Classic Pontiac Grandville For Sale Tilt Wheel, Grandville Replacement Direct Fit Door - 118.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87152</id><published>2010-05-25T16:41:51.0-05:00</published><updated>2010-05-25T16:41:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">810 Socket Good, Pickup W810i Free - 244.cmanager.org</title><content type="html">Pingback from  810 Socket Good, Pickup W810i Free - 244.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87201</id><published>2010-05-25T17:09:14.0-05:00</published><updated>2010-05-25T17:09:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1998 Dodge Avenger Parts Discount K&amp;amp;n Fipk, 1998 Dodge Avenger Parts Floor Mats Catalytic Converter - 363.jeepsunlimted.com</title><content type="html">Pingback from  1998 Dodge Avenger Parts Discount K&amp;amp;n Fipk, 1998 Dodge Avenger Parts Floor Mats Catalytic Converter - 363.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87275</id><published>2010-05-25T17:46:35.0-05:00</published><updated>2010-05-25T17:46:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">V5100n Rent, Pickup Datsun 510 - 48.tijuanareader.com</title><content type="html">Pingback from  V5100n Rent, Pickup Datsun 510 - 48.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87292</id><published>2010-05-25T17:56:33.0-05:00</published><updated>2010-05-25T17:56:33.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bp350 Headlight Kilowatt, Ctr350 Crates - 266.cmanager.org</title><content type="html">Pingback from  Bp350 Headlight Kilowatt, Ctr350 Crates - 266.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87556</id><published>2010-05-25T20:12:06.0-05:00</published><updated>2010-05-25T20:12:06.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">J10 Sunbird Aftermarket Infiniti Qx4 Mercedes Benz 190e, Fujifilm Finepix J10 Review - 347.luna-atra.net</title><content type="html">Pingback from  J10 Sunbird Aftermarket Infiniti Qx4 Mercedes Benz 190e, Fujifilm Finepix J10 Review - 347.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87578</id><published>2010-05-25T20:24:07.0-05:00</published><updated>2010-05-25T20:24:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cadillac Cts Interior Wallpaper, Chariot Cabriolet Bike Trailer Reviews - 391.tijuanareader.com</title><content type="html">Pingback from  Cadillac Cts Interior Wallpaper, Chariot Cabriolet Bike Trailer Reviews - 391.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87617</id><published>2010-05-25T20:41:59.0-05:00</published><updated>2010-05-25T20:41:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Colony Park Parts 1966 Mercury, Colony Bmx Uk - 316.cmanager.org</title><content type="html">Pingback from  Colony Park Parts 1966 Mercury, Colony Bmx Uk - 316.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87777</id><published>2010-05-27T03:26:52.0-05:00</published><updated>2010-05-27T03:26:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1987 - 1994 @ Toyota 4runner Catalytic Converter Problems, Lifted 2005 4runner - 377.ja3ra.com</title><content type="html">Pingback from  1987 - 1994 @ Toyota 4runner Catalytic Converter Problems, Lifted 2005 4runner - 377.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>87925</id><published>2010-05-27T04:44:44.0-05:00</published><updated>2010-05-27T04:44:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 2008 @ Buy 220d Shock Absorber 1972 Mercedes, 220d Bulb Sunroof Seal Land Rover Discovery - 152.tvshowzone.com</title><content type="html">Pingback from  1999 - 2008 @ Buy 220d Shock Absorber 1972 Mercedes, 220d Bulb Sunroof Seal Land Rover Discovery - 152.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88151</id><published>2010-05-27T07:35:19.0-05:00</published><updated>2010-05-27T07:35:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 - 1983 @ C20 Pickup Part Free Coil Springs, 100 Pickup Oem Parts Ford F 350 - 135.jeepsunlimted.com</title><content type="html">Pingback from  1995 - 1983 @ C20 Pickup Part Free Coil Springs, 100 Pickup Oem Parts Ford F 350 - 135.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88227</id><published>2010-05-27T08:26:15.0-05:00</published><updated>2010-05-27T08:26:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1987 - 1994 @ Axiom Part Catalog, Axiom Wholesale Isuzu Vehicross - 6.dlmreza.net</title><content type="html">Pingback from  1987 - 1994 @ Axiom Part Catalog, Axiom Wholesale Isuzu Vehicross - 6.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88267</id><published>2010-05-27T09:00:42.0-05:00</published><updated>2010-05-27T09:00:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1996 @ 2001 Mazda Millenia Value, Millenia Mortgage New Jersey Phone Number - 67.mfbattle.com</title><content type="html">Pingback from  2000 - 1996 @ 2001 Mazda Millenia Value, Millenia Mortgage New Jersey Phone Number - 67.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88337</id><published>2010-05-27T09:55:11.0-05:00</published><updated>2010-05-27T09:55:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1999 @ Lhs Second Hand Directory, Lhs Used Car Jobs Automotive - 260.jordanbrandallamerican.com</title><content type="html">Pingback from  2000 - 1999 @ Lhs Second Hand Directory, Lhs Used Car Jobs Automotive - 260.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88394</id><published>2010-05-30T17:40:15.0-05:00</published><updated>2010-05-30T17:40:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 - 1997 @ Aftermarket Abs 1988 Plymouth Sundance Duster, Bulb Trailduster Headlight Halogen - 2.unlockiphone30.net</title><content type="html">Pingback from  1995 - 1997 @ Aftermarket Abs 1988 Plymouth Sundance Duster, Bulb Trailduster Headlight Halogen - 2.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88483</id><published>2010-05-30T18:29:19.0-05:00</published><updated>2010-05-30T18:29:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1998 - 1980 @ 442 Us 735 United States V Dionisio, 3m Performance 400 Predictions - 453.jordanbrandallamerican.com</title><content type="html">Pingback from  1998 - 1980 @ 442 Us 735 United States V Dionisio, 3m Performance 400 Predictions - 453.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88538</id><published>2010-05-30T19:56:22.0-05:00</published><updated>2010-05-30T19:56:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1984 - 2009 @ B2600 1988 Best, B2000 Mx 6 626 Mazda B2600 - 186.renters.ws</title><content type="html">Pingback from  1984 - 2009 @ B2600 1988 Best, B2000 Mx 6 626 Mazda B2600 - 186.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88570</id><published>2010-05-30T20:11:39.0-05:00</published><updated>2010-05-30T20:11:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 1998 @ E 350 Cargo Ford Escape Super Duty, Ford Escape Recall List - 179.defutbolazo.com</title><content type="html">Pingback from  1999 - 1998 @ E 350 Cargo Ford Escape Super Duty, Ford Escape Recall List - 179.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88708</id><published>2010-05-30T23:44:22.0-05:00</published><updated>2010-05-30T23:44:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1995 @ 1991 1990 Nissan 300zx For Sale, Nissan Skyline Toy Car Ebay - 30.tvshowzone.com</title><content type="html">Pingback from  2000 - 1995 @ 1991 1990 Nissan 300zx For Sale, Nissan Skyline Toy Car Ebay - 30.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>88711</id><published>2010-05-30T23:46:15.0-05:00</published><updated>2010-05-30T23:46:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2002 - 1980 @ Part Blower Motor Mercedes Benz S600, S60 S65 Amg - 15.cmanager.org</title><content type="html">Pingback from  2002 - 1980 @ Part Blower Motor Mercedes Benz S600, S60 S65 Amg - 15.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>89026</id><published>2010-05-31T12:27:58.0-05:00</published><updated>2010-05-31T12:27:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1983 - 1994 @ Dodge Colt Bumper Headlights, Bulb Dodge Colt - 227.tgrconversions.com</title><content type="html">Pingback from  1983 - 1994 @ Dodge Colt Bumper Headlights, Bulb Dodge Colt - 227.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>89096</id><published>2010-05-31T13:05:06.0-05:00</published><updated>2010-05-31T13:05:06.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1984 - 2009 @ Bulb Gmc Caballero Halogen, Caballero Audio - 381.jordanbrandallamerican.com</title><content type="html">Pingback from  1984 - 2009 @ Bulb Gmc Caballero Halogen, Caballero Audio - 381.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>89284</id><published>2010-05-31T14:52:45.0-05:00</published><updated>2010-05-31T14:52:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1996 - 1988 @ Essai Kia Sorento 2009, Amazon Kia Sorento Accessories - 475.renters.ws</title><content type="html">Pingback from  1996 - 1988 @ Essai Kia Sorento 2009, Amazon Kia Sorento Accessories - 475.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>94890</id><published>2010-08-27T08:55:59.0-05:00</published><updated>2010-08-27T08:55:59.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">The Algebra Advantage | Pregnancy Info Center</title><content type="html">Pingback from  The Algebra Advantage | Pregnancy Info Center</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32597"></thr:in-reply-to></entry><entry><id>32814</id><published>2006-08-06T13:36:00.0-05:00</published><updated>2006-08-06T13:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">What cost xml, SQL Server?</title><content type="html">&lt;p&gt;How much space does xml cost in SQL Server 2005? This question seems to come up a lot because xml has a lot of meta data in it and to top it off SQL Server saves the xml data type using UTF-16 encoding. This is, at least for xml that is mostly ascii type characters, up twice as much space as the encoding you typically see for xml, UTF-8. So if you just want to save xml in SQL Server then return it later you're better off storing as VARCHAR(MAX) or maybe VARBINARY(MAX), right? Maybe not, but that is what this article is going to look at...&lt;/p&gt;
&lt;p&gt;Even before we look at the space issues involved I'd like to mention that I think it is really being "too clever by half" to store xml as anything other than xml. Imagine if someone gave you a CSV file that looked like:&lt;/p&gt;
&lt;p&gt;pipe, 100&lt;br /&gt;rope, 250&lt;/p&gt;
&lt;p&gt;and and told you the first column was the name of an item and the second was the price in whole dollars, then asked you to make a table and import it into SQL Server. You could make a table that looked like:&lt;/p&gt;
&lt;p&gt;CREATE TABLE Stuff&lt;br /&gt;(&lt;br /&gt;name VARCHAR(MAX),&lt;br /&gt;price VARCHAR(MAX)&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;Later when people when to use the table they could issue a query like this:&lt;/p&gt;
&lt;p&gt;SELECT name, CAST(price AS INT) FROM Stuff&lt;/p&gt;
&lt;p&gt;Of couse if one of the files you imported had a line like:&lt;/p&gt;
&lt;p&gt;hose, XVII&lt;/p&gt;
&lt;p&gt;the query would get an error at runtime when it ran. The problem here was that the data was stored as something that it wasn't. Storing xml as a string or binary is just like store an INT as text. When you insert something into an xml column SQL Server makes sure that is really is xml or rejects it, so you will not have any errors if you happen to make use of some of the xml functionality SQL Server 2005 provides. Even if you don't do make any use of the xml processing functionality in SQL Server, the client that reads the xml as text you've stored will get the error. It's usually best to catch errors as early as possible, especially if the client thinks your server made the error :-).&lt;/p&gt;
&lt;p&gt;OK, now lets look at how much space things really take up. To do this we are going to make four tables that store xml each in a different way, fill them up with a bunch of xml then see how big they are. You can down load the code for trying these experiments yourself from &lt;a href="http://www.pluralsight.com/dan/samples/whatcostxml.zip"&gt;http://www.pluralsight.com/dan/samples/whatcostxml.zip&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;-- save as binary&lt;br /&gt;CREATE TABLE XmlBinSizeTest&lt;br /&gt;(&lt;br /&gt;data VARBINARY(MAX)&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;--save as varchar&lt;br /&gt;CREATE TABLE XmlTextSizeTest&lt;br /&gt;(&lt;br /&gt;data VARCHAR(MAX)&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;--save save as xml with a schema&lt;br /&gt;CREATE TABLE XmlSchemaSizeTest&lt;br /&gt;(&lt;br /&gt;data xml(XmlSizeSchema)&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;-- save as xml without a schema&lt;br /&gt;CREATE TABLE XmlSizeTest&lt;br /&gt;(&lt;br /&gt;data xml&lt;br /&gt;)&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;Now we want to fill these tables up with a big walop of xml. When I need some static string or xml for testing I usually wrap it in a function so I don't have to put the literal text in my SQL expressions. &lt;/p&gt;
&lt;p&gt;CREATE &lt;br /&gt;--ALTER&lt;br /&gt;FUNCTION XmlSizeTestData4()&lt;br /&gt;RETURNS VARCHAR(MAX)&lt;br /&gt;AS&lt;br /&gt;BEGIN&lt;br /&gt;RETURN &lt;br /&gt;'&lt;EMPLOYEES http:_="http:_" www.w3.org="www.w3.org" _2001="_2001" xmlschema-instance="xmlschema-instance"&gt;http://www.w3.org/2001/XMLSchema-instance"&amp;gt;&lt;br /&gt;  &lt;E gender="M" loginid="adventure-works\guy1" salariedflag="0" rowguid="AAE1D04A-C237-4974-B4D5-935247737718" managerid="16" maritalstatus="M" currentflag="1" title="Production Technician - WC60" nationalidnumber="14417807" birthdate="1972-05-15T00:00:00" contactid="1209" vacationhours="21" sickleavehours="30" modifieddate="2004-07-31T00:00:00" employeeid="1" hiredate="1996-07-31T00:00:00"&gt;&lt;br /&gt;    &lt;C namestyle="0" firstname="Guy" middlename="R" lastname="Gilbert" emailaddress="&amp;lt;A href=" mailto:guy1adventure-works.com="mailto:guy1adventure-works.com" contactid="1209"&gt;guy1@adventure-works.com" EmailPromotion="0" Phone="320-555-0195" PasswordHash="1196EB7D5425B281CACDCDD2F60F52D9689D9E49" PasswordSalt="Lanmhoo=" rowguid="D366A33A-8EDE-42BD-BF79-3E7FB9713FE1" ModifiedDate="1996-07-24T00:00:00"/&amp;gt;&lt;br /&gt;  &lt;/C&gt;&lt;/E&gt;&lt;br /&gt;&lt;br /&gt; &lt;/EMPLOYEES&gt;'&lt;br /&gt;END &lt;/p&gt;
&lt;p&gt;Then a little batch to fill the tables:&lt;/p&gt;
&lt;p&gt;DECLARE @t VARCHAR(MAX)&lt;br /&gt;SET @t = dbo.XmlSizeTestData4();&lt;br /&gt;DECLARE @index INT&lt;br /&gt;SET @index = 100&lt;br /&gt;WHILE @index &amp;gt; 0&lt;br /&gt;BEGIN&lt;br /&gt;SET @index = @index - 1&lt;br /&gt;INSERT INTO XmlTextSizeTest VALUES (@t);&lt;br /&gt;INSERT INTO XmlSizeTest VALUES (@t);&lt;br /&gt;INSERT INTO XmlSchemaSizeTest VALUES (@t);&lt;br /&gt;INSERT INTO XmlBinSizeTest VALUES (CAST(@t AS VARBINARY(MAX)));&lt;br /&gt;END&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;We can use sys.allocation_units to find out how much space the tables take up. It takes a few joins to make this work off of table names...&lt;/p&gt;
&lt;p&gt;SELECT o.name AS table_name, au.type_desc, au.used_pages&lt;br /&gt;FROM sys.allocation_units AS au&lt;br /&gt;    JOIN sys.partitions AS p ON au.container_id = p.partition_id&lt;br /&gt;    JOIN sys.objects AS o ON p.object_id = o.object_id&lt;br /&gt;WHERE o.name in (N'XmlTextSizeTest',&lt;br /&gt; N'XmlSizeTest',&lt;br /&gt; N'XmlSchemaSizeTest',&lt;br /&gt; N'XmlBinSizeTest')&lt;/p&gt;
&lt;p&gt;In SQL Server 2005 large objects, i.e. things like xml and VARCHAR(MAX) overflow in to supplementary pages outside of the pages for the table itself. This query tells us about both the pages used in the table and the extra overflow pages. Note that DBCC CHECKTABLE won't give you the right answer, because it won't tell you about the overflow pages. Running this query produces:&lt;/p&gt;
&lt;p&gt;table name               type_description     used pages&lt;br /&gt;XmlBinSizeTest         IN_ROW_DATA     2&lt;br /&gt;XmlBinSizeTest         LOB_DATA             2802&lt;br /&gt;XmlTextSizeTest       IN_ROW_DATA      2&lt;br /&gt;XmlTextSizeTest       LOB_DATA             2802&lt;br /&gt;XmlSchemaSizeTest  IN_ROW_DATA     2&lt;br /&gt;XmlSchemaSizeTest  LOB_DATA            4226&lt;br /&gt;XmlSizeTest              IN_ROW_DATA     2&lt;br /&gt;XmlSizeTest              LOB_DATA            2907&lt;/p&gt;
&lt;p&gt;The numbers tell an interesting story. First of all no suprise, storing text as binary takes the same amount of space as storing it as VARCHAR(MAX). However storing xml without a schema takes only about 5% more space than storing it as VARCHAR(MAX) even though the xml is being stored as UTF-16, not single byte characters as VARCHAR does. How can this be?&lt;/p&gt;
&lt;p&gt;Let's use different xml data that really exacerbates the difference between storing xml as text and storing xml as xml. Here is another function that cobbles up some xml on the fly:&lt;/p&gt;
&lt;p&gt;CREATE &lt;br /&gt;FUNCTION XmlTestData1()&lt;br /&gt;RETURNS VARCHAR(MAX)&lt;br /&gt;AS&lt;br /&gt;BEGIN&lt;br /&gt;DECLARE @t VARCHAR(MAX)&lt;br /&gt;SET @t = CAST('&lt;a:Simple _="_" as="as" varcharmaxbr="varcharmaxbr"&gt;+ REPLICATE(CAST(' ' AS VARCHAR(MAX)), 10000)&lt;br /&gt;+ '&amp;gt;abc&lt;/a:Simple&gt;'&lt;br /&gt;RETURN @t&lt;br /&gt;END&lt;/p&gt;
&lt;p&gt;It's basically inserting a lot of ignorable space into the the xml. A fragment of the xml it generates looks like:&lt;/p&gt;
&lt;p&gt;&lt;a:Simple&gt;&lt;/a:Simple&gt;&lt;/p&gt;
&lt;p&gt;Actually it has a lot more spaces than that. To try this next you should drop all the tables and recreate them, then use the batch that fill the tables, but change the source of the xml to dbo.XmlTestData1().  After you run that batch that finds the sizes you see something like:&lt;/p&gt;
&lt;p&gt;table name               type_description     used pages&lt;br /&gt;XmlBinSizeTest         IN_ROW_DATA      2&lt;br /&gt;XmlBinSizeTest         LOB_DATA            252&lt;br /&gt;XmlTextSizeTest       IN_ROW_DATA      2&lt;br /&gt;XmlTextSizeTest       LOB_DATA            252&lt;br /&gt;XmlSchemaSizeTest  IN_ROW_DATA     3&lt;br /&gt;XmlSchemaSizeTest  LOB_DATA           0&lt;br /&gt;XmlSizeTest              IN_ROW_DATA  3&lt;br /&gt;XmlSizeTest              LOB_DATA           0&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;It looks like saving this xml as text or binary takes up about two orders of magnitude more space than just saving it as xml!&lt;/p&gt;
&lt;p&gt;When SQL Server saves xml it need not save it as literal text, and it doen't. It doesn't have to save the the "pointies" and it doesn't have to save whitespace that doesn't matter. And most of the the time the whitespace between consecutive opening tags doesn't matter.  In other words SQL Server 2005 goes out of its way to efficiently store xml.&lt;/p&gt;
&lt;p&gt;So it not a slam dunk to figure out which way of storing xml takes up the least amount of space. The point here isn't that xml will always take about the same or less as a corresponding VARCHAR(MAX),  because sometimes the VARCHAR(MAX) or VARBINARY(MAX) will take up less space. But you will probably find that the difference isn't as great as you might suspect. In any case this is a database we are talking about, you should store xml as xml.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;Dan&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;br /&gt; &lt;br /&gt;&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>1</thr:total></entry><entry><id>40602</id><published>2006-10-15T18:43:00.0-05:00</published><updated>2006-10-15T18:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: What cost xml, SQL Server?</title><content type="html">Except that indexes on xml columns usually get very large, but that depends on if you need them.
&lt;br /&gt;
&lt;br /&gt;If you want to perform any kind of xquery search you probably will want to index them, using both primary and secondary xml indexes and that takes up a LOT of space.
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="32814"></thr:in-reply-to></entry><entry><id>36317</id><published>2006-08-26T09:43:00.0-05:00</published><updated>2006-08-26T09:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">CLR Based Histogram Functions and SQL Server 2005</title><content type="html">&lt;h1&gt;CLR Based Histogram Functions and SQL Server 2005&lt;/h1&gt;
&lt;p&gt;One of the enhancements to SQL Server 2005 is the ability to create your own aggregates, or User Defined Aggregate as they are called. They are pretty easy to make and I'll go over the basics later in this article. But the real question is why would you want to make your own UDA? To answer that question we have to look some of the details of aggregates in general.&lt;/p&gt;
&lt;p&gt;The code for the examples in this article can be found at &lt;a href="http://www.pluralsight.com/dan/samples/udahisto.zip"&gt;code samples&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For example SQL Server has only a few built-in aggregates compared to Oracle and you might like to add some of the ones found in Oracle. Oracle has an aggregate named COVAR_POP that you might like to be able to use in SQL Server. However most aggregates that are basically some kind of accumulation of arithmetic calculations can be composed out of the aggregates that already exist in SQL Server. For example:&lt;/p&gt;
&lt;pre&gt;SELECT (SUM(col1 * col2) - SUM(col2) * SUM(col1) / count(*)) / count(*) FROM myTable
WHERE col1 IS NOT NULL and col2 IS NOT NULL&lt;/pre&gt;&lt;p&gt;
&lt;/p&gt;produces the same result as the Oracle aggregate. So for most arithmetic aggregates you need not create a CLR UDA. In general you can use a composition of the built-in aggregates in SQL Server to create most aggregates that accumlate arithmetic calculations.

&lt;p&gt;A couple of kinds of aggregates that you can't compose out of the aggregate functions built into SQL Server are a median and string concatenation aggragates. I've talked about median calculations last year. You can find the blog articles at &lt;a href="http://pluralsight.com/blogs/dan/archive/2005/09/29/15082.aspx"&gt;Psuedo Median Aggregrate&lt;/a&gt; and &lt;a href="http://pluralsight.com/blogs/dan/archive/2005/09/28/15073.aspx"&gt;Yet Another Median Calculation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The string concatenation aggregate is at least a candidate for a UDA, but a UDA has a limitation that requires its intermediate state to be serializable in 8000 bytes. You can make a UDA that concatenates strings but it seems like it would be a bit scary to use in practice. It could be working fine in production for months and then suddenly fail because it happens produce a string that is too long. I would call this brittle and avoid it, but YMMV. Also, if you don't need a aggregate function, but just an aggregate calculation, there are other ways to do this in SQL Server.&lt;/p&gt;
&lt;p&gt;There is another kind of "aggregate" that is useful, a histogram aggregate. I put the term aggregate in quotes because all of SQL Server's built-in aggregate functions and UDA's return scalars and a histogram is a table. But we are going to look at a way to use a UDA to create a histogram and, with a little slight of hand, make it return a table. We will call this a UDA/Histogram.&lt;/p&gt;
&lt;p&gt;There are at least two kinds of UDA/histograms we could look at. One is a histogram of the letter usage in words. For example the letter usage for the the pharse "Attention all aardvarks." would show that the letter &lt;b&gt;A&lt;/b&gt; was used five times, assuming we ignore case. This UDA/histogram could be used against a table of customer names to find out the of letter usage all customer names.&lt;/p&gt;
&lt;p&gt;Another historgram we could look at is more of a classic histogram, it would find the usage of numbers in a set of ranges, maybe as the count of numbers in the range 0 though 1, 1 through 2, and so on up to 9 through 10. &lt;/p&gt;
&lt;p&gt;There are a number of ways to implement a histogram in SQL Server 2005. One is via the UDA/histogram that will will be looking at shortly, one is by JOINing with a range table, and the third is to use a CURSOR. In this article we will look at the letter histogram. In later blog articles we will look at using CLR UDA to implement more "classic" histograms.&lt;/p&gt;
&lt;p&gt;We will look at the letter usage UDA/histogram now. First of all a UDA has four methods that you must implement: Init, Accumulate, Merge and Terminate. If you use Visual Studio and make a language/database project it will skeleton UDA for you, you will just have to fill in these methods.&lt;/p&gt;
&lt;p&gt;This implementation has 26 Int32 fields, one for each letter in the English alphabet, to accumulate the letter counts. It might seem better to use an array to do this but if you do it is a bit more complicated to implement. A fragement of the accumlators and Init method are shown below:&lt;/p&gt;
&lt;pre&gt;public struct LetterHistogramAgg
{
 Int32 As;
 Int32 Bs;
 Int32 Cs;
...
 public void Init()
 {
  As = 0;
  Bs = 0;
...
&lt;/pre&gt;
&lt;p&gt;The Accumulate method converts the incoming string to upper case, the checks out each of its letters to increment the approprate accumlator. Here is a fragement of that:&lt;/p&gt;
&lt;pre&gt; public void Accumulate(SqlString Value)
 {
  Char[] letters = Value.Value.ToUpper().ToCharArray();
  foreach (Char letter in letters)
  {
   if (letter == 'A')
   {
    As = As + 1;
    continue;
   }
&lt;/pre&gt;
&lt;p&gt;The Merge method just has to add together the accumlators, you can see that in the example code.&lt;/p&gt;
&lt;p&gt;The terminate method has to return the histogram. Because this is a UDA that must be a scalar, so what it returns is a ";" separated string with the counts from each letter accumulator, in order. Here is a fragment of that method:&lt;/p&gt;
&lt;pre&gt; public SqlString Terminate()
 {
  StringBuilder sb = new StringBuilder();
  sb.Append(As.ToString());
  sb.Append(";");
  sb.Append(Bs.ToString());
  sb.Append(";");
&lt;/pre&gt;
&lt;p&gt;At first glance it might seem less than useful to return a histogram as a string, but shortly we will see it is very easy to make a table valued user defined function that converts it to a table.&lt;/p&gt;
&lt;p&gt;One of the pieces of test data I have are tables of male and female first names and last names that were used to fill out United States census forms. You can get the raw data for these tables from &lt;a href="http://www.census.gov/genealogy/names/dist.all.last"&gt;http://www.census.gov/genealogy/names/dist.all.last&lt;/a&gt;, &lt;a href="http://www.census.gov/genealogy/names/dist.female.first"&gt;http://www.census.gov/genealogy/names/dist.female.first&lt;/a&gt;, and &lt;a href="http://www.census.gov/genealogy/names/dist.male.last"&gt;http://www.census.gov/genealogy/names/dist.male.last&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've named the tables MaleFirstName, FemaleFirstNames, and LastNames. Using the LetterHistogramAgg on the MaleFirstName table produces:&lt;/p&gt;&lt;pre&gt;SELECT dbo.LetterHistogramAgg(Name) from MaleFirstNames)
-------------------------------------------------------------------------
664;135;234;333;785;86;117;191;448;104;94;507;229;597;561;52;13;677;286;304;168;73;83;10;205;18;
&lt;/pre&gt;
&lt;p&gt;Next lets look at making a CLR table valued user defined function that can turn this into something more useful. In order to create a table valued function using the CLR, the function must return an object with an IEnumerable interface. This can be a bit tedious to implement, but in C# the yield keyword will in fact do most of the implementation for you. Below is the code for a UDF that converts the string produced by the LetterHistorgramAgg into a table. The name of the function it implements is LetterHistogramTable.&lt;/p&gt;&lt;pre&gt;public partial class UserDefinedFunctions
{
 public static void GetHistRow(Object obj, out Char c, out Int32 count)
 {
  HistSample hs = obj as HistSample;
  c = hs.letter;
  count = hs.count;
 }
 class HistSample
 {
  internal Char letter;
  internal Int32 count;
  internal HistSample(Char letter, Int32 count)
  {
   this.count = count;
   this.letter = letter;
  }
 }
 [Microsoft.SqlServer.Server.SqlFunction(
  FillRowMethodName="GetHistRow",
  IsPrecise=true,
  IsDeterministic=true,
  TableDefinition="Letter NCHAR(1), [Count] INT")]
 public static IEnumerable LetterHistogramTable(SqlString histogram)
 {
  if (!histogram.IsNull)
  {
   String[] counts = histogram.Value.Split(new char[] { ';' });
   String alphabet = "ABCDEFGHIJKLMNOPQUSTUVWXYZ";
   for (Int32 index = 0; index &amp;lt; 26; index++)
   {
    yield return new HistSample(alphabet[index], Int32.Parse(counts[index]));
   }
  }
 }
};
&lt;/pre&gt;
&lt;p&gt;Once we have deployed the LetterHistogramTable UDF we can retry making the histograms of the letters in the MaleFirstNames table. We use the LetterHistogramAgg to make the histogram string, then use the LetterHistogramTable to turn the string into a table.&lt;/p&gt;
&lt;pre&gt;SELECT * FROM dbo.LetterHistogramTable((
 SELECT dbo.LetterHistogramAgg(Name) from MaleFirstNames))

Letter Count
------ -----------
A      664
B      135
C      234
D      333
E      785
F      86
G      117
H      191
I      448
J      104
K      94
L      507
M      229
N      597
O      561
P      52
Q      13
U      677
S      286
T      304
U      168
V      73
W      83
X      10
Y      205
Z      18
&lt;/pre&gt;Let's do the same thing with the FemaleFirstNames table:

&lt;pre&gt;SELECT * FROM dbo.LetterHistogramTable((
 SELECT dbo.LetterHistogramAgg(Name) from FemaleFirstNames))
Letter Count
------ -----------
A      4146
B      327
C      717
D      811
E      3370
F      142
G      346
H      796
I      2350
J      311
K      405
L      2064
M      775
N      2330
O      986
P      147
Q      43
U      1793
S      1097
T      1217
U      423
V      262
W      100
X      29
Y      686
Z      94&lt;/pre&gt;&lt;p&gt;

&lt;/p&gt;

&lt;p&gt;There is another way to implement the letter historgram and that is to use a CURSOR. You create a table to hold the accumulations of letter counts and then use the CURSOR to fill that table. Here is an example:&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;&lt;pre&gt;CREATE TABLE #letterCounts
(
letter CHAR(1) PRIMARY KEY,
count INT
)
INSERT INTO #letterCounts SELECT 'A', 0
INSERT INTO #letterCounts SELECT 'B', 0
.....

UPDATE #letterCounts SET Count=0
DECLARE  Name_Cursor CURSOR FOR SELECT Name FROM MaleFirstNames
DECLARE @name VARCHAR(MAX)
OPEN Name_Cursor;
FETCH NEXT FROM Name_Cursor INTO @name;
WHILE @@FETCH_STATUS = 0
BEGIN
 DECLARE @index INT
 SET @index = LEN(@name)
 WHILE @index &amp;gt; 0
 BEGIN
  -- go through each letter in string
  UPDATE #letterCounts SET count = count + 1 WHERE SUBSTRING(@name, @index, 1) = letter
  SET @index = @index - 1
 END
    FETCH NEXT FROM Name_Cursor INTO @name
END;
CLOSE Name_Cursor;
DEALLOCATE name_Cursor;
SELECT * FROM #letterCounts&lt;/pre&gt;&lt;p&gt;
letter count
------ -----------
A      664
B      135
C      234
D      333
E      785
F      86
G      117
H      191
I      448
J      104
K      94
L      507
M      229
N      597
O      561
P      52
Q      13
R      677
S      286
T      304
U      168
V      73
W      83
X      10
Y      205
Z      18
&lt;/p&gt;
&lt;p&gt;In general any aggregate can be implemented using a CURSOR. The difference between using a CURSOR to implement the aggregate and a CLR user defined aggregate is speed. In general a CLR user defined aggregate will be more than two orders of magnitude, that is 100 times, faster than the same aggregate implemented using a CURSOR. On my little portable running SQL Server Developer Edition the Cursor based implementation takes about 50 seconds to run and the user defined aggregate one runs in well under one second. Of course this is just a generalization to show that CLR UDA's in general run faster than CURSOR based one... always check you data in your usage patterns before making any kind of decision about performance&lt;/p&gt;
&lt;p&gt;This isn't the whole store on user defined aggregates but it is a start. In later blog articles we will look at "classic" aggregates and also look at some more trade-off between the implementations of aggregates.&lt;/p&gt;
&lt;p&gt;Dan &lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>5</thr:total></entry><entry><id>36345</id><published>2006-08-26T15:21:00.0-05:00</published><updated>2006-08-26T15:21:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Interesting Finds: August 26, 2006</title><content type="html"></content><author><name>Anonymous</name></author><thr:in-reply-to ref="36317"></thr:in-reply-to></entry><entry><id>39038</id><published>2006-09-29T09:43:00.0-05:00</published><updated>2006-09-29T09:43:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: CLR Based Histogram Functions and SQL Server 2005</title><content type="html">What happend to R in the alphabet?</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36317"></thr:in-reply-to></entry><entry><id>45483</id><published>2006-12-27T06:38:00.0-05:00</published><updated>2006-12-27T06:38:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Don't need a cursor or CLR for this...</title><content type="html">Very nice blog, Dan... but you don't need a cursor to do this or a CLR for performance...
&lt;br /&gt;
&lt;br /&gt;Make a permanent "Tally" table, like this...
&lt;br /&gt;--===== Create and populate the Tally table on the fly
&lt;br /&gt; SELECT TOP 11000 --equates to more than 30 years of dates
&lt;br /&gt;        IDENTITY(INT,1,1) AS N
&lt;br /&gt;   INTO dbo.Tally
&lt;br /&gt;   FROM Master.dbo.SysColumns sc1,
&lt;br /&gt;        Master.dbo.SysColumns sc2
&lt;br /&gt;
&lt;br /&gt;--===== Add a Primary Key to maximize performance
&lt;br /&gt;  ALTER TABLE dbo.Tally
&lt;br /&gt;        ADD CONSTRAINT PK_Tally_N PRIMARY KEY CLUSTERED (N)
&lt;br /&gt;
&lt;br /&gt;--===== Allow the general public to use it
&lt;br /&gt;  GRANT SELECT ON dbo.Tally TO PUBLIC
&lt;br /&gt;
&lt;br /&gt;... and the Histogram becomes this easy and nasty fast...
&lt;br /&gt;
&lt;br /&gt;--===== Create the histogram using a join to the Tally table
&lt;br /&gt; SELECT Letter  = SUBSTRING(names.Name,t.N,1),
&lt;br /&gt;        [Count] = COUNT(*)
&lt;br /&gt;   FROM dbo.MaleFirstNames names,
&lt;br /&gt;        dbo.Tally t
&lt;br /&gt;  WHERE t.N &amp;lt;= LEN(names.Name)
&lt;br /&gt;  GROUP BY SUBSTRING(names.Name,t.N,1)
&lt;br /&gt;  ORDER BY Letter
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36317"></thr:in-reply-to></entry><entry><id>47723</id><published>2007-06-12T16:59:00.0-05:00</published><updated>2007-06-12T16:59:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: CLR Based Histogram Functions and SQL Server 2005</title><content type="html">Here's an alternate approach for an equiwidth histogram. It also features an (almost) arbitrary number of buckets:
&lt;br /&gt;
&lt;br /&gt;http://www.nearinfinity.com/blogs/page/seths?entry=quick_and_dirty_sql_histogram</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36317"></thr:in-reply-to></entry><entry><id>97233</id><published>2010-12-01T04:02:49.0-05:00</published><updated>2010-12-01T04:02:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">RealTime - Questions: &amp;quot;How can i make my cursor go faster?&amp;quot;</title><content type="html">Pingback from  RealTime - Questions: "How can i make my cursor go faster?"</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36317"></thr:in-reply-to></entry><entry><id>36829</id><published>2006-09-01T05:37:00.0-05:00</published><updated>2006-09-01T05:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Comparing XML in SQL Server 2005</title><content type="html">&lt;h1&gt;Comparing XML in SQL Server 2005&lt;/h1&gt;
&lt;p&gt;Xml is not text so a literal compare of two xml documents may lead to a false negative, that is it may indicate that two documents are not equal when in fact they are. For example these two xml documents are the same: &lt;/p&gt;&lt;pre&gt; &amp;lt;item x="1" y="2"/&amp;gt;
 
 
 &amp;lt;item y="2" x="1"/&amp;gt;
 &lt;/pre&gt;
&lt;p&gt;because the order of attributes in xml is not signicant. SQL Server has not "built in" way to compare xml documents and in fact makes a point about the fact that it cannot compare xml documents. This is not a deficiency of SQL Server, it is just due to the fact that xml may not be treated as ordinary text. &lt;/p&gt;
&lt;p&gt;You can try to compare to xml documents by converting them to a string or a varbinary type, but this will lead to false negatives. For example: &lt;/p&gt;&lt;pre&gt; DECLARE @x1 xml
 DECLARE @x2 xml
 
 set @x1 = '&amp;lt;item x="1" y="2"/&amp;gt;'
 set @x2 = '&amp;lt;item y="2" x="1"/&amp;gt;'
 if CAST(@x1 AS VARBINARY(MAX)) = CAST(@x2 AS VARBINARY(MAX))
 PRINT 'equal'
 ELSE
 PRINT 'not equal'
 &lt;/pre&gt;
This prints out 'not equal' 

&lt;p&gt;Things get more interesting if an xml schema is involved. For example: &lt;/p&gt;&lt;pre&gt; CREATE XML SCHEMA COLLECTION Test AS
 '
 &amp;lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
 targetNamespace = "urn:test"&amp;gt;
 &amp;lt;xs:element name="item"&amp;gt;
 &amp;lt;xs:complexType&amp;gt;
 &amp;lt;xs:attribute name="x" type="xs:int"/&amp;gt;
 &amp;lt;xs:attribute name="y" type="xs:int"/&amp;gt;
 &amp;lt;/xs:complexType&amp;gt;
 &amp;lt;/xs:element&amp;gt;
 &amp;lt;/xs:schema&amp;gt;'
 
 DECLARE @x1 xml(Test)
 DECLARE @x2 xml
 
 set @x1 = '&amp;lt;item xmlns="urn:test" x="00" y="2"/&amp;gt;'
 set @x2 = '&amp;lt;item xmlns="urn:test" x="00" y="2"/&amp;gt;'
 if CAST(@x1 AS VARBINARY(MAX)) = CAST(@x2 AS VARBINARY(MAX))
 PRINT 'equal'
 ELSE
 PRINT 'not equal'
 
 &lt;/pre&gt;
&lt;p&gt;this prints out 'not equal' even though both @x1 and @x2 appear to be literally the same. This is due to the fact that SQL Server does not store literal form of the xml when it is strongly typed, it stores each of the simple types in the xml document in it's XML Schema canonical form. The conanical form of '00' for xs:int is '0'. So in this case the comparison is not equal becuase SQL Server is comparing '0' in the strongly typed @x1 to '00' in the weakly typed @x2. &lt;/p&gt;
&lt;p&gt;In order to compare two xml documents the must both be converted to a canonical form (http://www.w3.org/TR/2001/REC-xml-c14n-20010315). You can then do a byte by byte comparison of the two canonical forms to determine if they are the same according to the XML 1.1 recomendation, but will not take into account the canonical represenation of data types from the XML Schema recomendation. &lt;/p&gt;
&lt;p&gt;The XmlDsigC14NTransform class in the .NET Framwork can convert xml to canonical xml so that it can be compared. You can create a CLR user defined function that uses this class to do the comparison. For example: &lt;/p&gt;&lt;pre&gt; public partial class UserDefinedFunctions
 {
  [Microsoft.SqlServer.Server.SqlFunction]
  public static SqlBoolean CompareXML(SqlXml x1, SqlXml x2)
  {
   if (x1.IsNull || x2.IsNull)
   {
    return SqlBoolean.Null;
   }
   XmlDocument xdoc1 = new XmlDocument();
   xdoc1.Load(x1.CreateReader());
   XmlDocument xdoc2 = new XmlDocument();
   xdoc2.Load(x2.CreateReader());
   XmlDsigC14NTransform xcanonical1 = new XmlDsigC14NTransform();
   xcanonical1.LoadInput(xdoc1);
   XmlDsigC14NTransform xcanonical2 = new XmlDsigC14NTransform();
   xcanonical2.LoadInput(xdoc2);
   // this returns the conanical form
   Stream s1 = (Stream)xcanonical1.GetOutput(typeof(Stream));
   Stream s2 = (Stream)xcanonical2.GetOutput(typeof(Stream));
   // do byte by byte compare
   if (s1.Length != s2.Length)
   {
    return new SqlBoolean(false);
   }
   for (Int32 index = 0; index &amp;lt; s1.Length; index++)
   {
    if (s1.ReadByte() != s2.ReadByte())
    {
     return new SqlBoolean(false);
    }
   }
   return new SqlBoolean(true);
  }
 };
 
 &lt;/pre&gt;
&lt;p&gt;Then in T-SQL you can do the comparison: &lt;/p&gt;&lt;pre&gt; DECLARE @x1 xml
 DECLARE @x2 xml
 
 set @x1 = '&amp;lt;item x="1" y="2"/&amp;gt;'
 set @x2 = '&amp;lt;item y="2" x="1"/&amp;gt;'
 DECLARE @b bit
 set @b = dbo.CompareXml(@x1, @x2)
 IF @b = 1
 PRINT 'equal'
 ELSE
 PRINT 'not equal'
 &lt;/pre&gt;
&lt;p&gt;and this will print out 'equal' as expected. &lt;/p&gt;
&lt;p&gt;Note that the assembly the contains the CompareXML function will have to be loaded with PERMISSION_SET = UNSAFE because XmlDsigC14NTransform.LoadInput may not be used from partially trusted assemblies. &lt;/p&gt;
&lt;p&gt;If the following comparison is done: &lt;/p&gt;&lt;pre&gt; 
 DECLARE @x1 xml(Test)
 DECLARE @x2 xml
 
 set @x1 = '&amp;lt;item xmlns="urn:test" x="00" y="2"/&amp;gt;'
 set @x2 = '&amp;lt;item xmlns="urn:test" x="00" y="2"/&amp;gt;'
 if dbo.CompareXml(@x1,@x2) = 1
 PRINT 'equal'
 ELSE
 PRINT 'not equal'
 &lt;/pre&gt;
&lt;p&gt;It will return 'not equal' because SQL Server does not store literal xml for a strongly typed xml variable. It stores strongly typed xml datatype in their XML Schema canonical form and this is '0' for '00' if the datatype is xs:int. Again this is expected because of the way that SQL Server treats strongly typed xml. &lt;/p&gt;Dan </content><author><name>dan-sullivan</name></author><thr:total>4</thr:total></entry><entry><id>36830</id><published>2006-09-01T06:20:00.0-05:00</published><updated>2006-09-01T06:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Comparing XML in SQL Server 2005</title><content type="html">The second example will always print out 'not equal' because of this:
&lt;br /&gt;
&lt;br /&gt; PRINT 'not equal'
&lt;br /&gt; ELSE
&lt;br /&gt; PRINT 'not equal'
&lt;br /&gt;
&lt;br /&gt;Of course, it continues to print out 'not equal' even if you correct the first part to 'equal'!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36829"></thr:in-reply-to></entry><entry><id>36870</id><published>2006-09-01T14:33:00.0-05:00</published><updated>2006-09-01T14:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Comparing XML in SQL Server 2005</title><content type="html">You've sneakily changed it now! (Thanks)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36829"></thr:in-reply-to></entry><entry><id>48052</id><published>2007-07-21T12:44:00.0-05:00</published><updated>2007-07-21T12:44:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Comparing XML in SQL Server 2005</title><content type="html">You can use an XML task in SSIS to do the comparison</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36829"></thr:in-reply-to></entry><entry><id>52997</id><published>2008-09-14T08:58:57.0-05:00</published><updated>2008-09-14T08:58:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Comparing XML in SQL Server 2005</title><content type="html">Nice work! This is one of the links I give people when they ask me about comparing two XML values. I just wrote a TSQL function that compares two XML values. http://www.sqlserverandxml.com/2008/09/xquery-lab-36-writing-tsql-function-to.html 

</content><author><name>Anonymous</name></author><thr:in-reply-to ref="36829"></thr:in-reply-to></entry><entry><id>41337</id><published>2006-10-28T12:16:00.0-05:00</published><updated>2006-10-28T12:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PowerShell and XML and SQL Server</title><content type="html">&lt;p&gt;PowerShell offers support for XML data directly though its [xml] datatype and this article is going to look at that.&lt;/p&gt;
&lt;p&gt;First of all to make use of the builtin [xml] datatype just prefix a variable name with [xml] when you assign something to it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$order = "&amp;lt;order customer='joe'&amp;gt;
&amp;gt;&amp;gt;         &amp;lt;line price='3.00' qty='4'&amp;gt;nut&amp;lt;/line&amp;gt;
&amp;gt;&amp;gt;         &amp;lt;line price='1.00' qty='3'&amp;gt;hammer&amp;lt;/line&amp;gt;
&amp;gt;&amp;gt;         &amp;lt;/order&amp;gt;"
&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At first glance this appears to be an ordinary assignment of a string to a variable. But it is doing more than that, it is checking the string to make sure that it is well-formed XML, &lt;i&gt;i.e.&lt;/i&gt; text that conforms to the XML specification. For example the following will produce an error&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$xdata = "&amp;lt;order &amp;gt;&amp;lt;line&amp;gt;stuff&amp;lt;/line&amp;gt;&amp;lt;/Order&amp;gt;"
Cannot convert value "&amp;lt;order &amp;gt;&amp;lt;line&amp;gt;stuff&amp;lt;/line&amp;gt;&amp;lt;Order&amp;gt;" to type "System.Xml.Xm
lDocument". Error: "Unexpected end of file has occurred. The following elements
 are not closed: Order, order. Line 1, position 34."
At line:1 char:12
+ [xml]$xdata  &amp;lt;&amp;lt;&amp;lt;&amp;lt; = "&amp;lt;order &amp;gt;&amp;lt;line&amp;gt;stuff&amp;lt;/line&amp;gt;&amp;lt;Order&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;because of a mis-match between the opening &lt;code&gt;&amp;lt;order&amp;gt;&lt;/code&gt; tag and the closing &lt;code&gt;&amp;lt;\Order&amp;gt;&lt;/code&gt; tag. So when you use an [xml] variable in PowerShell you can be sure that what it contains is XML.&lt;/p&gt;
&lt;p&gt;So $order is an [xml] variable, what can we do with it? One of the nice things about PowerShell is that if you are not sure what you can do with a varable you can always ask by piping the variable to the get-member function.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order | get-member

   TypeName: System.Xml.XmlDocument
Name                        MemberType            Definition
----                        ----------            ----------
ToString                    CodeMethod            static System.String XmlNo...
add_NodeChanged             Method                System.Void add_NodeChange...
add_NodeChanging            Method                System.Void add_NodeChangi...
add_NodeInserted            Method                System.Void add_NodeInsert...
add_NodeInserting           Method                System.Void add_NodeInsert...
add_NodeRemoved             Method                System.Void add_NodeRemove...
add_NodeRemoving            Method                System.Void add_NodeRemovi...
AppendChild                 Method                System.Xml.XmlNode AppendC...
Clone                       Method                System.Xml.XmlNode Clone()
CloneNode                   Method                System.Xml.XmlNode CloneNo...
CreateAttribute             Method                System.Xml.XmlAttribute Cr...
CreateCDataSection          Method                System.Xml.XmlCDataSection...
CreateComment               Method                System.Xml.XmlComment Crea...
CreateDocumentFragment      Method                System.Xml.XmlDocumentFrag...
CreateDocumentType          Method                System.Xml.XmlDocumentType...
CreateElement               Method                System.Xml.XmlElement Crea...
CreateEntityReference       Method                System.Xml.XmlEntityRefere...
CreateNavigator             Method                System.Xml.XPath.XPathNavi...
CreateNode                  Method                System.Xml.XmlNode CreateN...
CreateProcessingInstruction Method                System.Xml.XmlProcessingIn...
CreateSignificantWhitespace Method                System.Xml.XmlSignificantW...
CreateTextNode              Method                System.Xml.XmlText CreateT...
CreateWhitespace            Method                System.Xml.XmlWhitespace C...
CreateXmlDeclaration        Method                System.Xml.XmlDeclaration ...
Equals                      Method                System.Boolean Equals(Obje...
GetElementById              Method                System.Xml.XmlElement GetE...
GetElementsByTagName        Method                System.Xml.XmlNodeList Get...
GetEnumerator               Method                System.Collections.IEnumer...
GetHashCode                 Method                System.Int32 GetHashCode()
GetNamespaceOfPrefix        Method                System.String GetNamespace...
GetPrefixOfNamespace        Method                System.String GetPrefixOfN...
GetType                     Method                System.Type GetType()
get_Attributes              Method                System.Xml.XmlAttributeCol...
get_BaseURI                 Method                System.String get_BaseURI()
get_ChildNodes              Method                System.Xml.XmlNodeList get...
get_DocumentElement         Method                System.Xml.XmlElement get_...
get_DocumentType            Method                System.Xml.XmlDocumentType...
get_FirstChild              Method                System.Xml.XmlNode get_Fir...
get_HasChildNodes           Method                System.Boolean get_HasChil...
get_Implementation          Method                System.Xml.XmlImplementati...
get_InnerText               Method                System.String get_InnerText()
get_InnerXml                Method                System.String get_InnerXml()
get_IsReadOnly              Method                System.Boolean get_IsReadO...
get_Item                    Method                System.Xml.XmlElement get_...
get_LastChild               Method                System.Xml.XmlNode get_Las...
get_LocalName               Method                System.String get_LocalName()
get_Name                    Method                System.String get_Name()
get_NamespaceURI            Method                System.String get_Namespac...
get_NameTable               Method                System.Xml.XmlNameTable ge...
get_NextSibling             Method                System.Xml.XmlNode get_Nex...
get_NodeType                Method                System.Xml.XmlNodeType get...
get_OuterXml                Method                System.String get_OuterXml()
get_OwnerDocument           Method                System.Xml.XmlDocument get...
get_ParentNode              Method                System.Xml.XmlNode get_Par...
get_Prefix                  Method                System.String get_Prefix()
get_PreserveWhitespace      Method                System.Boolean get_Preserv...
get_PreviousSibling         Method                System.Xml.XmlNode get_Pre...
get_SchemaInfo              Method                System.Xml.Schema.IXmlSche...
get_Schemas                 Method                System.Xml.Schema.XmlSchem...
get_Value                   Method                System.String get_Value()
ImportNode                  Method                System.Xml.XmlNode ImportN...
InsertAfter                 Method                System.Xml.XmlNode InsertA...
InsertBefore                Method                System.Xml.XmlNode InsertB...
Load                        Method                System.Void Load(Stream in...
LoadXml                     Method                System.Void LoadXml(String...
Normalize                   Method                System.Void Normalize()
PrependChild                Method                System.Xml.XmlNode Prepend...
ReadNode                    Method                System.Xml.XmlNode ReadNod...
RemoveAll                   Method                System.Void RemoveAll()
RemoveChild                 Method                System.Xml.XmlNode RemoveC...
remove_NodeChanged          Method                System.Void remove_NodeCha...
remove_NodeChanging         Method                System.Void remove_NodeCha...
remove_NodeInserted         Method                System.Void remove_NodeIns...
remove_NodeInserting        Method                System.Void remove_NodeIns...
remove_NodeRemoved          Method                System.Void remove_NodeRem...
remove_NodeRemoving         Method                System.Void remove_NodeRem...
ReplaceChild                Method                System.Xml.XmlNode Replace...
Save                        Method                System.Void Save(String fi...
SelectNodes                 Method                System.Xml.XmlNodeList Sel...
SelectSingleNode            Method                System.Xml.XmlNode SelectS...
set_InnerText               Method                System.Void set_InnerText(...
set_InnerXml                Method                System.Void set_InnerXml(S...
set_Prefix                  Method                System.Void set_Prefix(Str...
set_PreserveWhitespace      Method                System.Void set_PreserveWh...
set_Schemas                 Method                System.Void set_Schemas(Xm...
set_Value                   Method                System.Void set_Value(Stri...
set_XmlResolver             Method                System.Void set_XmlResolve...
Supports                    Method                System.Boolean Supports(St...
Validate                    Method                System.Void Validate(Valid...
WriteContentTo              Method                System.Void WriteContentTo...
WriteTo                     Method                System.Void WriteTo(XmlWri...
Item                        ParameterizedProperty System.Xml.XmlElement Item...
order                       Property              System.Xml.XmlElement orde...

PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that an [xml] PowerShell variable is an .NET XmlDocument. So everything you know about an XmlDocument can be applied to a PowerShell [xml] variable. In a later article we will look at how you can leverage this fact, but for now we will stick to the XML support that is directly part of PowerShell.&lt;/p&gt;
&lt;p&gt;Look closely at the information returned by get-member… notice there is a property named “order” of type XmlElement. If you lookup XmlDocument in MSDN you will not find an order property for it, this is something that PowerShell has added.&lt;/p&gt;
&lt;p&gt;The order property is in fact the root, or document, element for the &lt;code&gt;$order&lt;/code&gt; document. PowerShell has a simple path language for XML that makes use of the additional properties that PowerShell adds to XML elements. This language is not XPath but still very useful. The simplest thing you can do with an XML variable is ask what it contains:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order
order
-----
order

PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It produces a table that shows the children of the &lt;code&gt;$order&lt;/code&gt; variable. It shows that the &lt;code&gt;$order&lt;/code&gt; variable has a single child named “order” whose value is “order”. Since we saw that order is a property of the $order variable we can append it with a “.” to that variable to see what that contains:.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order
customer                                line
--------                                ----
joe                                     {line, line}

PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When PowerShell displays the children of an element in at table, or list, it show both the elements and attributes of that element.&lt;/p&gt;
&lt;p&gt;If you prefer to see the children of an [xml] variable in list form you can pipe the results to the format-list function:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order | format-list

customer : joe
line     : {line, line}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we see that line has a number of &lt;code&gt;line&lt;/code&gt;s as children. &lt;/p&gt;
&lt;p&gt;We can extend this dotted property syntax further and find the value for customer:&lt;/p&gt;
&lt;p&gt;PS C:\demos&amp;gt; $order.order.customer joe PS C:\demos&amp;gt;&lt;/p&gt;
&lt;p&gt;We can tell that this is just a plain old value because the telltale “——-” used to separate the names of properties from their values is not there. Likewise if we had used a list form the &lt;code&gt;name :&lt;/code&gt; is not there.&lt;/p&gt;
&lt;p&gt;Now let’s use the dotted property syntax to see what the value of line is.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order.line
price                      qty                        #text
-----                      ---                        -----
3.00                       4                          nut
4.00                       2                          hammer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we can see that PowerShell has output a two lines, one for each line element in the &lt;code&gt;order&lt;/code&gt; element. &lt;code&gt;price&lt;/code&gt; and &lt;code&gt;qty&lt;/code&gt; are attributes of the line and the special name &lt;code&gt;#text&lt;/code&gt; indicates that the line element contains some text. &lt;/p&gt;
&lt;p&gt;Since there are a number of &lt;code&gt;line&lt;/code&gt; elements we can refer to them individually using an array syntax.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order.line[0]
price                      qty                        #text
-----                      ---                        -----
3.00                       4                          nut

PS C:\demos&amp;gt; $order.order.line[1]
price                      qty                        #text
-----                      ---                        -----
4.00                       2                          hammer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can even ask how many line elements there are.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order.line.Length
2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Under the covers &lt;code&gt;$order.order.line&lt;/code&gt; is a .NET array and we can do with it anything we might do with a .NET array. If we want the price of the second &lt;code&gt;line&lt;/code&gt; element…&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order.line[1].price
4.00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The dotted property syntax is actually a simple path language and is very similar to that used in data binding in ADO.NET, Windows Workflow, and Windows Presentation Framework. Now that we see the basics of this syntax lets see if we can do some calculations. Let’s calculate the value of the order.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $value = 0
PS C:\demos&amp;gt; $order.order.line | %{$value += [double]$_.qty * $_.price}
PS C:\demos&amp;gt; $value
20
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we had to cast the qty attribute to a double to force a numeric computation.&lt;/p&gt;
&lt;p&gt;First we create a &lt;code&gt;$value&lt;/code&gt; variable and initialize it to 0. Then we use the dotted property syntax to select the line elements in the &lt;code&gt;$order&lt;/code&gt; variable. &lt;code&gt;$order.order.line&lt;/code&gt; is actually a .NET array. When a .NET array is passed into a segment of a pipeline, as indicated by the &lt;code&gt;|&lt;/code&gt; symbol, each item in the array is passed into that segment one at a time for processing.&lt;/p&gt;
&lt;p&gt;The %{} syntax in the second segment of the pipeline says to execute what is between the braces once for each item that flows into the pipe. The &lt;code&gt;$_&lt;/code&gt; refers to the individual item that is flowing through that segment, in this case a line element. So as the line elements flow through the pipe the script between the braces calculates the extended price, &lt;i&gt;i.e.&lt;/i&gt; the &lt;code&gt;price&lt;/code&gt; times the &lt;code&gt;qty&lt;/code&gt;, for the line element and accumulates that product into the &lt;code&gt;$value&lt;/code&gt; element. Last we get the value of the &lt;code&gt;$value&lt;/code&gt; element.&lt;/p&gt;
&lt;p&gt;Next let’s do this same calculation again, but be more “pipeline” oriented.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $order.order.line | %{[double]$_.qty * $_.price} | &amp;amp;{begin{$v = 0}process{$v += $_}end{$v}}
20
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is making use of an in-line function, the part inside of &lt;code&gt;&amp;amp;{}&lt;/code&gt;. It starts the same way the previous solution did, by passing the line elements into the pipeline. The second segment of the pipeline calculates the extended price for the line element and passes it onto the last segment.&lt;/p&gt;
&lt;p&gt;The last segement is the in-line function and consists of three parts. The first part is inside of &lt;code&gt;begin{}&lt;/code&gt; and is executed just once no matter how many elements pass through the pipeline and it initializes the &lt;code&gt;$v&lt;/code&gt; variable to 0.&lt;/p&gt;
&lt;p&gt;The second part of the function, the part inside of &lt;code&gt;process{}&lt;/code&gt;, is executed once on each item that passes through the pipeline. It just adds each of the extended prices it receives to the &lt;code&gt;$v&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;The last part of the function, the part inside of the &lt;code&gt;end{}&lt;/code&gt;, is also executed just once, but only after the process part is finished processing all of the items passing through the pipeline. All it does is refer to the &lt;code&gt;$v&lt;/code&gt; so it is returned.&lt;/p&gt;
&lt;p&gt;We can carry this even further. If we know we will be just summing up some numbers that pass though the pipeline we can change our in-line function into a named function and reuse it over and over.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; function sum {
&amp;gt;&amp;gt; begin{$v = 0}
&amp;gt;&amp;gt; process{$v += $_}
&amp;gt;&amp;gt; end{$v}
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
PS C:\demos&amp;gt; $order.order.line | %{[double]$_.qty * $_.price} | sum
20
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So far our example has used literal XML, that is we have literally typed in the XML document we want to process. In real life you will probably have some XML files to process. There are a number of ways to read a file with PowerShell but the easiest it to use for our purposes is the &lt;code&gt;${}&lt;/code&gt; syntax. The file c:\demos\order.xml contains the same XML document we used to initialize $order in the previous examples.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$orders2 = ${c:\demos\order.xml}
PS C:\demos&amp;gt; $orders2
order
-----
order

PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the full path was specified.&lt;/p&gt;
&lt;p&gt;Another source of XML data is SQL Server. It uses a FOR XML clause in a SELECT statement to return the results of a query in the form of XML. For example the following query is made against a table that contains information about last names there were filled out on United States census forms.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;SELECT name, rank FROM LastNames FOR XML AUTO, ROOT('Names')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The LastNames table contains the names from the census forms along with their rank, ranked by how many forms contained that name. Now we have to somehow use PowerShell to execute a query against SQL Server. Besides its builtin functionality PowerShell can use any functionality provided by a .NET class. So we will use ADO.NET to execute the query. The tricky part, as we shall see in shortly, is how to stick the results into an [xml] PowerShell variable.&lt;/p&gt;
&lt;p&gt;First we need a connection to SQL Server.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $conn = new-object System.Data.SqlClient.SqlConnection
PS C:\demos&amp;gt; $conn.ConnectionString = "server=.;integrated security=true;database=scratch"
PS C:\demos&amp;gt; $conn.Open()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To make the connection we use the PowerShell new-object function to create an instance of SqlConnection then fill out the connection string. Now we need a command.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $cmd = new-object System.Data.SqlClient.SqlCommand
PS C:\demos&amp;gt; $cmd.CommandText="SELECT name, rank FROM LastNames FOR XML AUTO,ROOT('Names')"
PS C:\demos&amp;gt; $cmd.Connection=$conn
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similar to making the connection we make the command by creating an instance of a SqlCommand and fill out the CommandText and Connection.&lt;/p&gt;
&lt;p&gt;When ever a SqlCommand uses FOR XML it must be executed using ExecuteXmlReader, which returns its result in the form of an XmlReader.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xrdr = $cmd.ExecuteXmlReader()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If were were writing a program in C# or VB.NET then at this point we would use the XmlReader to Load an XmlDocument. Wait! Remember what we found out when we used get-member to find out what we could do with an [xml] PowerShell variable? We found out that is was an XmlDocument. So we can just use the Load method on an [xml] varible load it with the results of our query. These is one problem though…&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$names.Load($xrdr)
You cannot call a method on a null-valued expression.
At line:1 char:18
+ [xml]$names.Load( &amp;lt;&amp;lt;&amp;lt;&amp;lt; $xrdr)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A freshly created [xml] variable has not yet been initialized so we cannot use it to load anything. There are a couple of ways to intialize it. One is to just assign an XmlDocument to it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$names = New-Object System.Xml.XmlDocument
PS C:\demos&amp;gt; [xml]$names.Load($xrdr)
PS C:\demos&amp;gt; $names
Names
-----
Names
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have use new-object to create an XmlDocument and then assign it to an [xml] variable. After we have done that the Load method can be used to read the results of our FOR XML query into the &lt;code&gt;$order3&lt;/code&gt; variable. The we have PowerShell to output the &lt;code&gt;$name&lt;/code&gt; variable in tablular form. Here we can see it contains the expected ‘Names” root element.&lt;/p&gt;
&lt;p&gt;Another way to initialize the [xml] varible is to just put some XML into it, then write over it when the Load method is used.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$names = '&amp;lt;a/&amp;gt;'
PS C:\demos&amp;gt; $names.Load($xrdr)
PS C:\demos&amp;gt; $names
Names
-----
Names
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have our Names XML document let’s take a quick look inside of it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $names.Names
LastNames
---------
{SMITH, JOHNSON, WILLIAMS, JONES...}

PS C:\demos&amp;gt; $names.Names.LastNames.Length
88799
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we can see that there are 88799 names the document and the first few are SMITH,JOHNSON and so on.&lt;/p&gt;
&lt;p&gt;One last thing… there is a bug in the RC2 PowerShell that hopefully will be fixed by the time the RTM version is released. Elements whose name is “item” will cause problems when the table or list formatter processes them.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$stuff = '&amp;lt;stuff&amp;gt;&amp;lt;item/&amp;gt;&amp;lt;item/&amp;gt;&amp;lt;/stuf
PS C:\demos&amp;gt; $stuff
stuff
-----
stuff

PS C:\demos&amp;gt; $stuff.stuff
format-default : The member "Item" is already present.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will still be able to process “item” element otherwise, it is just an issue when format-table or format-list is used.&lt;/p&gt;
&lt;p&gt;We have seen the PowerShell has some pretty straightforward support for XML in its simple dotted path expressions. You can work with literal XML, XML from files and XML as it is returned from SQL Server in FOR XML queries. The PowerShell builtin path language that is very similar to that used in data binding which you may have already used. I didn’t cover it in this article, but PowerShell also allows you to make use of all the XML capabilities built into .NET… but that leaves me something to work on for the next article.&lt;/p&gt;
&lt;p&gt;Dan&lt;/p&gt;
&lt;p&gt;dan@pluralsight.com&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>3</thr:total></entry><entry><id>41346</id><published>2006-10-28T17:48:00.0-05:00</published><updated>2006-10-28T17:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and XML and SQL Server</title><content type="html">Very impressive blog entry.  You've either been using PowerShell a lot or are a very quick study.  I can't wait to read the next one.  I see that your previous logs have a lot of SQL in them.  I would love your opinion about our DataTable adapter (get a datatable and pipe it to Get-Member to see what I mean).
&lt;br /&gt;
&lt;br /&gt;Jeffrey Snover [MSFT]
&lt;br /&gt;Windows PowerShell/MMC Architect
&lt;br /&gt;Visit the Windows PowerShell Team blog at:    http://blogs.msdn.com/PowerShell
&lt;br /&gt;Visit the Windows PowerShell ScriptCenter at:  http://www.microsoft.com/technet/scriptcenter/hubs/msh.mspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41337"></thr:in-reply-to></entry><entry><id>41365</id><published>2006-10-29T08:32:00.0-05:00</published><updated>2006-10-29T08:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and XML and SQL Server</title><content type="html">Hi Jeffery,
&lt;br /&gt;
&lt;br /&gt;Thanks for the comments.
&lt;br /&gt;
&lt;br /&gt;Making the columns as named properties of the DataTable is useful, but it seems to have introduced a number of other issues that actually  limit the utility of a DataTable in PowerShell. I working on clarifying what these are... if you are interested please drop me a note at my pluralsight address, dan@pluralsight.com 
&lt;br /&gt;
&lt;br /&gt;Dan</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41337"></thr:in-reply-to></entry><entry><id>43605</id><published>2006-11-29T05:47:00.0-05:00</published><updated>2006-11-29T05:47:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Very Cool</title><content type="html">Great article Dan, I took my first look at PowerShell today and these examples helped me do exactly what I wanted with my XML files in no time.
&lt;br /&gt;
&lt;br /&gt;I see you covered the "Item" bug as well, sadly it hasn't been fixed in the RTM version either; good to know it's a bug and not something I'm doing incorrectly.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41337"></thr:in-reply-to></entry><entry><id>41389</id><published>2006-10-29T12:48:00.0-05:00</published><updated>2006-10-29T12:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PowerShell and ADO.NET</title><content type="html">&lt;p&gt;Lots of times when you are working with a SQL Server all you want to do is to poke at the data. You aren’t doing any real heavy duty transactional processing, you just want to get a look at what is going on. Of course you can fire up SSMS (SQL Server Management Studio) or SqlCmd and issue some &lt;i&gt;ad hoc&lt;/i&gt; queries. Or you can copy all the tables you are interested in to a local instance of SQL Server on your system and do the poking there. Doing the latter is often times a lot more convienient but you need a copy of SQL Server locally and then you have to copy all the data, yadda, yadda, yadda.&lt;/p&gt;
&lt;p&gt;Actually it’s pretty common to take the “work on the data locally” approach in C# applications. These applications use ADO.NET to build a DataSet in the application, then data bind, or add a little procedural programming or otherwise poke at it. But writing, compiling and running an &lt;i&gt;ad hoc&lt;/i&gt; application each time you want to make a little change isn’t really practical. What does make this technique practical though is &lt;b&gt;PowerShell&lt;/b&gt;.&lt;/p&gt;
&lt;p&gt;In this article we’re going to look at the basics of using ADO.NET inside of PowerShell. This article assumes you know the basics of using ADO.NET in C#.&lt;/p&gt;
&lt;p&gt;We will start with the DataSet. A DataSet is just a fancy container, just a bit more fancy than a hash table. It has tables and views and relations and queries sort of like a database does. You can use a DataSet without a database, but if you are going to use it with a database then the SqlDataAdapter is a handy way to make a snapshot of some data and save it into a dataset. Let’s start by using PowerShell to get a snapshot of the data in the Customers table of the Northwind database.&lt;/p&gt;
&lt;p&gt;First of all we will need a query that returns all the data from the Customers table.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$query = "SELECT * FROM [Customers]"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will also need a connection string. This one assumes a local SQL Server.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$connString = "server=.;integrated security;database=northwind"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will need a DataSet to copy the customers data into. PowerShell does not initialize a variable just because it is declared so we will have to make an instance of the DataSet class.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$dataset = new-object "System.Data.DataSet" "MyDataSet"
PS C:\demos&amp;gt; $dataset
RemotingFormat          : Xml
SchemaSerializationMode : IncludeSchema
CaseSensitive           : False
DefaultViewManager      : {System.Data.DataViewManagerListItemTypeDescriptor}
EnforceConstraints      : True
DataSetName             : MyDataSet
Namespace               :
Prefix                  :
ExtendedProperties      : {}
HasErrors               : False
IsInitialized           : True
Locale                  : en-US
Site                    :
Relations               : {}
Tables                  : {}
Container               :
DesignMode              : False
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use the new-object command to make an instance of a DataSet. The second string passed to new-object is the name we want for the DataSet. Typing the name of a variable on the command line in PowerShell returns the properties of that object, in most cases. Here we see that the dataset has a DataSetName of “MyDataSet” as we wanted and that the Tables collection is empty.&lt;/p&gt;
&lt;p&gt;Next we need a SqlDataAdapter so we can fill our dataset.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $da = new-object "System.Data.SqlClient.SqlDataAdapter" ($query, $connString)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have used the new-object command again and passed into the SqlDataAdapter constructor both the query and the connection string. Note that when want to pass more than one parameter to a constructor for a .NET class in PowerShell, you must pass all the parameters in a single array of objects. That is why &lt;code&gt;$query&lt;/code&gt; and &lt;code&gt;$connString&lt;/code&gt; have been passed separated by commas and enclosed in parentheses. A comma separted list enclosed in parentheses in PowerShell creates an array of objects.&lt;/p&gt;
&lt;p&gt;We can check to see that our DataAdapter was properly constructed by looking at the text for the SelectCommand and the ConnectionString for the connection the SelectCommand uses.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $da.SelectCommand.CommandText 
SELECT * FROM [Customers]
PS C:\demos&amp;gt; $da.SelectCommand.Connection.ConnectionString
server=.;integrated security=true;database=northwind
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have everything we need to get our snapshot.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $da.Fill($dataset)
92
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All we did was to call the Fill method on &lt;code&gt;$da&lt;/code&gt; and pass in our &lt;code&gt;$dataset&lt;/code&gt; variable. Once we have done this we can take a look at what is changed about our dataset.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset

RemotingFormat          : Xml
SchemaSerializationMode : IncludeSchema
CaseSensitive           : False
DefaultViewManager      : {System.Data.DataViewManagerListItemTypeDescriptor}
EnforceConstraints      : True
DataSetName             : MyDataSet
Namespace               :
Prefix                  :
ExtendedProperties      : {}
HasErrors               : False
IsInitialized           : True
Locale                  : en-US
Site                    :
Relations               : {}
Tables                  : {}
Container               :
DesignMode              : False
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nothing has really changed. Notice that the Table container is still empty. Don’t worry about this, is just an artifact of how PowerShell treats DataTables. If we ask how many DataTables are in &lt;code&gt;$dataset&lt;/code&gt; we will see it contains one, as we would expect.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset.Tables.Count
1
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It would be nice of the Tables container listed the names of the tables in the DataSet, but it doesn’t so we will have to write a little script to see what is there.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset.Tables | %{$_.TableName}
Table
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Tables property of the &lt;code&gt;$dataset&lt;/code&gt; is a container, so if we pass it into a pipe it sends each of its tables down the pipe one at a time. The script inside of %{} is executed once for each item that passes through the pipe and $_ is the item being passed. &lt;code&gt;$_.TableName&lt;/code&gt; gets the name of each table that passes through the pipe. Of course there is only one in this case.&lt;/p&gt;
&lt;p&gt;As expected, the first table that a DataAdapter loads into a DataSet is named “Table”. The Tables collection acts like an array so we can access the individual tables in the Tables collection and set their names to whatever we want.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset.Tables[0].TableName = "Customers"
PS C:\demos&amp;gt; $dataset.Tables | %{$_.TableName}
Customers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If we want to make it a bit easier to work with the Customers table we can pull out a reference to if from the DataSet.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $customers = $dataset.Tables["Customers"]
PS C:\demos&amp;gt; $customers.Rows.Count
92
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that just as we would do in a C# program we can index items in the Tables collection by their name. Once we have the &lt;code&gt;$customers&lt;/code&gt; reference to the Customers table we can begin to work on it. We tried about the most simple thing you can do with a DataTable, we looked at how many rows there are in it.&lt;/p&gt;
&lt;p&gt;We can look to see what kinds of columns are in the table.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $customers.Columns | Format-Table -autosize -property ColumnName, DataType
ColumnName   DataType
----------   --------
CustomerID   System.String
CompanyName  System.String
ContactName  System.String
ContactTitle System.String
Address      System.String
City         System.String
Region       System.String
PostalCode   System.String
Country      System.String
Phone        System.String
Fax          System.String
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We pipe the Columns from the &lt;code&gt;$customers&lt;/code&gt; variable into the pipe. Here we use the format-table command from PowerShell and specify that we only want to see the ColumnName and DataType properties of each column. The &lt;code&gt;-autosize&lt;/code&gt; tells PowerShell squeeze the columns as tightly together as possible.&lt;/p&gt;
&lt;p&gt;Lets try using PowerShell to process the data. Will start by doing something a little silly, we want the ContactNames from all of the customers whose CompanyName has at least 30 characters in it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $customers | ?{$_["CompanyName"].Length -ge 30} | %{$_["ContactName"]}
Ana Trujillo
Diego Roel
Lino Rodriguez
Helvetius Nagy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you pass a DataTable into a pipe it passes each of the DataTable’s rows in one at a time. The script inside of ?{} is a test, if the calculation done inside of the ?{} is true, then the object that was passed into this segment of the pipe is passed to the next. So ?{} acts as a filter and it is testing each row which is represented by &lt;code&gt;$_&lt;/code&gt;. The last segment of the pipe just returns the ContactName from the rows that made it through the filter.&lt;/p&gt;
&lt;p&gt;Notice that we accessed the columns of the row by using an indexer and the name of the column we wanted. That is way you access individual columns of a row when you write a C# program. However PowerShell gives us an alternate way to access a column, it add properties to the row whose names are the names of the columns. The value of each one of these column properties is the value of the column it represents. The following script does the same thing as the previous but uses the column properties.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $customers | ?{$_.CompanyName.Length -ge 30} | %{$_.ContactName}
Ana Trujillo
Diego Roel
Lino Rodriguez
Helvetius Nagy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You might find this more convient. There are a couple of gotcha’s here though. One thing to keep in mind is that the scripting language in PowerShell is very simlar to C# on purpose. It’s meant to make it straightforward to move back and forth from using PowerShell to C# without constantly have to switch your mental typing context. Another reason for this similarity is that it makes it a reasonably straightforward mechanical transformation to move code from C# to PowerShell and &lt;i&gt;vica versa&lt;/i&gt;. So if you use this shortcut you may end up unconciously typing errors in you C# code when you are working with ADO.NET… pays your money and takes your choice.&lt;/p&gt;
&lt;p&gt;One more gotcha with this feature is that sometimes column names in a database table have spaces in them and these have to be handled a bit differently when you use this PowerShell property short cut. Here is a simple table definition for a table in the Scratch database.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Create table TestPSData
(
[my id] INT
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that is has a single column named “my id”, which has a space in it. We can quickly fix up our data adapter to access this table and add it to our dataset.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $da.SelectCommand.CommandText="SELECT * FROM Scratch..TestPSData"
PS C:\demos&amp;gt; $da.Fill($dataset)
2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can print out the ID’s in the TestPSData table using the ADO.NET indexer method.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset.Tables[1] | %{$_["my id"]}
1
1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see it printed out the “my id” column value for the two rows in the table.&lt;/p&gt;
&lt;p&gt;If we try to use the PowerShell column property method we may get an error…&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset.Tables[1] | %{$_.my id}
Unexpected token 'id' in expression or statement.
At line:1 char:32
+ $dataset.Tables[1] | %{$_.my id} &amp;lt;&amp;lt;&amp;lt;&amp;lt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;because the space in the name makes PowerShell read an extra value that it doesn’t know how to handle. But PowerShell is a scriping language so this is easy to fix.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset.Tables[1] | %{$_."my id"}
1
1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just put some quotes around the property name so PowerShell treats it as a single word.&lt;/p&gt;
&lt;p&gt;Columns names in SQL Server my also begin with a “$” character and this requires a bit more effort to handle, even when you are using the ADO indexer to get the column. Here is another table definition&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Create table TestPSData2
(
[$myid] INT
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Assuming we have filled out dataset up with this table instead of the previous TestPSData table then an attempt to access the $myid column can result in an error in a number of ways.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $ds2.Tables[0] | %{$_."$myid"}
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that this did not produce any results but it should have produced two rows. That is becuase $myid is interpreted by PowerShell as a variable which has no value, so it is the same as using [“”]&lt;/p&gt;
&lt;p&gt;If we try to use indexer then we get a hard error.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $ds2.Tables[0] | %{$_["$myid"]}
Unable to index into an object of type System.Data.DataRow.
At line:1 char:23
+ $ds2.Tables[0] | %{$_[" &amp;lt;&amp;lt;&amp;lt;&amp;lt; $myid"]}
Unable to index into an object of type System.Data.DataRow.
At line:1 char:23
+ $ds2.Tables[0] | %{$_[" &amp;lt;&amp;lt;&amp;lt;&amp;lt; $myid"]}
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is because there is no column named “”.&lt;/p&gt;
&lt;p&gt;The way to handle this problem in an both cases is to escape the $ with a backtick and enclose the whole thing in quotes.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $ds2.Tables[0] | %{$_["`$myid"]}
1
2
PS C:\demos&amp;gt; $ds2.Tables[0] | %{$_."`$myid"}
1
2
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OK, enough property name trivia for now.&lt;/p&gt;
&lt;p&gt;DataTable supports a SQL-like syntax for queries. We can use that feature from PowerShell to redo are “long company name” query from before.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $customers.Select("len(CompanyName) &amp;gt; 30") | %{$_["ContactName"]}
Ana Trujillo
Diego Roel
Helvetius Nagy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Select&lt;/code&gt; method of a Table returns a rowset. When you put a rowset into a pipe, each row is passed down the pipe as it is for a Table. In this example we, as we did before, pull the ContactNames from the rows that made it through the ADO Select filter.&lt;/p&gt;
&lt;p&gt;We can use a rowset in PowerShell the same way we would in any other language that supports ADO.NET. For example we can use it to fill a DataTable.&lt;/p&gt;
&lt;p&gt;Let’s start by building a DataTable from scratch.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $datatable = new-object "System.Data.DataTable"
PS C:\demos&amp;gt; $datatable
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It looks like we didn’t build a DataTable, but it just that PowerShell is giving us the rows of the table instead its properties and there are not yet any rows in this datatable. Let’s proceed as though there is a table and make a column for it. In fact lets make this datatable the same a the TestPSData table we used previously.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $column = new-object "System.Data.DataColumn" ("my id", [Int32])
PS C:\demos&amp;gt; $datatable.Columns.Add($column)
PS C:\demos&amp;gt; $datatable.Columns | format-table -autosize -property ColumnName, DataType
ColumnName DataType
---------- --------
my id      System.Int32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We started by making a DataColumn whose name is “my id” with datatype Int32. When you need to specify a type in PowerShell [Int32] is the equivalent of typeof(Int32) in C#.&lt;/p&gt;
&lt;p&gt;We added the column to the &lt;code&gt;$datatable&lt;/code&gt; columns collection then, as we did previously for the Customers table, check to see what columns the table has. Next let’s fill this datatable with the results captured in a DataReader.&lt;/p&gt;
&lt;p&gt;The typical way we get a DataReader is to use ExecuteReader method on a SqlCommand. So lets build and execute a SqlCommand. First we will need a connection. We can use the one that is already in our DataAdapter.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $conn = $da.SelectCommand.Connection
PS C:\demos&amp;gt; $conn

StatisticsEnabled                : False
ConnectionString                 : server=.;integrated security=true;database=northwind
ConnectionTimeout                : 15
Database                         : northwind
DataSource                       : .
PacketSize                       : 8000
ServerVersion                    :
WorkstationId                    : PARSEC5
FireInfoMessageEventOnUserErrors : False
State                            : Closed
Site                             :
Container                        :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All we did here was to pull a reference to the SqlConnection that our DataAdapter was using. Note that the connection is closed.&lt;/p&gt;
&lt;p&gt;Next we need a command to execute. That easy once we have a connection.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $cmd = New-Object "System.Data.SqlClient.SqlCommand" ("SELECT * FROM Scratch..TestPSData", $conn)
PS C:\demos&amp;gt; $cmd

Connection             : System.Data.SqlClient.SqlConnection
NotificationAutoEnlist : True
Notification           :
Transaction            :
CommandText            : SELECT * FROM Scratch..TestPSData
CommandTimeout         : 30
CommandType            : Text
DesignTimeVisible      : True
Parameters             : {}
UpdatedRowSource       : Both
Site                   :
Container              :
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we need to execute the command and capture the results. Of course we want to be sure that the &lt;code&gt;$conn&lt;/code&gt; is open before we use it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $conn.Open()
PS C:\demos&amp;gt; $rdr = $cmd.ExecuteReader()
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What can we do with a reader? If we were writing a C# program we would probably put &lt;code&gt;$rdr&lt;/code&gt; in a loop and call the Read() method on it until we got to the last row. We could do that in PowerShell too if we wanted to, but there is an alternate way which is more “pipeline” oriented.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $rdr | &amp;amp;{
&amp;gt;&amp;gt; begin{$values = new-object "System.Object[]" $rdr.FieldCount}
&amp;gt;&amp;gt; process {$_.GetValues($values); $datatable.Rows.Add($values)}
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
1
                                                                          my id
                                                                          -----
                                                                              1
1
                                                                              1
PS C:\demos&amp;gt; $datatable | format-table -autosize
my id
-----
    1
    1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We start by putting the DataReader we got in previous step into the pipeline. This causes a DbDataRecord to be sent down the pipeline once for each row in the result. We process the DbDataRecords in an inline function, that is the script inside of &amp;amp;{}. The &lt;code&gt;begin&lt;/code&gt; part of the function runs just once before anything is passed into the segement of the pipeline it occupies. It uses the FieldCount of the DataReader to initialize &lt;code&gt;$values&lt;/code&gt; variable to an array that can hold all of the values of the columns in a row.&lt;/p&gt;
&lt;p&gt;Once the &lt;code&gt;begin&lt;/code&gt; part of the inline function has completed the &lt;code&gt;process&lt;/code&gt; part is executed once for each DbDataRecord. It uses the GetValues method of the DbDataRecord to extract all of the values of the row and put them into the &lt;code&gt;$values&lt;/code&gt; variable. Then it uses the Add method of the Rows property of the &lt;code&gt;$datatable&lt;/code&gt; to add a row to the table.&lt;/p&gt;
&lt;p&gt;Lastly we send the &lt;code&gt;$datatable&lt;/code&gt; variable to format-table and see the the two rows from the TestPSData table in the database have been added to it.&lt;/p&gt;
&lt;p&gt;Note that there is one artifact between the filling of the &lt;code&gt;$datatable&lt;/code&gt; and the final command… we see the content of the table and some other stuff. This is due to the fact that the GetValues and Rows.Add methods both return values and we did not capture so they “leaked” out of the script. We can fix that just by adding a dummy variable to capture that output.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $rdr | &amp;amp;{
&amp;gt;&amp;gt; begin{$values = new-object "System.Object[]" $rdr.FieldCount}
&amp;gt;&amp;gt; process {$d=$_.GetValues($values); $d=$datatable.Rows.Add($values)}
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So we have seen that we can use ADO.NET inside of PowerShell. It a quick way to work out some &lt;i&gt;ad hoc&lt;/i&gt; queries and do some processing on the results. You can easily do &lt;i&gt;ad hoc&lt;/i&gt;SQL queries form SQL Server management Studio or SqlCmd, but with PowerShell you can mix the results of those queries with either pipeline or conventional procedural programming.&lt;/p&gt;
&lt;p&gt;Dan &lt;a href="mailto:dan@pluralsight.com"&gt;dan@pluralsight.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS Thanks to Jeffery Stover for pointing out the column properties on DataTables.&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>105</thr:total></entry><entry><id>46666</id><published>2007-04-05T07:09:00.0-05:00</published><updated>2007-04-05T07:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Thanks for a useful tutorial Dan- I enjoyed following it and it is an excellent intro to PowerShell.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>47539</id><published>2007-05-29T13:41:00.0-05:00</published><updated>2007-05-29T13:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Thanks for this info. Although Powershell is built on .NET, it seems all of Microsoft's examples tend to still use COM objects.  I figured they would try to move scripters away from that, but the evidence is not there.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>47877</id><published>2007-06-30T08:17:00.0-05:00</published><updated>2007-06-30T08:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Gregory (from previous comment).  This is not COM objects.  This is using .NET ADO.NET
&lt;br /&gt;
&lt;br /&gt;As to the broad objection that MS is not "trying to move scripters away from [COM]", they are making it more unnecessary to use COM.  Powershell enables access to many "Object" technologies on the platform including COM and WMI.  Access to .Net classes opens huge alternatives.
&lt;br /&gt;
&lt;br /&gt;I'm glad MS didn't take an approach of steering me away from COM by not supporting it in Powershell.  Powershell is all about "getting things done" and its seamless bridging of these technologies is amazing.  If you don't like COM, you dont' have to use it.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>48122</id><published>2007-07-31T14:46:00.0-05:00</published><updated>2007-07-31T14:46:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Dan 
&lt;br /&gt;thank you for a good walk-through, it is great to show the powererful way of using .NET directly, and very practical - I was looking for exactly this - the way to use ADO.NET rather then ADO for hooking into DB.
&lt;br /&gt;
&lt;br /&gt;Bug report:
&lt;br /&gt;$connString = "server=.;integrated security;database=northwind"
&lt;br /&gt;but should be:
&lt;br /&gt;$connString = "server=.;integrated security=true;database=northwind"
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>50514</id><published>2008-03-18T15:07:00.0-05:00</published><updated>2008-03-18T15:07:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Awesome tutorial!!</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>52309</id><published>2008-08-01T12:10:31.0-05:00</published><updated>2008-08-01T12:10:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Hey, 

Thanks for this blog entry, I figured out how to add a column to an existing dataset table. Now how would I populate the values in the column / rows (I need to combine a 1st name field and a last name field into a "full_name" field).</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>53570</id><published>2008-09-19T15:31:41.0-05:00</published><updated>2008-09-19T15:31:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and ADO.NET</title><content type="html">Great - easy to find and just what I was looking for! 
Showing how to use both the DataTable and the DataReader allows me to handle both small and very large sets of data.
Many thanks</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>74030</id><published>2009-12-17T12:08:36.0-05:00</published><updated>2009-12-17T12:08:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">story of a sysadmin &amp;amp;raquo; PowerShell Link Dump</title><content type="html">Pingback from  story of a sysadmin » PowerShell Link Dump</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>76826</id><published>2010-05-20T11:37:32.0-05:00</published><updated>2010-05-20T11:37:32.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Body Kit Mercury Villager Carbon Fiber Hoods, Mercury Villager Side View Mirror</title><content type="html">Pingback from  Body Kit Mercury Villager Carbon Fiber Hoods, Mercury Villager Side View Mirror</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>76931</id><published>2010-05-20T12:30:55.0-05:00</published><updated>2010-05-20T12:30:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Lexus Rx330 Iowa Gs 450h, Ls430 Headlight Bulb Fog Light Lexus Rx330</title><content type="html">Pingback from  Used Lexus Rx330 Iowa Gs 450h, Ls430 Headlight Bulb Fog Light Lexus Rx330</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77335</id><published>2010-05-20T16:54:34.0-05:00</published><updated>2010-05-20T16:54:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cadillac Allante Parts Shop Online Lights, Aftermarket Tail Light Cadillac Allante Parts</title><content type="html">Pingback from  Cadillac Allante Parts Shop Online Lights, Aftermarket Tail Light Cadillac Allante Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77390</id><published>2010-05-20T17:30:52.0-05:00</published><updated>2010-05-20T17:30:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2005 Dakota Headlights Magnum Dodge Stratus, .357 Magnum Ammo</title><content type="html">Pingback from  2005 Dakota Headlights Magnum Dodge Stratus, .357 Magnum Ammo</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77432</id><published>2010-05-20T17:59:25.0-05:00</published><updated>2010-05-20T17:59:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Starfire Discount Record, Harr On Gold Star Toyota</title><content type="html">Pingback from  Starfire Discount Record, Harr On Gold Star Toyota</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77433</id><published>2010-05-20T18:02:17.0-05:00</published><updated>2010-05-20T18:02:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Glf Part Lockheed Martin, Glf Bulb Osram</title><content type="html">Pingback from  Glf Part Lockheed Martin, Glf Bulb Osram</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77501</id><published>2010-05-20T18:51:07.0-05:00</published><updated>2010-05-20T18:51:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Yukon Headlight Dodge Caravan, Yukon Furnace Eagle Wood</title><content type="html">Pingback from  Yukon Headlight Dodge Caravan, Yukon Furnace Eagle Wood</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77576</id><published>2010-05-20T19:41:11.0-05:00</published><updated>2010-05-20T19:41:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lw1 Engines For Sale, Lw1 Exhaust Systems</title><content type="html">Pingback from  Lw1 Engines For Sale, Lw1 Exhaust Systems</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77631</id><published>2010-05-20T21:17:31.0-05:00</published><updated>2010-05-20T21:17:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bp100 Central Heating, Dodge P10 Radiator Plymouth Cuda</title><content type="html">Pingback from  Bp100 Central Heating, Dodge P10 Radiator Plymouth Cuda</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77862</id><published>2010-05-20T23:40:42.0-05:00</published><updated>2010-05-20T23:40:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">M35 Bulb, Ex35 Aftermarket Infiniti M35 Door</title><content type="html">Pingback from  M35 Bulb, Ex35 Aftermarket Infiniti M35 Door</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>77926</id><published>2010-05-21T00:22:41.0-05:00</published><updated>2010-05-21T00:22:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Aftermarket Headlight Bulbs Firebird, 2002 Firebirds Sale</title><content type="html">Pingback from  Aftermarket Headlight Bulbs Firebird, 2002 Firebirds Sale</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>78380</id><published>2010-05-21T04:44:41.0-05:00</published><updated>2010-05-21T04:44:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Breeze Performance Chip Buy Plymouth, Breeze Water Heater</title><content type="html">Pingback from  Breeze Performance Chip Buy Plymouth, Breeze Water Heater</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>78421</id><published>2010-05-21T05:10:05.0-05:00</published><updated>2010-05-21T05:10:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Saratoga Performance Specifications, Bush Saratoga Collection Managers Desk Harvest Cherry Black Melamine</title><content type="html">Pingback from  Saratoga Performance Specifications, Bush Saratoga Collection Managers Desk Harvest Cherry Black Melamine</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>78463</id><published>2010-05-21T05:34:26.0-05:00</published><updated>2010-05-21T05:34:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Super Spiral Turbo, 2002 Ford F450 Super Duty Explorer Sport Trac</title><content type="html">Pingback from  Super Spiral Turbo, 2002 Ford F450 Super Duty Explorer Sport Trac</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>78930</id><published>2010-05-21T15:36:58.0-05:00</published><updated>2010-05-21T15:36:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevrolet P30 Van Craigslist, P30 Headlight Rampage Taillights</title><content type="html">Pingback from  Chevrolet P30 Van Craigslist, P30 Headlight Rampage Taillights</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>79626</id><published>2010-05-21T22:45:00.0-05:00</published><updated>2010-05-21T22:45:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ornl K2500 Suburban Sale Parts Exhaust Manifold, K25 K1500 Pickup Factory Yukon Denali Xl</title><content type="html">Pingback from  Ornl K2500 Suburban Sale Parts Exhaust Manifold, K25 K1500 Pickup Factory Yukon Denali Xl</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>79755</id><published>2010-05-21T23:53:47.0-05:00</published><updated>2010-05-21T23:53:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">325es Mp3 Players, 325es Coupons Following</title><content type="html">Pingback from  325es Mp3 Players, 325es Coupons Following</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>80061</id><published>2010-05-22T04:10:37.0-05:00</published><updated>2010-05-22T04:10:37.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Mercedes Benz 380sec Aftermarket S55 Slk55 Amg, 380sec Headlight Sae Bulbs</title><content type="html">Pingback from  Mercedes Benz 380sec Aftermarket S55 Slk55 Amg, 380sec Headlight Sae Bulbs</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>80798</id><published>2010-05-22T10:35:17.0-05:00</published><updated>2010-05-22T10:35:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">K15 K1500 Pickup Bulb Car Parts Yukon Denali Xl Truck, Promo Satelis K15</title><content type="html">Pingback from  K15 K1500 Pickup Bulb Car Parts Yukon Denali Xl Truck, Promo Satelis K15</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>81338</id><published>2010-05-22T15:15:34.0-05:00</published><updated>2010-05-22T15:15:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 Headlight Nissan Altima, D21 Used Mass Air Flow Sensor Altima 1997 Nissan Maxima</title><content type="html">Pingback from  1995 Headlight Nissan Altima, D21 Used Mass Air Flow Sensor Altima 1997 Nissan Maxima</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>81583</id><published>2010-05-22T17:19:07.0-05:00</published><updated>2010-05-22T17:19:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2001 Toyota Celica Gt Convertible, 1981 Toyota Celica Convertible</title><content type="html">Pingback from  2001 Toyota Celica Gt Convertible, 1981 Toyota Celica Convertible</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82394</id><published>2010-05-23T00:00:49.0-05:00</published><updated>2010-05-23T00:00:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Performance Rx7, Rx7 Led - 111.codebluehacks.org</title><content type="html">Pingback from  Performance Rx7, Rx7 Led - 111.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82499</id><published>2010-05-23T00:55:34.0-05:00</published><updated>2010-05-23T00:55:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1977 Oldsmobile Omega Used Parts, Oldsmobile Omega Used 442 - 298.animejin.com</title><content type="html">Pingback from  1977 Oldsmobile Omega Used Parts, Oldsmobile Omega Used 442 - 298.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82566</id><published>2010-05-23T01:25:12.0-05:00</published><updated>2010-05-23T01:25:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1992 Portland Trailblazers Brandon Roy, Chevy Trailblazer Dimensions - 57.ja3ra.com</title><content type="html">Pingback from  1992 Portland Trailblazers Brandon Roy, Chevy Trailblazer Dimensions - 57.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82638</id><published>2010-05-23T01:58:14.0-05:00</published><updated>2010-05-23T01:58:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1974 Dodge Monaco The Blues Brothers, Monaco Rv Monarch - 116.tgrconversions.com</title><content type="html">Pingback from  1974 Dodge Monaco The Blues Brothers, Monaco Rv Monarch - 116.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82652</id><published>2010-05-23T02:04:29.0-05:00</published><updated>2010-05-23T02:04:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Community Joel Mchale Trailer, Vw Bay Travel Trailer For Sale - 167.renters.ws</title><content type="html">Pingback from  Community Joel Mchale Trailer, Vw Bay Travel Trailer For Sale - 167.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82656</id><published>2010-05-23T02:05:51.0-05:00</published><updated>2010-05-23T02:05:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Stx 250c Metal Blade Planetary Gear, 1971 Mercedes Benz 250c Coupe - 135.cmanager.org</title><content type="html">Pingback from  Stx 250c Metal Blade Planetary Gear, 1971 Mercedes Benz 250c Coupe - 135.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82796</id><published>2010-05-23T03:09:31.0-05:00</published><updated>2010-05-23T03:09:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2007 Monaco Diplomat, 1999 Monaco Diplomat - 225.1fh.org</title><content type="html">Pingback from  2007 Monaco Diplomat, 1999 Monaco Diplomat - 225.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82832</id><published>2010-05-23T03:27:17.0-05:00</published><updated>2010-05-23T03:27:17.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">260e Clearance New Mercedes Benz G55 Amg, 260e Radiator Fan Clutch Distributor Rotor - 379.akemet.com</title><content type="html">Pingback from  260e Clearance New Mercedes Benz G55 Amg, 260e Radiator Fan Clutch Distributor Rotor - 379.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82836</id><published>2010-05-23T03:29:25.0-05:00</published><updated>2010-05-23T03:29:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">600sec Coolant Old English Sheepdog, 600sec Specs - 430.an74.com</title><content type="html">Pingback from  600sec Coolant Old English Sheepdog, 600sec Specs - 430.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82965</id><published>2010-05-23T04:33:35.0-05:00</published><updated>2010-05-23T04:33:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">G20 Discount Infiniti Fx45 Fx35, Fx45 Alternative Information - 102.defutbolazo.com</title><content type="html">Pingback from  G20 Discount Infiniti Fx45 Fx35, Fx45 Alternative Information - 102.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>82971</id><published>2010-05-23T04:36:20.0-05:00</published><updated>2010-05-23T04:36:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Verona Part Replacement Windshield Washer Nozzle, Verona Oem Material - 43.dlmreza.net</title><content type="html">Pingback from  Verona Part Replacement Windshield Washer Nozzle, Verona Oem Material - 43.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83184</id><published>2010-05-23T06:14:35.0-05:00</published><updated>2010-05-23T06:14:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Pb350 Cupon Comparison, C3500 Buy Chevrolet G3500 - 148.renters.ws</title><content type="html">Pingback from  Pb350 Cupon Comparison, C3500 Buy Chevrolet G3500 - 148.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83278</id><published>2010-05-23T06:55:48.0-05:00</published><updated>2010-05-23T06:55:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gs430 Original, Gs430 Part Extensive Oem - 258.myipgirl.com</title><content type="html">Pingback from  Gs430 Original, Gs430 Part Extensive Oem - 258.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83288</id><published>2010-05-23T07:00:20.0-05:00</published><updated>2010-05-23T07:00:20.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Imperial Aftermarket Chrysler Aspen Tc Maserati, Imperial Residential Mailboxes - 16.renters.ws</title><content type="html">Pingback from  Imperial Aftermarket Chrysler Aspen Tc Maserati, Imperial Residential Mailboxes - 16.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83379</id><published>2010-05-23T07:39:35.0-05:00</published><updated>2010-05-23T07:39:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gl450 Body Kit Rear Bumper, Tire Size Mercedes Gl450 - 442.akemet.com</title><content type="html">Pingback from  Gl450 Body Kit Rear Bumper, Tire Size Mercedes Gl450 - 442.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83648</id><published>2010-05-24T04:27:08.0-05:00</published><updated>2010-05-24T04:27:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Cadillac Dts Luxury Cars, Dts 1 Review - 397.luna-atra.net</title><content type="html">Pingback from  Used Cadillac Dts Luxury Cars, Dts 1 Review - 397.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83677</id><published>2010-05-24T04:42:23.0-05:00</published><updated>2010-05-24T04:42:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Windsor Episode Commercial Vacuums, 1963 Chrysler Windsor - 20.jordanbrandallamerican.com</title><content type="html">Pingback from  Windsor Episode Commercial Vacuums, 1963 Chrysler Windsor - 20.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83817</id><published>2010-05-24T05:47:01.0-05:00</published><updated>2010-05-24T05:47:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Ford F250 Super Duty 4x4 Crew Cab F 350, Pickup Bed 2007 Ford F250 Crew Cab - 346.mfbattle.com</title><content type="html">Pingback from  Used Ford F250 Super Duty 4x4 Crew Cab F 350, Pickup Bed 2007 Ford F250 Crew Cab - 346.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83878</id><published>2010-05-24T06:16:51.0-05:00</published><updated>2010-05-24T06:16:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Contour Bulbapedia Tail Light, Contour Find - 338.cmanager.org</title><content type="html">Pingback from  Contour Bulbapedia Tail Light, Contour Find - 338.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83915</id><published>2010-05-24T06:32:56.0-05:00</published><updated>2010-05-24T06:32:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Tracker Sell 4 Wheel, Myspace Airfare Tracker - 6.animejin.com</title><content type="html">Pingback from  Tracker Sell 4 Wheel, Myspace Airfare Tracker - 6.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83931</id><published>2010-05-24T06:39:41.0-05:00</published><updated>2010-05-24T06:39:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Jeep Pictures Willys Mb, Willys Hid Cm - 233.an74.com</title><content type="html">Pingback from  Jeep Pictures Willys Mb, Willys Hid Cm - 233.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>83988</id><published>2010-05-24T07:05:06.0-05:00</published><updated>2010-05-24T07:05:06.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Toyota Highlander 2009 Edmunds, Highlander One Film Connor Macleod - 259.jeepsunlimted.com</title><content type="html">Pingback from  Toyota Highlander 2009 Edmunds, Highlander One Film Connor Macleod - 259.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84134</id><published>2010-05-24T08:13:47.0-05:00</published><updated>2010-05-24T08:13:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Vanagon Factory Including Diesel Vw Parts, 1977 Volkswagen Vanagon - 37.akemet.com</title><content type="html">Pingback from  Vanagon Factory Including Diesel Vw Parts, 1977 Volkswagen Vanagon - 37.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84158</id><published>2010-05-24T08:24:45.0-05:00</published><updated>2010-05-24T08:24:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy Metronome Korg Ma 30, Chevrolet Metro Replacement Assembly - 284.1fh.org</title><content type="html">Pingback from  Buy Metronome Korg Ma 30, Chevrolet Metro Replacement Assembly - 284.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84202</id><published>2010-05-24T08:46:16.0-05:00</published><updated>2010-05-24T08:46:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevrolet Cobalt Aftermarket Coilovers, Chevrolet Cobalt Manual - 263.an74.com</title><content type="html">Pingback from  Chevrolet Cobalt Aftermarket Coilovers, Chevrolet Cobalt Manual - 263.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84226</id><published>2010-05-24T08:56:41.0-05:00</published><updated>2010-05-24T08:56:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E250 Auction Phones, E250 Full Replacement - 307.rkwrh.com</title><content type="html">Pingback from  E250 Auction Phones, E250 Full Replacement - 307.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84227</id><published>2010-05-24T08:57:52.0-05:00</published><updated>2010-05-24T08:57:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">323i Replacement Window Regulator Fit, 323is Dealers 2000 Bmw - 224.ja3ra.com</title><content type="html">Pingback from  323i Replacement Window Regulator Fit, 323is Dealers 2000 Bmw - 224.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84254</id><published>2010-05-24T09:09:38.0-05:00</published><updated>2010-05-24T09:09:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Isuzu Trooper Springs, Aftermarket 2001 Isuzu Trooper Parts Discount - 165.mfbattle.com</title><content type="html">Pingback from  Isuzu Trooper Springs, Aftermarket 2001 Isuzu Trooper Parts Discount - 165.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84272</id><published>2010-05-24T09:18:47.0-05:00</published><updated>2010-05-24T09:18:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cj5a Sell Cj6 Jeep Tuxedo Park, 1990 Toyota Camry Headlight Bulb Parking - 245.binggreen.com</title><content type="html">Pingback from  Cj5a Sell Cj6 Jeep Tuxedo Park, 1990 Toyota Camry Headlight Bulb Parking - 245.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84419</id><published>2010-05-24T10:25:38.0-05:00</published><updated>2010-05-24T10:25:38.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Puppies 400 Less, Find Lexus Ls400 Interior - 191.1fh.org</title><content type="html">Pingback from  Puppies 400 Less, Find Lexus Ls400 Interior - 191.1fh.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84487</id><published>2010-05-24T10:56:34.0-05:00</published><updated>2010-05-24T10:56:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2007 Subaru Baja Turbo, Baja Motorsports Quality - 167.ja3ra.com</title><content type="html">Pingback from  2007 Subaru Baja Turbo, Baja Motorsports Quality - 167.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84495</id><published>2010-05-24T11:00:56.0-05:00</published><updated>2010-05-24T11:00:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">04 Toyota Corolla Accessories, Side Mirror Toyota Corolla 2006 4cyl L - 362.luna-atra.net</title><content type="html">Pingback from  04 Toyota Corolla Accessories, Side Mirror Toyota Corolla 2006 4cyl L - 362.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84594</id><published>2010-05-24T11:46:52.0-05:00</published><updated>2010-05-24T11:46:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gmc Pb25 Series 2009, Discount Pb25 Time L6 - 236.mfbattle.com</title><content type="html">Pingback from  Gmc Pb25 Series 2009, Discount Pb25 Time L6 - 236.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84648</id><published>2010-05-24T12:16:44.0-05:00</published><updated>2010-05-24T12:16:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2003 Ford Ranger Edge Floor Mats, Parts Ford Ranger Fender Flares Vehicle Abs Plastic - 5.tijuanareader.com</title><content type="html">Pingback from  2003 Ford Ranger Edge Floor Mats, Parts Ford Ranger Fender Flares Vehicle Abs Plastic - 5.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84712</id><published>2010-05-24T12:48:28.0-05:00</published><updated>2010-05-24T12:48:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dynasty Boats Sale, 1990 Dodge Dynasty Parts Headlight Assembly - 455.tvshowzone.com</title><content type="html">Pingback from  Dynasty Boats Sale, 1990 Dodge Dynasty Parts Headlight Assembly - 455.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84837</id><published>2010-05-24T13:50:58.0-05:00</published><updated>2010-05-24T13:50:58.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">W760 Sale Stereo Speakers, Lighting Bmw 760li - 477.jeepsunlimted.com</title><content type="html">Pingback from  W760 Sale Stereo Speakers, Lighting Bmw 760li - 477.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>84960</id><published>2010-05-24T14:46:55.0-05:00</published><updated>2010-05-24T14:46:55.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Vehix Audi Cabriolet, Karmann Ghia Roadster Cabriolet - 485.mfbattle.com</title><content type="html">Pingback from  Vehix Audi Cabriolet, Karmann Ghia Roadster Cabriolet - 485.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85013</id><published>2010-05-24T15:13:33.0-05:00</published><updated>2010-05-24T15:13:33.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">745i Radiator Bmw Forum, Bmw 745i Bumper Assembly - 333.jordanbrandallamerican.com</title><content type="html">Pingback from  745i Radiator Bmw Forum, Bmw 745i Bumper Assembly - 333.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85403</id><published>2010-05-24T18:46:50.0-05:00</published><updated>2010-05-24T18:46:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Gl450 Free Shipping Ml63 Amg, Gl450 Buy Suvs Large - 10.akemet.com</title><content type="html">Pingback from  Gl450 Free Shipping Ml63 Amg, Gl450 Buy Suvs Large - 10.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85476</id><published>2010-05-24T19:26:44.0-05:00</published><updated>2010-05-24T19:26:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Nissan Relay 2 Part, Saturn Relay Minivan Toyota Sienna - 221.defutbolazo.com</title><content type="html">Pingback from  Nissan Relay 2 Part, Saturn Relay Minivan Toyota Sienna - 221.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85501</id><published>2010-05-24T19:40:45.0-05:00</published><updated>2010-05-24T19:40:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Mini Radiator, Ram Replacement Apple Mac Mini - 461.codebluehacks.org</title><content type="html">Pingback from  Mini Radiator, Ram Replacement Apple Mac Mini - 461.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85586</id><published>2010-05-24T22:56:15.0-05:00</published><updated>2010-05-24T22:56:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Ford Mustang Georgia Explorer Sport Trac, Deals 1994 Geo Prizm Car Radiators - 453.tijuanareader.com</title><content type="html">Pingback from  Used Ford Mustang Georgia Explorer Sport Trac, Deals 1994 Geo Prizm Car Radiators - 453.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85605</id><published>2010-05-24T23:04:45.0-05:00</published><updated>2010-05-24T23:04:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E 250 F550 Promo, F550 Headlight - 209.rkwrh.com</title><content type="html">Pingback from  E 250 F550 Promo, F550 Headlight - 209.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85695</id><published>2010-05-24T23:45:32.0-05:00</published><updated>2010-05-24T23:45:32.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">L6 Headlight Discount Bulb Bmw 318is, 318is Car Service - 84.luna-atra.net</title><content type="html">Pingback from  L6 Headlight Discount Bulb Bmw 318is, 318is Car Service - 84.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>85894</id><published>2010-05-25T01:19:29.0-05:00</published><updated>2010-05-25T01:19:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Caprice Rims, Capri Generic - 395.computeronlinebingo.com</title><content type="html">Pingback from  Caprice Rims, Capri Generic - 395.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86133</id><published>2010-05-25T03:18:14.0-05:00</published><updated>2010-05-25T03:18:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Starfire Wholesale Golf Course Mcdowell Mountains, Starfire Auto 1962 Oldsmobile Classified - 480.tgrconversions.com</title><content type="html">Pingback from  Starfire Wholesale Golf Course Mcdowell Mountains, Starfire Auto 1962 Oldsmobile Classified - 480.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86144</id><published>2010-05-25T03:23:23.0-05:00</published><updated>2010-05-25T03:23:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Replacement 1986 Pontiac Bonneville, Buy J2000 Sunbird Pontiac Bonneville Oldsmobile Cutlass Ciera - 429.tijuanareader.com</title><content type="html">Pingback from  Replacement 1986 Pontiac Bonneville, Buy J2000 Sunbird Pontiac Bonneville Oldsmobile Cutlass Ciera - 429.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86241</id><published>2010-05-25T04:13:39.0-05:00</published><updated>2010-05-25T04:13:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">W150 Wholesale Oxygen Sensor Grand Caravan, W150 Megapixel Memory Stick Duo Super Steadyshot - 99.jeepsunlimted.com</title><content type="html">Pingback from  W150 Wholesale Oxygen Sensor Grand Caravan, W150 Megapixel Memory Stick Duo Super Steadyshot - 99.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86467</id><published>2010-05-25T10:59:52.0-05:00</published><updated>2010-05-25T10:59:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">144 Girl Page, 1440 Brother Hl Toner Cartridges - 30.luna-atra.net</title><content type="html">Pingback from  144 Girl Page, 1440 Brother Hl Toner Cartridges - 30.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86493</id><published>2010-05-25T11:13:24.0-05:00</published><updated>2010-05-25T11:13:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1982 98 Second Hand Parts Oldsmobile Achieva, 8 Used Auto Oldsmobile Achieva - 145.animejin.com</title><content type="html">Pingback from  1982 98 Second Hand Parts Oldsmobile Achieva, 8 Used Auto Oldsmobile Achieva - 145.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86606</id><published>2010-05-25T12:06:25.0-05:00</published><updated>2010-05-25T12:06:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Tercel Performance Body Kits, 1992 Toyota Tercel Headlight - 184.tijuanareader.com</title><content type="html">Pingback from  Tercel Performance Body Kits, 1992 Toyota Tercel Headlight - 184.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86638</id><published>2010-05-25T12:24:36.0-05:00</published><updated>2010-05-25T12:24:36.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">S600 Replacement European Plug Adapters Nikon Coolpix S210, Zebra Stripe S600 Real Time Clock - 499.luna-atra.net</title><content type="html">Pingback from  S600 Replacement European Plug Adapters Nikon Coolpix S210, Zebra Stripe S600 Real Time Clock - 499.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>86937</id><published>2010-05-25T14:50:25.0-05:00</published><updated>2010-05-25T14:50:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Grand Marquis For Sale In Illinois Mercury Milan Classified Listings, Farmacie Milano Corso Buenos Aires - 169.rkwrh.com</title><content type="html">Pingback from  Grand Marquis For Sale In Illinois Mercury Milan Classified Listings, Farmacie Milano Corso Buenos Aires - 169.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>87005</id><published>2010-05-25T15:23:46.0-05:00</published><updated>2010-05-25T15:23:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">K3500 Easy, Tube Gmc K3500 - 299.tgrconversions.com</title><content type="html">Pingback from  K3500 Easy, Tube Gmc K3500 - 299.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>87060</id><published>2010-05-25T15:53:53.0-05:00</published><updated>2010-05-25T15:53:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford Excursion Oem, Ball Joint Repair Ford Excursion - 250.mfbattle.com</title><content type="html">Pingback from  Ford Excursion Oem, Ball Joint Repair Ford Excursion - 250.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>87089</id><published>2010-05-25T16:11:32.0-05:00</published><updated>2010-05-25T16:11:32.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Amazon Torino Dates Discounted, Part 1973 Used Ford Gran Torino Classifieds - 424.computeronlinebingo.com</title><content type="html">Pingback from  Amazon Torino Dates Discounted, Part 1973 Used Ford Gran Torino Classifieds - 424.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>87133</id><published>2010-05-25T16:34:39.0-05:00</published><updated>2010-05-25T16:34:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2007 Ford F 450 Pictures Super Duty Trucks, Gl450 Used Just Gl 450 Cdi - 393.renters.ws</title><content type="html">Pingback from  2007 Ford F 450 Pictures Super Duty Trucks, Gl450 Used Just Gl 450 Cdi - 393.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>87768</id><published>2010-05-27T03:21:04.0-05:00</published><updated>2010-05-27T03:21:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1987 - 1994 @ Many Types Beetles There, Sell 2008 Volkswagen Beetle - 17.renters.ws</title><content type="html">Pingback from  1987 - 1994 @ Many Types Beetles There, Sell 2008 Volkswagen Beetle - 17.renters.ws</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>87991</id><published>2010-05-27T05:30:57.0-05:00</published><updated>2010-05-27T05:30:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 1980 @ Discount Gucci Shoes 242 Nike Air Max, Hp Laserjet 2420 Noise - 62.computeronlinebingo.com</title><content type="html">Pingback from  1989 - 1980 @ Discount Gucci Shoes 242 Nike Air Max, Hp Laserjet 2420 Noise - 62.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88061</id><published>2010-05-27T06:26:13.0-05:00</published><updated>2010-05-27T06:26:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1993 - 1989 @ Seville Rims Alloy Wheel Escalade Ext, Seville Cathedral Third Largest Gothic - 235.akemet.com</title><content type="html">Pingback from  1993 - 1989 @ Seville Rims Alloy Wheel Escalade Ext, Seville Cathedral Third Largest Gothic - 235.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88112</id><published>2010-05-27T07:09:08.0-05:00</published><updated>2010-05-27T07:09:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Cx 9 New Mazda Cx9 Lease Kia Sorento, Mazda Cx9 Price - 207.myipgirl.com</title><content type="html">Pingback from  1989 - 2000 @ Cx 9 New Mazda Cx9 Lease Kia Sorento, Mazda Cx9 Price - 207.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88211</id><published>2010-05-27T08:11:32.0-05:00</published><updated>2010-05-27T08:11:32.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 - 1983 @ Es350 Big, A Perfect Circle Cs350 - 428.tijuanareader.com</title><content type="html">Pingback from  1995 - 1983 @ Es350 Big, A Perfect Circle Cs350 - 428.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88238</id><published>2010-05-27T08:35:48.0-05:00</published><updated>2010-05-27T08:35:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1996 @ 100 Replacement Ford F Series Pickup, K12 Pickup Bumper Kindergarten Registration - 52.cmanager.org</title><content type="html">Pingback from  2000 - 1996 @ 100 Replacement Ford F Series Pickup, K12 Pickup Bumper Kindergarten Registration - 52.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88251</id><published>2010-05-27T08:48:34.0-05:00</published><updated>2010-05-27T08:48:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1996 @ Part 1989 740 Volvo S80, Volvo S80 Luxury Sedans All Wheel Drive - 142.dlmreza.net</title><content type="html">Pingback from  2000 - 1996 @ Part 1989 740 Volvo S80, Volvo S80 Luxury Sedans All Wheel Drive - 142.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88255</id><published>2010-05-27T08:52:18.0-05:00</published><updated>2010-05-27T08:52:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Vehicross Recipe, Vehicross Price Suvs - 388.mfbattle.com</title><content type="html">Pingback from  1989 - 2000 @ Vehicross Recipe, Vehicross Price Suvs - 388.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88284</id><published>2010-05-27T09:11:25.0-05:00</published><updated>2010-05-27T09:11:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Lacrosse Tail Light Assembly, 2006 Buick Lacrosse Review Side Curtain Airbags - 444.mfbattle.com</title><content type="html">Pingback from  1989 - 2000 @ Lacrosse Tail Light Assembly, 2006 Buick Lacrosse Review Side Curtain Airbags - 444.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88297</id><published>2010-05-27T09:24:24.0-05:00</published><updated>2010-05-27T09:24:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2009 - 1980 @ Part Honda Civic Crx Del Sol, Honda Crx Wiring Diagram - 175.computeronlinebingo.com</title><content type="html">Pingback from  2009 - 1980 @ Part Honda Civic Crx Del Sol, Honda Crx Wiring Diagram - 175.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88330</id><published>2010-05-27T09:46:16.0-05:00</published><updated>2010-05-27T09:46:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Used Cars Mercury Grand Marquis Automotive Ford Crown Victoria, 2001 Mercury Villager Accessories Headlight Covers - 417.animejin.com</title><content type="html">Pingback from  1989 - 2000 @ Used Cars Mercury Grand Marquis Automotive Ford Crown Victoria, 2001 Mercury Villager Accessories Headlight Covers - 417.animejin.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88376</id><published>2010-05-30T17:27:48.0-05:00</published><updated>2010-05-30T17:27:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2008 @ Aurora Sale Chicago Oldsmobile Bravada, 1999 Oldsmobile Aurora Good Car - 52.zapstreaming.com</title><content type="html">Pingback from  1989 - 2008 @ Aurora Sale Chicago Oldsmobile Bravada, 1999 Oldsmobile Aurora Good Car - 52.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88382</id><published>2010-05-30T17:31:28.0-05:00</published><updated>2010-05-30T17:31:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1986 - 1982 @ Lexus Rx300 Parts Sale Cup Holder, Rx300 New - 344.tvshowzone.com</title><content type="html">Pingback from  1986 - 1982 @ Lexus Rx300 Parts Sale Cup Holder, Rx300 New - 344.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>88583</id><published>2010-05-30T20:20:44.0-05:00</published><updated>2010-05-30T20:20:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2001 - 2004 @ 850ci Store, 850ci Body - 307.tijuanareader.com</title><content type="html">Pingback from  2001 - 2004 @ 850ci Store, 850ci Body - 307.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>89101</id><published>2010-05-31T13:08:24.0-05:00</published><updated>2010-05-31T13:08:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1993 @ Ls400 Replacement Antenna Gs300 Lexus Gs400, Ls430 Gs400 Replacement Lexus Sc400 Parts - 252.cmanager.org</title><content type="html">Pingback from  2000 - 1993 @ Ls400 Replacement Antenna Gs300 Lexus Gs400, Ls430 Gs400 Replacement Lexus Sc400 Parts - 252.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>89143</id><published>2010-05-31T13:32:24.0-05:00</published><updated>2010-05-31T13:32:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2002 - 1980 @ Volkswagen Dasher After Installation, Dasher Hard - 381.an74.com</title><content type="html">Pingback from  2002 - 1980 @ Volkswagen Dasher After Installation, Dasher Hard - 381.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>89206</id><published>2010-05-31T14:12:00.0-05:00</published><updated>2010-05-31T14:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1980 - 2007 @ C2500 Discount S15 Jimmy Wiper Blades Spark Plug Wires, C25 C2500 Pickup Review Car Accessories Gmc - 475.ja3ra.com</title><content type="html">Pingback from  1980 - 2007 @ C2500 Discount S15 Jimmy Wiper Blades Spark Plug Wires, C25 C2500 Pickup Review Car Accessories Gmc - 475.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>92873</id><published>2010-08-04T09:45:48.0-05:00</published><updated>2010-08-04T09:45:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lexus LS400 Interior Full Edition Pictures | Lexus Pictures</title><content type="html">Pingback from  Lexus LS400 Interior Full Edition Pictures | Lexus Pictures</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>101820</id><published>2011-08-08T07:05:26.0-05:00</published><updated>2011-08-08T07:05:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">F250 ado | Mountbattenwin</title><content type="html">Pingback from  F250 ado | Mountbattenwin</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41389"></thr:in-reply-to></entry><entry><id>41434</id><published>2006-10-30T13:09:00.0-05:00</published><updated>2006-10-30T13:09:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PowerShell and XmlDocument</title><content type="html">&lt;p&gt;PowerShell has builtin support for XML, but the System.Xml namespace offers many additional capabilites for processing XML. This article looks at using System.Xml in PowerShell. This article assumes you know some of the basics of PowerShell programming and are familiar with the System.Xml namespace in .NET.&lt;/p&gt;
&lt;p&gt;First of all the [xml] data type variable in PowerShell is an instance of an XmlDocument. Typically an [xml] variable is used by assigning a variable to it. For example:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$xmldata = "&amp;lt;order&amp;gt;&amp;lt;line price='100' qty='3'&amp;gt;hammer&amp;lt;/line&amp;gt;&amp;lt;/order&amp;gt;"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are going to look at a different way to load XML into an [xml] variable. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata = new-object "System.Xml.XmlDocument"
PS C:\demos&amp;gt; $xmldata.LoadXml("&amp;lt;order&amp;gt;&amp;lt;line price='100' qty='3'&amp;gt;hammer&amp;lt;/line&amp;gt;&amp;lt;/order&amp;gt;")
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way of initializing a variable produces the same result as assigning a string to an [xml] variable, but does not create a new instance of an XmlDocument. We don’t want to create a new instance of an XmlDocument so we can leverage XPathNavigators and XPathExpressions but that will become evident later.&lt;/p&gt;
&lt;p&gt;You can get back the XML in text form by using the get_InnerXml() method.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.get_InnerXml()
&amp;lt;order&amp;gt;&amp;lt;line price="100" qty="3"&amp;gt;hammer&amp;lt;/line&amp;gt;&amp;lt;/order&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you were programming in C# you would use the InnerXml property of the &lt;code&gt;$xmldata&lt;/code&gt; variable to retrieve the InnerXml, but you must use the underlying get_InnerXml method in PowerShell to do the same thing. This will be the case for the other properties in XmlDocument too, the properties are not available by just using their name as the are in C#.&lt;/p&gt;
&lt;p&gt;The root of an XML document is called the DocumentElement and for our document the name the root element is “order”. You can get a reference to it through the DocumentElement property and use its Name property to find its name.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.get_DocumentElement().get_Name()
order
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we used the get_DocumentElement method to get the DocumentElement and the get_Name method to get its name.&lt;/p&gt;
&lt;p&gt;You can modify an XmlDocument by adding or removing XML nodes. A node is part of XML, for example an element is a node as is an attribute. Let’s add another line to our order.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $line = $xmldata.CreateElement("line")
PS C:\demos&amp;gt; $line.SetAttribute("price", 23)
PS C:\demos&amp;gt; $line.SetAttribute("qty", 4)
PS C:\demos&amp;gt; $line.set_InnerText("nail")
PS C:\demos&amp;gt; $d =$xmldata.get_DocumentElement().AppendChild($line)
PS C:\demos&amp;gt; $xmldata.get_InnerXml()
&amp;lt;order&amp;gt;&amp;lt;line price="100" qty="3"&amp;gt;hammer&amp;lt;/line&amp;gt;&amp;lt;line price="23" qty="4"&amp;gt;nail&amp;lt;/line&amp;gt;&amp;lt;/order&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Elements for an XmlDocument are not created using a constructor. Instead a technique called a factory method is used to create them. This is typical of almost all XML processors on any platform. An XmlDocument contains factory methods to create the various kinds of nodes you find in an XmlDocument. To create a new line element we use the XmlDocument.CreateElement factory method.&lt;/p&gt;
&lt;p&gt;An XmlElement has a SetAttibute that is used to add attibutes to that element. We use the SetAttribute to add a “price” and “qty” attibute to the line element we created. SetAttribute is really a &lt;i&gt;shortcut&lt;/i&gt; method. We could use &lt;code&gt;CreateAttribute&lt;/code&gt; and &lt;code&gt;SetAttributeNode&lt;/code&gt; instead, but SetAttribute is more straightforward.&lt;/p&gt;
&lt;p&gt;The content of the new line element is set using the set_InnerText method. Again, if you were programming in C# you would assigning the InnerText property a value, but for an XmlDocument you must use the set_InnerText method. This will be true for the other assignable properties in XmlDocument too.&lt;/p&gt;
&lt;p&gt;Creating a element using a factory method does not add that element to the document. We use the AppendChild method of the DocumentElement of the document to add the line. Append child always makes the added element the last child. PrependElement will also add an element but will make it the first child element. AppendChild always returns a reference to the element that was appended. To prevent that returned value from “leaking” out of the script we capture it in the dummy &lt;code&gt;$d&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;Last we use the get_InnerXml method of the XmlDocument see that we have in fact added a new line element to the document.&lt;/p&gt;
&lt;p&gt;Now that we have a document let’s do some processing of it. Each line has a &lt;code&gt;price&lt;/code&gt; and &lt;code&gt;qty&lt;/code&gt; attribute and the product of these two attributes is called the extended price. The value of an order is the sum of all of the extended prices in it. So let’s calculate the value of an order. In this example we are going to use the native [xml] support built into PowerShell. &lt;/p&gt;
&lt;p&gt;To start with let’s just calculate the extended prices.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.order.line | %{$_.price * $_.qty}
100100100
23232323
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Somehow the results don’t really look correct. Data in an XML document my be untyped or strongly typed. Untyped doesn’t really mean the data doesn’t have a type, it just means that each piece of data is considered to be a string even if it looks like a number. Strongly typed XML is produced by validating an XML document against an XML Schema. In this case the types of the pieces of data are known because they are defined in the XML Schema. Sometimes a validated XML document is called the Post Schema Validation Instance or PSVI.&lt;/p&gt;
&lt;p&gt;Our &lt;code&gt;$xmldata&lt;/code&gt; XML document is untyped so the price and quantity are considered to be strings. When the ‘*’ operator is used with strings the string on its right is converted to an integer, or produces an error if it cannot be converted. The value of this integer is used to replicate and concatonate the string on the left of the operator. That is why we see &lt;code&gt;100&lt;/code&gt; repeated three times, the value of &lt;code&gt;qty&lt;/code&gt; for the first line is “3”.&lt;/p&gt;
&lt;p&gt;We have to cast the price to a double to get what we want.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.order.line | %{[double]$_.price * $_.qty}
300
92
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can use the sum function example from my previous blog article, &lt;i&gt;PowerShell and XML and SQL Server&lt;/i&gt;, to find the value of the order.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; function sumOrder {
&amp;gt;&amp;gt; begin {$value = 0}
&amp;gt;&amp;gt; process { $value += [double]$_.price * $_.qty}
&amp;gt;&amp;gt; end {$value}
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
PS C:\demos&amp;gt; $xmldata.order.line | sumOrder
392
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can use the SelectNodes method of XmlDocument to get the same result. It makes use of an XPath expression which is a bit more flexible, though more complicated, than the dotted syntax that PowerShell provides for [xml] variables.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.SelectNodes("//line") | sumOrder
392
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The SelectNodes method returns a set of XML nodes from a document that meet some criterion specified by the XPath expression. This particular XPath expression returns all the line elements in the document. When a set of XML nodes is put into a pipeline PowerShell passes each one of the nodes one at a time into the pipe.&lt;/p&gt;
&lt;p&gt;One of the nice things about using XPath is that you can bury a lot of selection logic right into the XPath expression. What if we want to know the value of only the &lt;i&gt;expensive&lt;/i&gt; items in our order? Our definition of expensive is when the price is more than 99.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.SelectNodes("//line[@price&amp;gt;99]") | sumOrder
300
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here our XPath expression has a predicate, “[@price&amp;gt;99]”, that filters out any lines whose value is 99 or less. The following is the equivalent using the XML capabilities built into PowerShell.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $xmldata.order.line | ?{[double]$_.price -gt 99} | sumOrder
300
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that in this case it was important to cast the price as a [double] otherwise PowerShell would have taken the filter to check to see if the price lexically sorted after the string “99”.&lt;/p&gt;
&lt;p&gt;An important thing about XPath is its universality. The XPath expression we have used in this example, technically called LocationPath, is a criterion for selection. Virtually every language and every platform supports XPath. You can pass the XPath expression we used in this example, “line[@price&amp;gt;99}”, to almost any other program and it will select the same lines for processing as we did in this example. &lt;/p&gt;
&lt;p&gt;You have to be careful reading XML. For example below is an XML file that is encoded as big endian UTF-16. You can’t see the actual encoding on this page but you can download this test file from &lt;a href="http://www.pluralsight.com/dan/samples/PSXml.zip"&gt;http://www.pluralsight.com/dan/samples/PSXml.zip&lt;/a&gt; if you want to try it out.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-16BE"?&amp;gt;
&amp;lt;Test/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The get-content command is a way to read the content of a file. For example you might try to read the sample file into a builtin [xml] datatype in PowerShell like this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$x = get-content "c:\demos\testdocs\test.xml"
Cannot convert value "System.Object[]" to type "System.Xml.XmlDocument". Error:
 "Root element is missing."
At line:1 char:8
+ [xml]$x  &amp;lt;&amp;lt;&amp;lt;&amp;lt; = get-content "c:\demos\testdocs\test.xml"
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What PowerShell is doing here is reading in test.xml as string, then assigning that string to then &lt;code&gt;$x&lt;/code&gt; variable. Unfortunately when it does this it has to make a guess about the encoding of the file because I didn’t tell it what it was and it guessed wrong. In fact if I just ask it to read the file and tell it I just don’t know the encoding it will generate a lot of unknown characters because of an incorrect guess about the encoding of the file.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; get-content "c:\demos\testdocs\test.xml" -encoding Unknown
??????????????????????????????????????????????????????
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However I happen to know the encoding for the file, as I said it big endian UTF-16, so I can do this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$x = get-content "c:\demos\testdocs\test.xml" -encoding BigEndianUnicode
PS C:\demos&amp;gt; $x.get_InnerXml()
&amp;lt;?xml version="1.0" encoding="UTF-16BE"?&amp;gt;&amp;lt;Test /&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are able to read our big endian UTF-16 file. But this defeats one of the most important features of XML; You can read an XML file without knowing the encoding.&lt;/p&gt;
&lt;p&gt;Fortunately because PowerShell supports all of the .NET framework we can get around this problem and read any XML file that the underlying .NET Framework can handle without knowing its encoding.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $doc = new-object "System.Xml.XmlDocument"
PS C:\demos&amp;gt; $doc.Load($filePath)
PS C:\demos&amp;gt; $doc.get_InnerXml()
&amp;lt;?xml version="1.0" encoding="UTF-16BE"?&amp;gt;&amp;lt;Test /&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we initialize &lt;code&gt;$doc&lt;/code&gt; as an XmlDocument then use the Load function an XmlDocument to load in the file. The argument for Load is a string that can be either a file path or a URL. This is the recommended way to load an XML document into a variable because you shouldn’t depend on knowing what encoding of an XML document is.&lt;/p&gt;
&lt;p&gt;Now that we can read XML lets process some XML files. Microsoft Word 2003 can be saved as XML. We have a few files that have been saved this way.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; dir c:\demos\testdocs\*.xml
    Directory: Microsoft.PowerShell.Core\FileSystem::C:\demos\testdocs
Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---        10/30/2006  10:29 AM        108 betest.xml
-a---        10/30/2006   9:29 AM      24982 Test Document 1.xml
-a---        10/30/2006   9:33 AM      29195 Test Document 2.xml
-a---        10/30/2006   9:30 AM      25105 Test Document 3.xml
-a---        10/30/2006  10:05 AM        108 test.xml
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Actually some of the files in this directory are not Office documents, so we need a way to distinguish them. All Office XML files have on thing in common, they start with something called a processing instruction that looks like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?mso-application progid="Word.Document"?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s build a filter that will skip over the files that are not Word documents.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; dir c:\demos\testdocs\*.xml | ?{$x = new-object "System.Xml.XmlDocument";
&amp;gt;&amp;gt; $x.Load($_.FullName);
&amp;gt;&amp;gt; $x.SelectSingleNode("processing-instruction('mso-application')")}
&amp;gt;&amp;gt;
    Directory: Microsoft.PowerShell.Core\FileSystem::C:\demos\testdocs
Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---        10/30/2006   4:29 PM      32448 Test Document 1.xml
-a---        10/30/2006   4:11 PM      29935 Test Document 2.xml
-a---        10/30/2006   9:30 AM      25105 Test Document 3.xml
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we use the full path name for each file to load an XmlDocument. Then we use the SelectSingleNode method of XmlDocument to see if we can find the processing instruction we are looking for. If the processing function isn’t found then the file name is not passed out of the pipe so it does not get listed.&lt;/p&gt;
&lt;p&gt;The XPath expression we used was bit more complicated than the first one we tried. If you are interested in an interactive tool for working with XPath you can download Aaron Skonnard’s XPath expression builder from &lt;a href="http://www.pluralsight.com/toolcontent/xpath-expression-builder-4.zip"&gt;http://www.pluralsight.com/toolcontent/xpath-expression-builder-4.zip&lt;/a&gt;. Also these test documents can be found at &lt;a href="http://www.pluralsight.com/dan/samples/PSXml.zip"&gt;http://www.pluralsight.com/dan/samples/PSXml.zip&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Lastly we would like to show that these Word documents have been processed by PowerShell. After you open a document in Word if you go to File-&amp;gt;Properties-&amp;gt;Custom you will see that you can add custom properties of you own design to a word document. We would like to add a PowerShell custom property that indicates when the document was processed by PowerShell. These properties are embeded into the XML for the Word document.&lt;/p&gt;
&lt;p&gt;Another thing about Word documents that we haven’t you looked at is that they make heavy use of XML namespaces. So before we try anything with a complete Word document let’s look at simple document that has namespaces in it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [xml]$x = '&amp;lt;w:wordDocument
&amp;gt;&amp;gt; xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml"
&amp;gt;&amp;gt; xmlns:o="urn:schemas-microsoft-com:office:office"&amp;gt;
&amp;gt;&amp;gt; &amp;lt;o:CustomDocumentProperties&amp;gt;
&amp;gt;&amp;gt; &amp;lt;/o:CustomDocumentProperties&amp;gt;
&amp;gt;&amp;gt;  &amp;lt;/w:wordDocument&amp;gt;'
&amp;gt;&amp;gt;
PS C:\demos&amp;gt; $x.get_InnerXml()
&amp;lt;w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml"
xmlns:o="urn:schemas-microsoft-com:office:office"&amp;gt;&amp;lt;o:CustomDocumentProperties&amp;gt;&amp;lt;
/o:CustomDocumentProperties&amp;gt;&amp;lt;/w:wordDocument&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This document is a mini-Word document with all the things we don’t care about stripped out of it.&lt;/p&gt;
&lt;p&gt;Custom properties for a Word document are contained in a CustomDocumentProperties element from the “urn:schemas-microsoft-com:office:office” namespace. If the Word document doesn’t have any custom properties it will not have this element. So we will need a way to check to see if that element in the document. Let’s test our mini-Word document to see verify we can find it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $custDoc = "/*/*[local-name()='CustomDocumentProperties' and namespace-uri()='urn:schemas-microsoft-com:office:office']"
icrosoft-com:office:office']
PS C:\demos&amp;gt; $x | ?{$_.SelectSingleNode($custDoc)}
wordDocument
------------
wordDocument
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have made an XPath expression and saved it into a variable so we can easily reuse it. It looks for an element whose name is CustomDocumentProperties and is in the office namespace. We can use it in a simple filter test and see that our test document can get through the filter.&lt;/p&gt;
&lt;p&gt;Next let’s look at adding the CustomDocumentProperites if it is not there. First of all we will need an element to add.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $props = $x.CreateElement("CustomDocumentProperties", $custDoc)
PS C:\demos&amp;gt; $props.get_OuterXml()
&amp;lt;CustomDocumentProperties xmlns="/*/*[local-name()='CustomDocumentProperties' and namespace-uri()='urn:schemas-microsoft-com:office:office']" /&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create an element in a particular namespace we use the second parameter of the CreateElement method to specify the desired namespace. To check to see if we got what we wanted we use the OuterXml property… there is no InnerXml for an element with no content. Let’s make a test document without a CustomDocumentProperties and try adding this element.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $x2.get_InnerXml()
&amp;lt;w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml"/&amp;gt;
PS C:\demos&amp;gt; if ($x2.SelectSingleNode($custDoc)){}else
&amp;gt;&amp;gt; {
&amp;gt;&amp;gt; $props = $x2.CreateElement("CustomDocumentProperties", "urn:schemas-microsoft-com:office:office")
&amp;gt;&amp;gt; $x2.get_DocumentElement().AppendChild($props)
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
PS C:\demos&amp;gt; $x2.get_InnerXml()
&amp;lt;w:wordDocument xmlns:w="http://schemas.microsoft.com/office/word/2003/wordml"&amp;gt;
&amp;lt;CustomerDocumentProperties xmlns="urn:schemas-microsoft-com:office:office" /&amp;gt;&amp;lt;
/w:wordDocument&amp;gt;
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we start off with a new XML document, &lt;code&gt;$x2&lt;/code&gt; that contains just a wordDocument. We use an &lt;code&gt;if&lt;/code&gt; construct to test the &lt;code&gt;$x2&lt;/code&gt; to see if it contains CustomDocumentProperties element. If if it does not we create on and add it. Then we check to make sure the element was added.&lt;/p&gt;
&lt;p&gt;This will be a useful for what we do next so let’s save it as a function.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function addCustomProps
{
$cust = $_.SelectSingleNode("/*/*[local-name()='CustomDocumentProperties' and namespace-uri()='urn:schemas-microsoft-com:office:office']")
if($cust){$cust}else{
$props = $_.CreateElement("CustomDocumentProperties", "urn:schemas-microsoft-com:office:office")
$_.get_DocumentElement().AppendChild($props)
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the addCustomProps function always returns a CustomDocumentProperties.&lt;/p&gt;
&lt;p&gt;Now we have everthing we need to modify a Word document by adding a custom property to it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $filePath = "C:\demos\testdocs\test document 1.xml"
PS C:\demos&amp;gt; $doc = new-object "System.Xml.XmlDocument"
PS C:\demos&amp;gt; $doc.Load($filePath)
PS C:\demos&amp;gt; $prop = $doc.CreateElement("PowerShell", "urn:schemas-microsoft-com
:office:office")
PS C:\demos&amp;gt; $prop.SetAttribute("dt", "uuid:C2F41010-65B3-11d1-A29F-00AA00C14882
", "string")
string
PS C:\demos&amp;gt; $prop.set_InnerText([System.DateTime]::Now)
PS C:\demos&amp;gt; $doc | %{addCustomProps} | %{$_.AppendChild($prop)}
dt                                      #text
--                                      -----
string                                  10/30/2006 16:07:57

PS C:\demos&amp;gt;
PS C:\demos&amp;gt; $doc.Save($filePath)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We start off by setting the &lt;code&gt;$filePath&lt;/code&gt; variable to the path of a Word document. Next we load that Word document into the &lt;code&gt;$doc&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;We use the &lt;code&gt;$doc&lt;/code&gt; variable to create a PowerShell element, and fill it out with the current time. We also add a &lt;code&gt;dt&lt;/code&gt; attribute to specify that this is a string property and put the PowerShell element in the “urn:schemas-microsoft.com:office:office” namespace. Both of these are required for a custom property added to a Word document.&lt;/p&gt;
&lt;p&gt;Finally we pass the &lt;code&gt;$doc&lt;/code&gt; property through a pipeline our addCustomProps function. This function always returns the CustomDocumentProperty element so we can use the next segment of the pipeline to append our PowerShell property to it.&lt;/p&gt;
&lt;p&gt;If you now open the “test document 1.xml” file in Word and navigate to its custom properties you will see that is now has a PowerShell property.&lt;/p&gt;
&lt;p&gt;So we can use the full set of features available from the System.Xml namespace in .NET. The key to really making use of the is to become familiar with XPath. We really have just scratched the surface of its capabilities.&lt;/p&gt;
&lt;p&gt;Dan&lt;/p&gt;
&lt;p&gt;&lt;a href="mailto:dan@pluralsight.com"&gt;dan@pluralsight.com&lt;/a&gt;&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>2</thr:total></entry><entry><id>47373</id><published>2007-05-14T09:17:00.0-05:00</published><updated>2007-05-14T09:17:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">great</title><content type="html">Hi. Great site.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41434"></thr:in-reply-to></entry><entry><id>49477</id><published>2007-12-18T11:13:00.0-05:00</published><updated>2007-12-18T11:13:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerShell and XmlDocument</title><content type="html">Nice article, very helpful...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41434"></thr:in-reply-to></entry><entry><id>41936</id><published>2006-11-07T11:55:00.0-05:00</published><updated>2006-11-07T11:55:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PowerSMO!</title><content type="html">&lt;p&gt;Last year I wrote a blog article about using what was then called MSH with SQL Server Management Objects &lt;a href="http://pluralsight.com/blogs/dan/archive/2005/12/29/17703.aspx"&gt;http://pluralsight.com/blogs/dan/archive/2005/12/29/17703.aspx&lt;/a&gt;. MSH is now called PowerShell and mixing some SMO with it makes PowerSMO!&lt;/p&gt;
&lt;p&gt;SMO is a set of object models for SQL Server. With PowerSMO! you can manipulate those object models from the command line or with a script. The two object models probably of most interest to SQL Server developers and DBA’s are the Server and ManagedComputer object models and that’s what this article is going to use them to show how to use PowerSMO!.&lt;/p&gt;
&lt;p&gt;This article assumes you are reasonably familiar with SQL Server and have some familiarity with PowerShell. You can look at some of the previous articles I have blogged about PowerShell to get familiar with PowerShell. &lt;/p&gt;
&lt;p&gt;There are a number of reasons for using PowerSMO! You can script the management, testing, status, &lt;i&gt;etc.&lt;/i&gt; of database objects. PowerSMO! also has pedagogical value too. I’ve been using PowerShell + SMO in the classes I teach because it provides such a quick way too cobble up &lt;i&gt;ad hoc&lt;/i&gt; examples. It’s useful in development for the same reason, you can quickly try something out before you commit the time to edit/compile/test a C# program.&lt;/p&gt;
&lt;p&gt;To use PowerSMO! you need to start up PowerShell then run the InitPowerSMO.ps1 script. This script is available at &lt;a href="http://www.pluralsight.com/dan/samples/InitPowerSMO.zip"&gt;http://www.pluralsight.com/dan/samples/InitPowerSMO.zip&lt;/a&gt;.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;Windows PowerShell
Copyright (C) 2006 Microsoft Corporation. All rights reserved.
PS C:\demos&amp;gt; . "C:\demos\InitPowerSMO.ps1"
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This script loads the SMO assemblies into PowerShell and a number of other things that we will look at later.&lt;/p&gt;
&lt;p&gt;Let’s start with some basics. The &lt;code&gt;new-object&lt;/code&gt; cmd-let is used to make an instance of a .NET class. SMO has a class named &lt;code&gt;ManagedComputer&lt;/code&gt;. An instance of &lt;code&gt;ManagedComputer&lt;/code&gt; represents the root of one of the object models in SMO, the one that is used to manage the services provided by SQL Server, such as the database engine or full-text search. BTW, watch out for the line-wraps in the examples that follow.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $mc = new-object "Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer"
PS C:\demos&amp;gt; $mc.services | %{$_.name}
MSFTESQL
MSSQLSERVER
SQLBrowser
SQLSERVERAGENT
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we used an instance of the &lt;code&gt;ManagedComputer&lt;/code&gt; class find the SQL Server services on the local computer. We piped these services to a script that prints out the name of the service. Looks like a pretty typical SQL Server installation.&lt;/p&gt;
&lt;p&gt;This is handy but, as you can see, it is a bit tedious dealing with the full name of the class that &lt;code&gt;new-object&lt;/code&gt; requires. PowerShell deals with this issue in a number of places by using what it calls a “type accelerator” or “type alias”. &lt;/p&gt;
&lt;p&gt;For example &lt;code&gt;[wmi]&lt;/code&gt; is a type accelerator for &lt;code&gt;System.Management.ManagementObject&lt;/code&gt; and you can use it instead of the fully spelled out class name when you need to specify that type. Unfortunately there is no provision in PowerShell for creating your own type aliases. PowerShell supports user defined aliases for cmdlets, functions, &lt;i&gt;etc.&lt;/i&gt; but these are not useful as type accelerators.&lt;/p&gt;
&lt;p&gt;To save on typing PowerSMO! creates helper functions that can be used to create instances of the classes used by SMO. One of the reasons you see a delay when you run the &lt;code&gt;initPowerSMO.ps1&lt;/code&gt; script is that it has to create all these functions. Below is a script that uses one of these functions and duplicates the operation of the previous example.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $mc = Get-SMO_ManagedComputer
PS C:\demos&amp;gt; $mc.Services | %{$_.name}
MSFTESQL
MSSQLSERVER
SQLBrowser
SQLSERVERAGENT
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All of these helper functions have a preface of “Get-SMO_” followed by the name of the class that they create.&lt;/p&gt;
&lt;p&gt;All that the &lt;code&gt;Get-SMO_&lt;/code&gt; helper functions and new-object are doing is running the constructor for the class requested. In the previous two samples we used the parameter-less constructor to make a &lt;code&gt;ManagedComputer&lt;/code&gt; object. When you do this the managed computer is the one PowerShell is running on.&lt;/p&gt;
&lt;p&gt;One of the nice things about PowerShell is that you can always ask what kinds of things an object can do by piping it to the &lt;code&gt;get-member&lt;/code&gt; cmdlet. For example:&lt;/p&gt;
&lt;p&gt;PS C:\demos&amp;gt; $mc | get-member&lt;/p&gt;&lt;pre&gt;&lt;code&gt;   TypeName: Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer
Name                   MemberType Definition
----                   ---------- ----------
Equals                 Method     System.Boolean Equals(Object obj)
GetHashCode            Method     System.Int32 GetHashCode()
GetSmoObject           Method     Microsoft.SqlServer.Management.Smo.Wmi.Wmi...
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PowerShell does not have the same level of builtin “What can you do for me?” capability for the constructors of .NET classes. .NET classes often have a number of constructors to choose from and it is often hard to remember them all. PowerSMO! has some helper functions to make it easier to see what constructors there are for a class. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; Get-SMO_ctors (Get-SMOT_ManagedComputer)
ManagedComputer()
ManagedComputer(String machineName)
ManagedComputer(String machineName, String userName, String password)
ManagedComputer(String machineName, String userName, String password, 
ProviderArchitecture providerArchitecture)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Get-SMO_ctors&lt;/code&gt; function lists the constructors for the type passed, in parentheses to it. For every &lt;code&gt;Get-SMO_&lt;/code&gt; function there is a &lt;code&gt;Get-SMOT_&lt;/code&gt; that returns its type definition. The &lt;code&gt;Get-SMO_ctors&lt;/code&gt; function requires a type definition, not the function that makes an instance of the type. Actually the &lt;code&gt;Get-SMO_ctors&lt;/code&gt; function will work for any .NET type definition.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; Get-SMO_ctors ([System.String])
String(Char* value)
String(Char* value, Int32 startIndex, Int32 length)
String(SByte* value)
String(SByte* value, Int32 startIndex, Int32 length)
String(SByte* value, Int32 startIndex, Int32 length, Encoding enc)
String(Char[] value, Int32 startIndex, Int32 length)
String(Char[] value)
String(Char c, Int32 count)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The example above shows using the &lt;code&gt;Get-SMO_ctors&lt;/code&gt; function to find the various constructors for System.String class from .NET.&lt;/p&gt;
&lt;p&gt;All of the &lt;code&gt;Get-SMO_&lt;/code&gt; function will accept parameters for a constructor. You pass the parameters on the command line as you would for any other PowerShell function.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $mc = Get-SMO_ManagedComputer "PARSEC5"
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In the example above &lt;code&gt;$mc&lt;/code&gt; is attached to a computer name “PARSEC5”. &lt;/p&gt;
&lt;p&gt;Some constructors you will want to use require multiple parameters. The ServerConnection class serves a purpose similar to that for a SqlConnection in ADO.NET&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; Get-SMO_ctors (Get-SMOT_ServerConnection)
ServerConnection(SqlConnectionInfo sci)
ServerConnection(SqlConnection sqlConnection)
ServerConnection()
ServerConnection(String serverInstance)
ServerConnection(String serverInstance, String userName, String password)
ServerConnection(String serverInstance, String userName, SecureString password)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here you can see that there is a constructor that lets you can create a &lt;code&gt;ServerConnection&lt;/code&gt; using a SQL login. It needs the name and password for that login.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $sc = Get-SMO_ServerConnection "PARSEC5" "ambler" "Ambler"
PS C:\demos&amp;gt; $sc.ConnectionString
server='PARSEC5';uid='ambler';password='Ambler';
multipleactiveresultset =false
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see the ServerConnection just uses the user name and password to build the connection string it will need to connect to SQL Server.&lt;/p&gt;
&lt;p&gt;A note about the &lt;code&gt;Get-SMO_&lt;/code&gt; function that is a bit different than using the &lt;code&gt;new-object&lt;/code&gt; cmdlet. The constructor parameters for the &lt;code&gt;Get-SMO_&lt;/code&gt; functions are separated by spaces, unlike passing constructor parameters to the &lt;code&gt;new-object&lt;/code&gt; cmdlet which requires them to be separted by commas.&lt;/p&gt;
&lt;p&gt;Ok, let’s use PowerSMO! to create a database. To do this we will need to make use of two classes of SMO object, a Server and a Database. We will start by looking at the constructors for each.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; Get-SMO_ctors (Get-SMOT_Server)
Server(ServerConnection serverConnection)
Server(String name)
Server()
PS C:\demos&amp;gt; Get-SMO_ctors(Get-SMOT_Database)
Database()
Database(Server server, String name)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We see that to construct a Server can pass in the name of the instance of SQL Server we want to use, and for the Database we will have to pass in a reference to the Server and a the name we want for the new database.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $s = Get-SMO_Server "PARSEC5"
PS C:\demos&amp;gt; $db = Get-SMO_Database $s "DBDemoSample"
PS C:\demos&amp;gt; $db.create()
PS C:\demos&amp;gt; $s.Databases["DBDemoSample"].Name
DBDemoSample
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have made the Server object for the default SQL Server instance on machine “PARSEC5”. Next we make the Database object by passing the variable that holds the Server object into the database constructor. Just to confirm it actually worked we look at the databases collection in the server and see if we can find a database named “DBDemoSample” and then print out its name. If there was no database named “DBDemoSample” this line would not have printed out anything.&lt;/p&gt;
&lt;p&gt;Now let’s do a little database management. Typically when a database is created its recovery model is “Full” This is going to be a development database so we want to change its recovery mode to “Simple”. We will start by confirming our suspicions about its recovery mode.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $db = $s.DataBases["DBDemoSample"]
PS C:\demos&amp;gt; $db.DatabaseOptions.RecoveryModel
Full
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use &lt;code&gt;$s&lt;/code&gt; to get a reference to the “DBDemoSample” database. From &lt;code&gt;$db&lt;/code&gt; we can look at the recovery model in database options and see that, in fact, it is “Full”.&lt;/p&gt;
&lt;p&gt;The value of &lt;code&gt;RecoverModel&lt;/code&gt; is one of the enumerated values from the Microsoft.SqlServer.Management.Smo.RecoveryModel enum. You can always find the possible values of an enum by making use of .NET reflection in PowerShell.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; [Microsoft.SqlServer.Management.Smo.RecoveryModel].GetFields() | %{
$_.Name}
value__
Simple
BulkLogged
Full
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, similar to using new-object, you must type out the entire class name to find the enumerated values of an enum. PowerSMO! provides another helper function for finding the enumerated values.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; Get-SMO_enum (Get-SMOT_RecoveryModel)
value__
Simple
BulkLogged
Full
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;Get-SMO_emum&lt;/code&gt; function finds the enumerated values of an enum. It is similar to the &lt;code&gt;Get-SMO_ctors&lt;/code&gt; function in that it requires a class definition, not the function that makes an instance. In this example we use the &lt;code&gt;Get-SMOT_RecoveryModel&lt;/code&gt; to get the class definition.&lt;/p&gt;
&lt;p&gt;Using an enumerated value once you know what it is, is fairly easy. You can just set it as though is were a string value and PowerShell will convert it to the appropriate enumeration.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $db.DatabaseOptions.RecoveryModel="Simple"
PS C:\demos&amp;gt; $db.Alter()
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setting a value in a field of a SMO object does not affect the database behind it until you call the &lt;code&gt;Alter()&lt;/code&gt; function. After the &lt;code&gt;Alter()&lt;/code&gt; function completes the database has the new recovery mode. &lt;/p&gt;
&lt;p&gt;Note you need not worry about setting an improper enumeration value, PowerShell will check that for you, as you can see below.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $db.DatabaseOptions.RecoveryModel = "Fullx"
Exception setting "RecoveryModel": "Cannot convert value "Fullx" to type "Micro
soft.SqlServer.Management.Smo.RecoveryModel" due to invalid enumeration values.
 Specify one of the following enumeration values and try again. The possible en
umeration values are "Full, BulkLogged, Simple"."
At line:1 char:21
+ $db.DatabaseOptions.R &amp;lt;&amp;lt;&amp;lt;&amp;lt; ecoveryModel = "Fullx"
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you have seen PowerSMO!. It consists of functions, prefaced by &lt;code&gt;Get-SMO_&lt;/code&gt; that you can use to create instances of SMO objects. It also includes &lt;code&gt;Get-SMOT_&lt;/code&gt; functions that you can use to retrieve the type definition for a particular kind of SMO object. The &lt;code&gt;Get-SMO_ctors&lt;/code&gt; function gives you a list of the constructors for a class and the &lt;code&gt;Get-SMO_enum&lt;/code&gt; function give you a list of the values for an enum.&lt;/p&gt;
&lt;p&gt;If you take a peek inside of the initPowerSMO.ps1 file, except for the &lt;code&gt;Get-SMO_enum&lt;/code&gt; and &lt;code&gt;Get-SMO_ctors&lt;/code&gt; functions, you won’t see any of the functions we have used in this article. That’s because the initPowerSMO.ps1 script generates these functions from the assemblies that makeup SMO. How it does this will be the topic of a later blog article.&lt;/p&gt;
&lt;p&gt;Dan &lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>10</thr:total></entry><entry><id>41953</id><published>2006-11-08T00:26:00.0-05:00</published><updated>2006-11-08T00:26:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Don't forget your GETs - The importance of naming consistency</title><content type="html">PowerShell and SMO are getting together like chocolate and peanut butter. Yesterday I blogged about Bob</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>41955</id><published>2006-11-08T04:16:00.0-05:00</published><updated>2006-11-08T04:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">This looks very useful for developers used to the .Net environment and terminolgy.  DBAs will probably be more interested in a straightforward set of scripts that allow them to easily understand Powershell and SMO</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>41956</id><published>2006-11-08T05:36:00.0-05:00</published><updated>2006-11-08T05:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">By popular demand the "Get-" convention is being used for the SMO and SMOT commands. The names in the article have not been updated so keep this in mind when you read it.
&lt;br /&gt;
&lt;br /&gt;For example:
&lt;br /&gt;
&lt;br /&gt;SMO-Server
&lt;br /&gt;
&lt;br /&gt;is now
&lt;br /&gt;
&lt;br /&gt;Get-SMO_Server
&lt;br /&gt;
&lt;br /&gt;and 
&lt;br /&gt;
&lt;br /&gt;SMOT-Server
&lt;br /&gt;
&lt;br /&gt;is now 
&lt;br /&gt;
&lt;br /&gt;Get-SMOT_Server
&lt;br /&gt;
&lt;br /&gt;To save on  typing now all of the commands have shorted aliases.
&lt;br /&gt;
&lt;br /&gt;gs_Server for Get-SMO_Server
&lt;br /&gt;
&lt;br /&gt;and
&lt;br /&gt;
&lt;br /&gt;gst_Server for Get-SMOT_Server
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;There are some names collisions that need to be cleaned up, that will come later</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>41958</id><published>2006-11-08T06:33:00.0-05:00</published><updated>2006-11-08T06:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">The article has now been updated to reflect the PowerShell function naming conventions.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>44743</id><published>2006-12-08T18:37:00.0-05:00</published><updated>2006-12-08T18:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">very nice.. I learned more about Powershell, SMO and .Net from this.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>45498</id><published>2006-12-28T14:35:00.0-05:00</published><updated>2006-12-28T14:35:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">Dan,
&lt;br /&gt;PowerSMO seems great!  But, for a newbie, can you provide a script that will list the databases for a host of similarly-named servers?
&lt;br /&gt;Thanks...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>45971</id><published>2007-02-04T05:11:00.0-05:00</published><updated>2007-02-04T05:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">Great article. Wish you'd create a pdf version of for download ;-)</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>47980</id><published>2007-07-12T04:04:00.0-05:00</published><updated>2007-07-12T04:04:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">Thanks Dan,
&lt;br /&gt;I used powersmo to download all AD users.
&lt;br /&gt;Who is interested can copy the script from my blog http://ppsqualo.blogspot.com/2007/07/scaricare-tutta-la-foresta-ad-in.html
&lt;br /&gt;Thanks ..
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>50310</id><published>2008-02-25T20:16:00.0-05:00</published><updated>2008-02-25T20:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">can u please upload a pdf version so that we can read the article under our convinence </content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>50313</id><published>2008-02-26T03:51:00.0-05:00</published><updated>2008-02-26T03:51:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: PowerSMO!</title><content type="html">You can save it using IE to make an MHT archive that you can pass around. In IE-7 use Page-&amp;gt;Save As-&amp;gt;Web Archive Single File. You can view the *.mht file that it produces without being on line.
&lt;br /&gt;
&lt;br /&gt;Dan
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41936"></thr:in-reply-to></entry><entry><id>41964</id><published>2006-11-08T18:33:00.0-05:00</published><updated>2006-11-08T18:33:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Applied PowerSMO! I</title><content type="html">&lt;p&gt;Now that we have PowerSMO! we can start making use of it. The first example will be building a test database. Whenever I work on an new database application or write labs for a course that involves databases I need to make test database with some data in them. T-SQL is just fine for defining tables and such, but as soon as I want to fill those tables with some sample data it gets a bit tedious… I just want to directly inject some C# into my T-SQL to manipulate strings, generate random data and so on. Now with PowerSMO! I can, in effect, do just that.&lt;/p&gt;
&lt;p&gt;This blog article assumes you have some familiarity with PowerSMO!, SQL Server, and PowerShell. The purpose of this blog article is to show how to make use of PowerSMO! to do some typical database operations.&lt;/p&gt;
&lt;p&gt;We start by making a database.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $server = SMO_Server
PS C:\demos&amp;gt; $testdb = SMO_Database $server "TestDB_1"
PS C:\demos&amp;gt; $testdb.DatabaseOptions.RecoveryModel="Simple"
PS C:\demos&amp;gt; $testdb.Create()
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To start with we need a reference to an instance of SQL Server. We are using the get-SMO_Server function from PowerSMO! to get this reference. Note that short form of the function is used, dropping the “get-” prefix. This is a handy feature of PowerShell.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$testdb&lt;/code&gt; is the test database we are making. SMO_Database requires a reference to a server and a name. I usually have a common prefix for test database names, we will how that is useful shortly. Also I set the RecoveryMode to “Simple” so I don’t end up with a big log on database that is really a throwaway anyhow. Lastly the $testdb doesn’t really exist until Create() is called on it, that’s what makes SMO issue the appropriate T-SQL commands to the server to create the database.&lt;/p&gt;
&lt;p&gt;Since I, and probably you too, have a standard way to create a test database we should we should capture our &lt;code&gt;ad hoc&lt;/code&gt; script in a function so we can reuse it. Actually we are going to make two functions here, one to create a test database name, and another to make an actual test database. We will see shortly that this will make it a lot easier to maintain things over time.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function global:get-TestDatabaseName
([string]$suffix)
{
"TestDB_{0}" -f $suffix;
}
function global:new-TestDatabase
(
[Microsoft.SqlServer.Management.Smo.Server]$server,
[string]$name_suffix)
{
$name = get-TestDatabaseName $name_suffix;
$testdb = SMO_Database $server $name;
$testdb.DatabaseOptions.RecoveryModel="Simple";
$testdb.Create();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;get-TestDatabaseName is used to create a name for a test database. All test databases have the prefix “TestDB_”. The -f operator is the PowerShell formatting operator. It replaces &lt;code&gt;{0}&lt;/code&gt; with the first parameter that follows it and &lt;code&gt;{1}&lt;/code&gt; with the second and so on.&lt;/p&gt;
&lt;p&gt;The new-TestDatabase requires a Server and a string as input. The body of the function duplicates our &lt;code&gt;ad hoc&lt;/code&gt; script but uses the get-TestDatabaseName to generate the name of the database we want to add. Let’s try it out…&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; new-TestDatabase $server 3
PS C:\demos&amp;gt; new-TestDatabase $server 4
PS C:\demos&amp;gt; new-TestDatabase $server 5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It’s pretty easy to add a lot of databases. In fact you will probably find that often you end up with a lot of trash databases you want to get rid of and sometimes you just want to clean out your test databases and start over. Because we have a standard prefix for out test database that fairly easy to do. To make things even easier let’s add a function that finds all of our test databases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function global:get-TestDatabases
([Microsoft.SqlServer.Management.Smo.Server]$server)
{
$pat = get-TestDatabaseName "*";
$server.Databases | ?{$_.Name -like $pat}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;get-TestDatabases&lt;/code&gt; function makes a pattern for test database names using the get-TestDatabaseName function. It then passes the databases it finds in &lt;code&gt;$server&lt;/code&gt; through a &lt;code&gt;-like&lt;/code&gt; filter that uses this pattern to eliminate the database that are not test databases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; get-TestDataBases $server | %{$_.name}
TestDB_1
TestDB_2
TestDB_3
TestDB_4
TestDB_5
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can see we have made a good sized population of test databases. However it is pretty easy to get rid of all of them.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; TestDatabases $server | %{$_.Drop()}
PS C:\demos&amp;gt; TestDatabases $server | %{$_.name}
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use the get-TestDatabases function to pipe each of the databases into a script that calls the &lt;code&gt;Drop()&lt;/code&gt; method on each one. A quick check shows we were successful. Ok, let’s put our test database back into the server for the rest of the things we want to do.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; new-TestDatabase $server 1
PS C:\demos&amp;gt; $testdb = $server.Databases[(TestDatabaseName 1)]
PS C:\demos&amp;gt; $testdb.Name
TestDB_1
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My test systems have a few Windows users, Dawn, Don, and SqlAdmin, that I use for testing. They are all ordinary Windows users with no special priveleges and the all have logins on the Sql Server instance I’m going to do testing with. We can check to see if they are there easily.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $server.logins |  %{$_.name}
Ambler
AuditLogin
BUILTIN\Administrators
Frank
Joe
MyAsmLogin
NT AUTHORITY\SYSTEM
PARSEC5\Administrator
PARSEC5\Dawn
PARSEC5\Don
PARSEC5\SqlAdmin
PARSEC5\SQLServer2005MSFTEUser$PARSEC5$MSSQLSERVER
PARSEC5\SQLServer2005MSSQLUser$PARSEC5$MSSQLSERVER
PARSEC5\SQLServer2005SQLAgentUser$PARSEC5$MSSQLSERVER
sa
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you look about half-way down the list you will see Dawn, Don and SqlAdmin. Of course we can refine this a bit more to list only the logins we are interested in.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $server.logins | 
    ?{$_.name -like "*\Dawn" -or $_.name -like "*\Don"
    -or $_.name -like "*\SqlAdmin"} | %{$_.name}
PARSEC5\Dawn
PARSEC5\Don
PARSEC5\SqlAdmin
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we use the logical -or operator and the -like pattern matching operator to filter out the logins to just the standard ones we use. In fact we should make add this to a library of functions we use when we build test databases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function global:Get-StandardTestLogins
([Microsoft.SqlServer.Management.Smo.Server]$server)
{
$server.logins | 
    ?{$_.name -like "*\Dawn" -or 
    $_.name -like "*\Don" -or
    $_.name -like "*\SqlAdmin"}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Get-StandardTestLogin function is a bit different from the &lt;i&gt;ad hoc&lt;/i&gt; script we put together; It outputs a login object instead of just a name. Note that it uses a typed parameter for input, it requries a Server as input parameter. We can still use it to get the list of names though, even though it outputs login objects.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; StandardTestLogins $server | %{$_.name}
PARSEC5\Dawn
PARSEC5\Don
PARSEC5\SqlAdmin
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If it turns out our test logins are not on the system we could use PowerShell to add them. PowerShell integrates support for WMI, Window Management Instrumentation, and is a conventional way to script new users into a Windows system or enterprise. We are not going to cover those features in this blog article though.&lt;/p&gt;
&lt;p&gt;There is one last thing we have to check for out test logins. As the name implies SqlAdmin is supposed to be in the sysadmin role for SqlServer. That’s straight forward to check.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $server.logins["PARSEC5\SqlAdmin"].IsMember("sysadmin")
True
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like we are good to go for our test logins. &lt;/p&gt;
&lt;p&gt;Now that we know that our standard test logins are there, lets add the corresponding users to our test database.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; foreach ($login in StandardTestLogins $server)
&amp;gt;&amp;gt; {
&amp;gt;&amp;gt; $user = SMO_User $testdb $login.name
&amp;gt;&amp;gt; $user.login = $login.name
&amp;gt;&amp;gt; $user.Create()
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
PS C:\demos&amp;gt; $testdb.users | %{$_.name}
dbo
guest
INFORMATION_SCHEMA
PARSEC5\Dawn
PARSEC5\Don
PARSEC5\SqlAdmin
sys
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We use the PowerShell foreach command to iterate through each of our test logins. We then make a new user, &lt;code&gt;$user&lt;/code&gt;, in the &lt;code&gt;$testdb&lt;/code&gt; with a name the same as the login name, which is a pretty typical way to add users to a database. Then we fill out the &lt;code&gt;login&lt;/code&gt; property of &lt;code&gt;$user&lt;/code&gt; with the corresponding login name. Last we call the &lt;code&gt;Create()&lt;/code&gt; method on &lt;code&gt;$user&lt;/code&gt;. A SMO user object, like just about all new objects in SMO, do not exist in the database until after the &lt;code&gt;Create()&lt;/code&gt; method has been called on them.&lt;/p&gt;
&lt;p&gt;We confirm that our test users were added by listing the names of the users in &lt;code&gt;$testdb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One of the nice things about having the Get-StandardTestLogins is that we can use it to create the users for our test databases. This allows us to to keep track of out standard test logins in one place, we don’t need to constantly copy the list of them everywhere we need them. &lt;/p&gt;
&lt;p&gt;We should turn this foreach loop into a function so we can re-use for future test databases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function global:new-StandardTestUsers
([Microsoft.SqlServer.Management.Smo.Database]$database)
{
foreach ($login in StandardTestLogins $database.Parent)
{
$user = SMO_User $database $login.name
$user.login = $login.name
$user.Create()
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here the new-StandardTestUsers functions requires that a database be passed into it. The body of the function is the same as the &lt;code&gt;ad hoc&lt;/code&gt; script we wrote except that the reference to the server is gotten from the &lt;code&gt;$database&lt;/code&gt; itself. Now, as you can see below, we just pass in a reference to our test database to the new-StandardTestUsers function to add all of our test users.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; new-StandardTestUsers $testdb
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now to finish out our test database we will add a table using SMO objects, then populate the table with some random data. The table will have an order number, a customer name and value column. The order number column will be the PRIMARY KEY.&lt;/p&gt;
&lt;p&gt;First of all we need to make a table. In case you don’t remember to parameters to construct a table the get-SMO_ctors function will remind you.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; SMO_ctors (SMOT_Table)
Table()
Table(Database database, String name)
Table(Database database, String name, String schema)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are not going to work with database schemas in this blog article, I’ll save that for a later one. We’ll use the second constructor.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $orders = SMO_Table $testdb "Orders"
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have a table we need to create the columns for it. Again get-SMO&lt;em&gt;ctors can be used to find out what parameters we need to pass to the get-SMO&lt;/em&gt;Column function.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; SMO_ctors (SMOT_column)
Column()
Column(SqlSmoObject parent, String name)
Column(SqlSmoObject parent, String name, DataType dataType)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can create a column, specify it name and type in one operation. We will need to make a DataType, so let’s check what the constructor options are for it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; smo_ctors (SMOT_DataType)
DataType()
DataType(SqlDataType sqlDataType)
DataType(SqlDataType sqlDataType, Int32 precisionOrMaxLength)
DataType(SqlDataType sqlDataType, Int32 precision, Int32 scale)
DataType(SqlDataType sqlDataType, String type)
DataType(SqlDataType sqlDataType, String type, String schema)
DataType(XmlSchemaCollection xmlSchemaCollection)
DataType(UserDefinedDataType userDefinedDataType)
DataType(UserDefinedType userDefinedType)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This, in turn requires us to make a SqlDataType, which is an enum. We can look to see what the possible enumerated values are for this too.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; SMO_enum (SMOT_SqlDataType)
value__
None
BigInt
Binary
Bit
Char
DateTime
Decimal
Float
Image
Int
Money
NChar
NText
NVarChar
NVarCharMax
Real
SmallDateTime
SmallInt
SmallMoney
Text
Timestamp
TinyInt
UniqueIdentifier
UserDefinedDataType
UserDefinedType
VarBinary
VarBinaryMax
VarChar
VarCharMax
Variant
Xml
SysName
Numeric
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No big suprise here, it has all the SQL datatypes were are use to using in SQL Server. Now we can make some columns and add them to our &lt;code&gt;$orders&lt;/code&gt; table.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $orders = SMO_Table $testdb "Orders"
PS C:\demos&amp;gt; $order_number = SMO_Column $orders "Order Number"      
    (SMO_DataType "Int")
PS C:\demos&amp;gt; $order_number = SMO_Column $orders "Order Number" 
    (SMO_DataType "Int")
PS C:\demos&amp;gt; $orders.Columns.Add($order_number)
PS C:\demos&amp;gt; $orders.Columns.Add($customer_name)
PS C:\demos&amp;gt; $value = SMO_Column $orders "Value"
    (SMO_DataType "Money")
PS C:\demos&amp;gt; $orders.Columns.Add($value)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First we create a table named “Orders”. A reference to the table is in variable &lt;code&gt;$orders&lt;/code&gt;. Each column is made using the SMO&lt;em&gt;Column function. Note that the datatype for the column is defined using the SMO&lt;/em&gt;DataType function.&lt;/p&gt;
&lt;p&gt;Now that we have our table we need to make the $order_number column a primary key.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $pk = SMO_Index $orders "Orders__PK"
PS C:\demos&amp;gt; smo_enum (SMOT_IndexKeyType)
value__
None
DriPrimaryKey
DriUniqueKey
PS C:\demos&amp;gt; $pk.IndexKeyType=(SMOT_IndexKeyType)::DriPrimaryKey
PS C:\demos&amp;gt; $inx_col = SMO_IndexedColumn $pk "Order Number"
PS C:\demos&amp;gt; $pk.IndexedColumns.Add($inx_col)
PS C:\demos&amp;gt; $orders.Indexes.Add($pk)
PS C:\demos&amp;gt; $orders.Create()
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The index takes a little more work. First we make an SMO&lt;em&gt;Index.and name it “Orders&lt;/em&gt;PK”. An index might include more than one column and those columns are specified in SMO&lt;em&gt;IndexedColumn objects. We need to make an SMO&lt;/em&gt;Indexed column for each column in the index. This index is only a single column, however, so we only need to create a single SMO&lt;em&gt;IndexedColumn. The SMO&lt;/em&gt;IndexedColumn is added to the index, &lt;code&gt;$pk'. Once we have added the SMO_IndexedColumn to the SMO_Index we can add the index to the&lt;/code&gt;$orders` table.&lt;/p&gt;
&lt;p&gt;Lastly we call the &lt;code&gt;Create()&lt;/code&gt; method on &lt;code&gt;$orders&lt;/code&gt; to make the table on the server.&lt;/p&gt;
&lt;p&gt;Now we can add some data to the table. We can make use of the System.Random class from the .NET framework to generate some of the data. There aren’t any “row” objects for tables in SMO. We just use standard T-SQL to do inserts to add data to a table.&lt;/p&gt;
&lt;p&gt;To fill out our table we need to produce some triples that consist of an order number, customer name, and a value. We have 30 customers with 1000 orders whose value ranges from 1 to 1000.00. With PowerShell we can use a pipeline to generate triples. Here is a simple example that generates 10 random triples.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; (1..10) | %{"{0} : {1} : {2}" -f $_, 
    $rand.next(1,10), $rand.next()}
1 : 5 : 2119806400
2 : 6 : 1944455664
3 : 7 : 323953648
4 : 9 : 1680451911
5 : 4 : 820794382
6 : 4 : 1793724046
7 : 8 : 1206229307
8 : 5 : 1466323995
9 : 6 : 1123175179
10 : 1 : 1559943559
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first part of the pipeline is an array, initialized with values from 1 to 10. The second part of the pipeline formats the numbers from the array along with some random numbers. Now we will use this technique generate the T-SQL insert statments. To get started let’s make a helper function that will create the insert statement from three input parameters.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; function get-insert
&amp;gt;&amp;gt; ($number, $customer, $value)
&amp;gt;&amp;gt; {
&amp;gt;&amp;gt; "INSERT INTO Orders Values ({0}, '{1}', {2})" -f
&amp;gt;&amp;gt; $number, $customer, $value
&amp;gt;&amp;gt; }
&amp;gt;&amp;gt;
PS C:\demos&amp;gt; insert 1 "joe" 102.32
INSERT INTO Orders Values (1, 'joe', 102.32)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The get-insert function uses the -f operator to build an insert statement from the three parameters passed into it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; (1..10) |
    %{insert $_ ("Name_" + $rand.next(1,30)) 
    ($rand.next(1,1000000)/100.1)}
INSERT INTO Orders Values (1, 'Name_15', 1127.23276723277)
INSERT INTO Orders Values (2, 'Name_12', 9753.04695304695)
INSERT INTO Orders Values (3, 'Name_23', 9560.27972027972)
INSERT INTO Orders Values (4, 'Name_15', 2843.98601398601)
INSERT INTO Orders Values (5, 'Name_13', 2798.22177822178)
INSERT INTO Orders Values (6, 'Name_13', 4531.40859140859)
INSERT INTO Orders Values (7, 'Name_11', 4825.18481518482)
INSERT INTO Orders Values (8, 'Name_26', 8539.9000999001)
INSERT INTO Orders Values (9, 'Name_22', 9863.88611388611)
INSERT INTO Orders Values (10, 'Name_10', 4556.79320679321)
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have used the get-insert function generate ten insert’s. Next we need a way to execute those insert statements. A SMO database object has a number methods that can execute a SQL statement, much like a SqlCommand does in ADO.NET. In this case we will use the ExecuteNonQuery method of &lt;code&gt;$database&lt;/code&gt; to insert 1000 orders.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; (1..1000) | 
    %{insert $_ ("Name_" + $rand.next(1,30))
    ($rand.next(1,1000000)/100.1)} | 
    %{$testdb.ExecuteNonQuery($_)}
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We put an array with a thousand numbers into a pipeline, each number is used as an order number. The customer name is just the string “name_” with a suffix that is a random number from 1 to 30. And then for the value we generate a random number. These constructed values are passed into the get-insert function to make an insert statement. The insert statement is then used a the parameter to the ExectureNonQuery method on &lt;code&gt;$testdb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can see the row count of the table is now 1000.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $orders.refresh()
PS C:\demos&amp;gt; $orders.rowcount
1000
PS C:\demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that before we check the rowcount we refresh the &lt;code&gt;$orders&lt;/code&gt; table.&lt;/p&gt;
&lt;p&gt;To finish up we will make use of the fact that can also execute a select statement against the Orders database.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\demos&amp;gt; $dataset = $testdb.ExecuteWithResults(
    "SELECT * FROM Orders")
PS C:\demos&amp;gt; $table = $dataset.tables[0]
PS C:\demos&amp;gt; $table.Rows | format-table -autosize
Order Number Customer Name     Value
------------ -------------     -----
           1 Name_29       1837.6124
           2 Name_27       3723.3666
           3 Name_1        3221.3886
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The ExecuteWithResults method of &lt;code&gt;$database&lt;/code&gt; returns an ADO Dataset. We can extract the rows from the first table in the Dataset and pipe them into a PowerShell format-table command to see what they contain.&lt;/p&gt;
&lt;p&gt;We have seen that we can use PowerSMO! to create a test database, add tables to it and then fill these tables with some random data. Along the way we have seen how to use PowerSMO! to do a number of typical database operation like checking out what logins exist or adding users to database.&lt;/p&gt;
&lt;p&gt;Well that’s it for this article, there will be more later.&lt;/p&gt;
&lt;p&gt;Dan &lt;a href="mailto:dan@pluralsight.com"&gt;dan@pluralsight.com&lt;/a&gt;&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>2</thr:total></entry><entry><id>44750</id><published>2006-12-09T06:20:00.0-05:00</published><updated>2006-12-09T06:20:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Applied PowerSMO! I</title><content type="html">nice article.  You make SMO look simple to use.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41964"></thr:in-reply-to></entry><entry><id>45370</id><published>2006-12-19T22:48:00.0-05:00</published><updated>2006-12-19T22:48:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Applied PowerSMO! I</title><content type="html">Great article!
&lt;br /&gt;PowerSMO! is very nice thing.
&lt;br /&gt;But I have some trouble - then I call .Create() for my table, I have error:
&lt;br /&gt;--------------------------------------------------------------------------------
&lt;br /&gt;POWERSHELL EXCEPTION 
&lt;br /&gt;EXCEPTION TYPE:System.Management.Automation.MethodInvocationException
&lt;br /&gt;MESSAGE:Exception on call "Create" with "0" arguments: "Create failed for Table 'dbo.FirstTable'. "
&lt;br /&gt;POSITION: On row:41 col:16 + $MyTable.Create( &amp;lt;&amp;lt;&amp;lt;&amp;lt; ) 
&lt;br /&gt;--------------------------------------------------------------------------------
&lt;br /&gt;
&lt;br /&gt;I test it on MS SQL Server 2005 Express hosted on WinXP Pro SP2 and win2k3 Server Enterprise.
&lt;br /&gt;
&lt;br /&gt;I cann't understand why I got error :(</content><author><name>Anonymous</name></author><thr:in-reply-to ref="41964"></thr:in-reply-to></entry><entry><id>42506</id><published>2006-11-25T09:25:00.0-05:00</published><updated>2006-11-25T09:25:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Processing XML with PowerShell</title><content type="html">&lt;p&gt;There are a couple of powerful technologies for processing native XML, XPath and XSLT. People often avoid processing native XML but instead convert the XML to an object model in a language they are used to and do “conventional” programming on that model. Even PowerShell itself does this with its fairly straightforward dotted syntax for accessing parts of an XML document and of course .NET, web service technologies, and SQL Server have their own ways to morph XML into a familiar object model.&lt;/p&gt;
&lt;p&gt;There are probably a number reasons for this not the least of which is syntactic comfort… with some practice you actually can drive nails with a screwdriver and then you only need to learn how to use one tool to build a house. XSLT itself is often criticized as being too verbose but that is not really the case. And lastly the programming models for XPath and XSLT are different than that used in languages like C# or VB.NET; They are much more like SQL in that you don’t actually write a program but instead write a set of rules and throw data at them.&lt;/p&gt;
&lt;p&gt;However if you are going to bump into XML in your travels, and you can be pretty sure that you will, it is really worth your while to become comfortable with at least the basics of XPath and XSLT because that knowledge will make a lot of programming jobs a lot easier. Let’s take a look at a simple example to see this. Here is a grocery list, XML-style, in the file groceries.xml&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;GroceryList&amp;gt;
&amp;lt;Item&amp;gt;
&amp;lt;Dept&amp;gt;Produce&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Orange&amp;lt;/Name&amp;gt;&amp;lt;Price&amp;gt;3.20&amp;lt;/Price&amp;gt;
&amp;lt;/Item&amp;gt;
&amp;lt;Item&amp;gt;
&amp;lt;Dept&amp;gt;Meat&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Steak&amp;lt;/Name&amp;gt;&amp;lt;Price&amp;gt;13.20&amp;lt;/Price&amp;gt;
&amp;lt;/Item&amp;gt;
&amp;lt;Item&amp;gt;
&amp;lt;Dept&amp;gt;Produce&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Lettuce&amp;lt;/Name&amp;gt;&amp;lt;Price&amp;gt;1.34&amp;lt;/Price&amp;gt;
&amp;lt;/Item&amp;gt;
&amp;lt;Item&amp;gt;
&amp;lt;Dept&amp;gt;Meat&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Ham&amp;lt;/Name&amp;gt;&amp;lt;Price&amp;gt;11.41&amp;lt;/Price&amp;gt;
&amp;lt;/Item&amp;gt;
&amp;lt;/GroceryList&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can calculate the total of all of groceries using the PowerShell object model of XML with the following script;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$list = get-content .\groceries.xml
PS C:\Demos&amp;gt; $list.GroceryList.Item | &amp;amp;{begin {$sum=0}
 process{$sum += $_.Price} end {$sum}}  
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are other ways to do this in PowerShell, but all involve iterating through the items to produce a sum. It turns out there is a simple XPath expression that calculates sum of the prices of the items in the list:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sum(GroceryList/Item/Price)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In fact it would be kind of nice if we had a way to “execute” and XPath expression easily in PowerShell. How about this?&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xeval groceries.xml "sum(GroceryList/Item/Price)"
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This blog article is about processing XML using PowerShell and the typical sorts of things you run into when you do this. It uses some extension functions, xeval and xnav are their aliases, to do this processing. The xeval function is used to process an XML file using XPath expressions. The xnav function is used to turn literal XML into an XPathNavigator. Later blog articles will cover other ways to process XML using PowerShell.&lt;/p&gt;
&lt;p&gt;A script to build these functions and their associated aliases is in a file named XSLT.ps1. This file and the examples in this blog article are available at &lt;a href="http://www.pluralsight.com/dan/samples/ProcessingXMLPowershell.zip"&gt;http://www.pluralsight.com/dan/samples/ProcessingXMLPowershell.zip&lt;/a&gt;. These extension functions are not really any harder to use than the XML support built into PowerShell but are quite a bit more capable in what they can accomplish. After we look at using these extension functions we will look inside of XSLT.ps1 and see how it works.&lt;/p&gt;
&lt;p&gt;The XSLT.ps1 file actually has some other extension functions that are not discussed in this blog article but will be in a future one. &lt;/p&gt;
&lt;p&gt;In the first example of using xeval we just looked at, the first argument to the xeval function is the file path for the XML file you want to process. The second argument is the XPath expression you want evaluated. Of course to make good use of xeval you will have to be familiar with XPath. XPath is a W3 recommendation and is at &lt;a href="http://www.w3.org/TR/xpath"&gt;http://www.w3.org/TR/xpath&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The XPath recommendation is certainly worth reading and contains many example of XPath expressions. Another good source to have at your side is “Essential XML Quick Reference” published by Addison-Wesley and written by Aaron Skonnard and Martin Gudgen. &lt;/p&gt;
&lt;p&gt;Let’s start by looking at one of the issues you run into when working with XML. XML is often treated as though it were text and that is how PowerShell treats it. But XML is not plain ol’ text and the following examples will show that. We have another version of our xml grocery list in a file named GroceriesUC.xml. Let’s use our PowerShell script to process it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$list = get-content groceriesuc.xml
Cannot convert value "System.Object[]" to type 
"System.Xml.XmlDocument". 
Error: "Root element is missing."
At line:1 char:11
+ [xml]$list  &amp;lt;&amp;lt;&amp;lt;&amp;lt; = get-content GroceriesUC.xml
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hmmmm, that generated an error. What’s going on here?&lt;/p&gt;
&lt;p&gt;We often think of files as containing text, that is the characters we see on the printed page. But files don’t contain text, the are just a sequence of bytes. When someone gives you a “text” file you must know how that text was encoded into a sequence of bytes in order to be able to read it. PowerShell gives us a little help here in that the get-content cmdlet lets you specify the encoding of the file if you know it, or “unknown” if you don’t. Well we don’t know the encoding of the file so let’s tell PowerShell that the encoding is unknown and see what happens.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$list = get-content GroceriesUC.xml -encoding unknown
Cannot convert value "????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????
 to type "System.Xml.XmlDocument". Error: 
 "Data at the root level is invalid. Line 1, position 1."
At line:1 char:11
+ [xml]$list  &amp;lt;&amp;lt;&amp;lt;&amp;lt; = get-content GroceriesUC.xml -encoding unknown
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like we are out of luck here too. It turns out the encoding of the file is UTF-16BE. That’s a standard encoding used for XML files that is a sequence of words with the high-order byte of the word coming first. You might see it in XML that is generated on non-Intel compatible processors. Now that we know that we know actual encoding we can pass the information onto PowerShell.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$list = get-content GroceriesUC.xml 
    -encoding BigEndianUnicode
PS C:\Demos&amp;gt; $list.GroceryList.Item | 
    &amp;amp;{begin {$sum=0} process{$sum += $_.Price} end {$sum}}
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bottom line is when it comes to text unless you know the actual encoding you can’t depend on being able to read it. Earlier we said that XML wasn’t really text. To see what this means lets try that xeval function again on the GroceriesUC.xml file.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xeval GroceriesUC.xml "sum(GroceryList/Item/Price)"
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It works just fine and we don’t have to tell it what the encoding is. The reason for this is a requirement of every XML processor, &lt;i&gt;i.e.&lt;/i&gt; a support library for XML such as the one in .NET that xeval uses, must be able to unambiguously figure out the encoding used in an XML file without any outside help. This is thought by many to be the key feature of XML and certainly is one of the reasons for its wide use today. It works so well that most people don’t even know it is a feature! &lt;/p&gt;
&lt;p&gt;The built in processing in PowerShell using get-content makes a non-compliant XML processor. In some cases this isn’t that important but you should keep in mind that in the general case it is not useful for processing XML. If you want do know the details of how this “self-encoding” in XML works there is an explanation of it in Appendix F of the W3 &lt;i&gt;Extensible Markup Language XML&lt;/i&gt; recommendation at &lt;a href="http://www.w3.org/TR/xml/"&gt;http://www.w3.org/TR/xml/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is another issue that comes up when you deal with XML, namespaces. There are some who feel that namespaces are an unnecessary complication to XML, but they are important enough to have their own specification, &lt;i&gt;Namespaces in XML&lt;/i&gt; which is at &lt;a href="http://www.w3.org/TR/xml-names/"&gt;http://www.w3.org/TR/xml-names/&lt;/a&gt;. For those with an interest in such things the &lt;i&gt;Extensible Markup Language XML&lt;/i&gt; is really just a grammar with a little over 80 productions with lots of comments in it, and &lt;i&gt;Namespaces in XML&lt;/i&gt; just adds a few productions to that grammar. Regardless of how you feel about namespaces you will have to deal with them. Here is a different version of our grocery list. It is in the file named GroceriesNS.xml.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;GroceryList xmlns="urn:foo"
xmlns:r="urn:retail"
xmlns:w="urn:wholesale" &amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Produce&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Orange&amp;lt;/Name&amp;gt;
&amp;lt;w:Price&amp;gt;3.20&amp;lt;/w:Price&amp;gt;&amp;lt;r:Price&amp;gt;4.20&amp;lt;/w:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Meat&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Steak&amp;lt;/Name&amp;gt;
&amp;lt;r:Price &amp;gt;14.20&amp;lt;/r:Price&amp;gt;&amp;lt;w:Price &amp;gt;13.20&amp;lt;/w:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Produce&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Lettuce&amp;lt;/Name&amp;gt;
&amp;lt;w:Price&amp;gt;1.34&amp;lt;/w:Price&amp;gt;&amp;lt;r:Price&amp;gt;2.34&amp;lt;/r:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Meat&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Ham&amp;lt;/Name&amp;gt;
&amp;lt;w:Price&amp;gt;11.41&amp;lt;/w:Price&amp;gt;&amp;lt;r:Price&amp;gt;14.41&amp;lt;/r:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;/GroceryList&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This file is different from the Groceries.xml file in three ways. One is that it uses namespaces. Another is that it contains both a wholesale and a retail price for each item. It also uses Stock elements instead of Item elements; We will see why in a second. The Price elements are distinguished by their namespace, the ones prefixed with “r” are retail prices. The prices in the r:Price elements are the same as the corresponding Price elements in the Groceries.xml file. Let’s use PowerShell’s object model of XML to calculate the sum of the retail prices. PowerShell sees two Price elements under the Stock element, so it makes an array out of them. We will have pick which one to sum up. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; $list = get-content GroceriesNS.xml
PS C:\Demos&amp;gt; $list.GroceryList.Stock | 
    &amp;amp;{begin {$sum=0} process{$sum += $_.Price[1]} end {$sum}}
30.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The retail prices in the GroceriesNS.xml file are the same as the ones in the unqualified prices in the Groceries.xml file so we should get the same answer as before, but we don’t. The problem we have run into is that Price elements are distinguished only by their namespace and not by there position in the file. Note that in the second Stock element in the file the wholesale price comes after the retail price. So we have to make sure that we pick the correct price element.&lt;/p&gt;
&lt;p&gt;To distinguish a Price element we have to use a ParameterizedProperty named Item that PowerShell adds to an XML element. In many cases you will find it difficult to process XML using the PowerShell object model if the XML contains any Item elements because PowerShell uses this name for the ParameterizedProperty it adds to XML elements. This is why we changed the name of the Item element to Stock. If we had not made this change we would not have been able to process this XML file using the PowerShell object model of XML.&lt;/p&gt;
&lt;p&gt;In any case the Item property allows us to specify both the name and the namespace of the element we want.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; $list = get-content GroceriesNS.xml
PS C:\Demos&amp;gt; $list.GroceryList.Stock | 
  %{$_.Item("Price", "urn:retail")} | 
  &amp;amp;{begin {$sum = 0} process {$sum += $_.get_InnerText()} end {$sum}}
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we get the 29.15 just as we did when we processed the Groceries.xml file.&lt;/p&gt;
&lt;p&gt;Now let’s do the same thing using xeval function.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xeval GroceriesNS.xml 
"sum(a:GroceryList/a:Stock/r:Price)" @{r="urn:retail";a="urn:foo"}
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example xeval function has a third argument that is a dictionary that maps prefixes to the namespaces they represent in the XPath expression. You can see the GroceryList and Stock end up in the “urn:foo” namespace because of the “a” prefix and likewise Price ends up in the “urn:retail” namespace. Note that the prefix used in the XPath expression is not necessarily the same as that in the source XML file. There is no requirement the prefix used in an XPath expression be the same as that in the source XML file being processed; The key thing is that is specifies the proper namespace. Note that in the GroceriesNS.xml file the GroceryList and Stock element had no prefix but that the default namespace for the file was “urn:foo”.&lt;/p&gt;
&lt;p&gt;Let’s look at some more things we can do with xeval. The second parameter of xeval may be an array of XPath expressions. xeval will evaluate each of these expressions. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xeval GroceriesNS.xml "sum(a:GroceryList/a:Stock/r:Price)",
    "count(a:GroceryList/a:Stock)" @{a="urn:foo";r="urn:retail"}
29.15
4
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we calculated the sum of the retail prices and number of Stock items. Note that this example makes use of the fact that in PowerShell the “,” operator makes an array of the arguments it joins. Let’s carry this one step further.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xeval GroceriesNS.xml "sum(a:GroceryList/a:Stock/r:Price)",
    "count(a:GroceryList/a:Stock)",
    "sum(a:GroceryList/a:Stock/r:Price)
    div count(a:GroceryList/a:Stock)" @{a="urn:foo";r="urn:retail"}
29.15
4
7.2875
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, beside the sum of the prices and the number of stock items, we calculate the average price of the stock items. The important point of these last few examples is that it is very common to calculate some value based on the content of an XML file. These calculations can be embedded in an XPath expression and you never have to “read”, &lt;i&gt;i.e.&lt;/i&gt; pull out and interpret parts of, the XML file to do this.&lt;/p&gt;
&lt;p&gt;You might think that all repeated a:GroceryList &lt;i&gt;etc.&lt;/i&gt; might be inefficient or at least is tedious. First of all it’s not really inefficient at all to calculate a path multiple times in an XPath expression because the XPath engine that is evaluating these expression caches paths and reuses them when they appear again. As far as the tedium of typing them multiple times you can leverage PowerShell itself to simplify that.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; $s = "a:GroceryList/a:Stock"
PS C:\Demos&amp;gt; $p = "$s/r:Price"
PS C:\Demos&amp;gt; xeval GroceriesNS.xml "sum($p)",
    "count($s)",
    "sum($p) div count($s)" @{a="urn:foo";r="urn:retail"}
29.15
4
7.2875
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have made use of the fact that PowerShell will build a string out of a combination of literal text and variables. If the format of the XML file is pretty regular you can make the XPath expression used for the evaluation even more simple.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xeval Groceries.xml "sum(//r:Price)" @{r="urn:retail"}
29.15
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Of course here again you need some knowledge of XPath to simplify things. The “//” part of the XPath expression in this case really means “Find all the r:Price elements in the file.”&lt;/p&gt;
&lt;p&gt;There is a hidden value in using XPath expressions to do calculations on an XML file; That expression can be used by anyone using any technology that implements XML support to do the same calculation on that file. In other words the XPath expression is a platform independent way of specifying how a calculation is done, it is not limited to PowerShell. &lt;/p&gt;
&lt;p&gt;Sometimes you will have a literal string for your xml instead of a file. You can’t pass this directly to the xeval function because it will interpret that string as a file path and attempt to load a file.&lt;/p&gt;
&lt;p&gt;The implementation of xeval internally uses an XPathNavigator to process the XML that is passed to it. This blog article isn’t going discuss the details of how XPathNavigator works, but xnav is an alias for a function that converts literal XML into an XPathNavigator. If the first parameter passed into xeval is an XPathNavigator it will use that navigator instead of interpreting it as a file path.&lt;/p&gt;
&lt;p&gt;Here is an example of processing literal XML.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; $nav = xnav "&amp;lt;Stock&amp;gt;&amp;lt;sku&amp;gt;ee-44&amp;lt;/sku&amp;gt;&amp;lt;/Stock&amp;gt;"
PS C:\Demos&amp;gt; xeval $nav "string(//sku)"
ee-44
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example begins by using the xnav function to make an XPathNavigator out of some literal XML. This XPathNavigator is passed into the eval function. The XPath expression passed to xeval pulls out the stockroom unit from the literal XML.&lt;/p&gt;
&lt;p&gt;Using the pipeline in PowerShell is a great way process XML. There are a number of grocery files with names like GroceriesNS1.xml, GroceriesNS2.xml and so on that we would like to process. We would like to calculate the value of each these files. This is what the GroceriesNS1.xml file looks like.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;GroceryList xmlns="urn:foo"
xmlns:r="urn:retail"
xmlns:w="urn:wholesale" 
ID = "A-24"
&amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Produce&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Orange&amp;lt;/Name&amp;gt;
&amp;lt;w:Price&amp;gt;114.20&amp;lt;/w:Price&amp;gt;&amp;lt;r:Price&amp;gt;3.41&amp;lt;/r:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Meat&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Steak&amp;lt;/Name&amp;gt;
&amp;lt;r:Price &amp;gt;13.20&amp;lt;/r:Price&amp;gt;&amp;lt;w:Price &amp;gt;14.20&amp;lt;/w:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
&amp;lt;Dept&amp;gt;Produce&amp;lt;/Dept&amp;gt;&amp;lt;Name&amp;gt;Lettuce&amp;lt;/Name&amp;gt;
&amp;lt;w:Price&amp;gt;21.34&amp;lt;/w:Price&amp;gt;&amp;lt;r:Price&amp;gt;1.36&amp;lt;/r:Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;/GroceryList&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First of all it’s straightforward to get the names of these files.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; get-childitem C:\Demos\* |
 ?{$_.Name -match "GroceriesNS\d+.xml"}
    Directory: Microsoft.PowerShell.Core\FileSystem::C:\Demos

Mode                LastWriteTime     Length Name
----                -------------     ------ ----
-a---        11/25/2006  10:15 AM        438 GroceriesNS1.xml
-a---        11/25/2006  10:14 AM        324 GroceriesNS2.xml
-a---        11/25/2006  10:16 AM        438 GroceriesNS3.xml

PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the GroceryList element has an attribute name ID that identifies that list. We want to include that ID in our results.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; get-childitem C:\Demos\* |
 ?{$_.Name -match "GroceriesNS\d+.xml"} |
 %{xeval "$_" "string(f:GroceryList/@ID)", "sum(//r:Price)" `
 @{f="urn:foo";r="urn:retail"} }
A-24
17.97
31
54.4
109
57.97
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example we pipe the file names into a script block that uses the xeval function. This uses XPath expressions to get both the ID of the GroceryList and the sum of its Price elements. Note the backtick and the end of the third line to insure the continuation of the command line.&lt;/p&gt;
&lt;p&gt;The output we get is ID followed by sum. We might like something that produces a single line per GroceryList. We could pipe these results into another script block that aggregated these results by the pair… or we could use XPath to do the same thing.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; get-childitem C:\BlogArts\ProcessingXMLPowerShell\* |
 ?{$_.Name -match "GroceriesNS\d+.xml"} |
 %{xeval "$_" "concat(string(f:GroceryList/@ID), ' : ', sum(//r:Price))" `
 @{f="urn:foo";r="urn:retail"} }
A-24 : 17.97
31 : 54.400000000000006
109 : 57.97
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we use the XPath concat function to produce a line per GroceryList report of the sum of the prices of each grocery list. You can produce some pretty fancy reports using just XPath expressions, but if they are much more complicated than the one in this example you will find it somewhat tedious to code them up. For more complicated reports XSLT is really a better choice and we will be looking at that in a later blog article. In any case this example has defined a report in terms of an XPath expression which anyone on any platform that implements XML can produce the same report. This example didn’t “code up” a report it made a rule that defined how the report was to be produced.&lt;/p&gt;
&lt;p&gt;Now let’s look at the implementation. We will start with the eval function.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filter get-XSLT_XPathEvaluate
{
param($nav, [array]$computations, [hashtable]$namespaces)
if($nav -is [string])
{
$nav = get-XSLT_XPathNavigator $nav
}
if($nav -isnot [System.Xml.XPath.XPathNavigator]) 
  { throw "String file path or XPathNavigator required"}
$nm = get-XSLT_NamespaceManager $nav.NameTable $namespaces
foreach($n in $nav)
{
foreach($compute in $computations)
{
$n.Clone().Evaluate($compute, $nm)
}
}
}
set-alias xeval get-XSLT_XPathEvaluate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The xeval function uses three parameters. The first is a string or an XPathNavigator, the second is an array of XPath expressions, and the last is a dictionary of namespace mappings. It tests the first parameter to see if it is a string. If it is it uses the get-XSLT&lt;em&gt;XPathNavigator function to make an XPathNavigator from the file path. We will look at the get-XSLT&lt;/em&gt;XPathNavigator function shortly.&lt;/p&gt;
&lt;p&gt;Next it checks to make sure that the $nav variable is in fact an XPathNavigator and throws an error if it isn’t.&lt;/p&gt;
&lt;p&gt;In order to use namespace with an XPathNavigator you need a construct called an XmlNamespaceManager. This construct holds the mappings of prefixes to namespaces. Both XPathNavigators and XmlDocuments store their associated XML in a non-textual, binary form for efficiency. Internally another construct, a NameTable, maintains a mapping between the names of elements and attributes, and their internal representation. The XmlNamespaceManager uses this NameTable in its constructor so that it can have the same mapping of names to internal representation that the XPathNavigator does.&lt;/p&gt;
&lt;p&gt;Once the XmlNamespaceManager is constructed it is filled by get-XSLT_NamespaceManager function that we will look at shortly.&lt;/p&gt;
&lt;p&gt;To do the computations the xeval function iterates through the array of XPath expression that are passed in. It uses a clone of the XPathNavigator to execute the expression. The reason it uses a clone of the XPathNavigator is the XPathNavigator is really a cursor on the XML file and we want to leave that XPathNavigator in its original state for each execution of XPath expressions being processed.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filter get-XSLT_XPathNavigator
{
param ($xml)
if($xml -is [string])
{
$xml = get-XSLT_XMLReader $xml;
$xml = get-XSLT_XPathDocument $xml
}
$nav = $xml.CreateNavigator();
$nav
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The get-XSLT_XPathNavigator uses the string passed into it as a file path. It starts by converting the file path into an XmlReader, then uses that XmlReader to make an XPathDocument, which in turn is used to make an XPathNavigator.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filter get-XSLT_XMLReader
{
param ([string]$xmlFile)
[System.IO.FileStream]$fileStream = new-object System.IO.FileStream $xmlFile, 
    ([System.IO.FileMode]::Open),
([System.IO.FileAccess]::Read)
[System.Xml.XmlTextReader]$rdr = new-object System.Xml.XmlTextReader $fileStream
$rdr
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The get-XSLT_XMLReader function opens a FileStream using the string passed in as the path to the file. Note that it is not using a StreamReader which would convert the file to text, it is instead reading the raw bytes in the file. The FileStream is used to make an XmlTextReader. Again, dispite its name, an XmlTextReader does not read text, it reads bytes from the FileStream and because it is a complient XML processor it is completely capable of determining the encoding of the XML that is in the byte stream.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filter get-XSLT_XPathDocument
{
param ([System.Xml.XmlReader]$xml)
$doc = new-object System.Xml.XPath.XPathDocument $xml;
$doc
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The get-XSLT_XPathDocument function uses an XmlReader to make an XPathDocument. An XPathDocument is, in effect, a readonly XmlDocument except that the only thing you can do with it is make an XPathNavigator out of it. If all you are going to do is read the content of an XML file and not modify it, and XPathDocument may be a better choice because it may be more efficient at processing XPath than the XmlDocument.Select method is.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function get-XSLT_NamespaceManager 
([System.Xml.NameTable] $nameTable, [hashtable] $namespaces)
{
$nm = new-object System.Xml.XmlNamespaceManager $NameTable
foreach($key in $namespaces.keys)
{
$nm.AddNamespace($key, $namespaces.$key);
}
,$nm
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The get-XSLT_NamespaceManager has two inputs, a NameTable and a dictionary of namespace mapping. It starts by making an XmlNamespaceManager. It then iterates through the keys in the dictionary and uses the key and it associated value to add namespace mappings to the XmlNamespaceManager. Note that it uses the “,” operator when it returns the XmlNamespaceManager. The XmlNamespaceManager implements IEnumerable and returning it inside of an array prevents the XmlNamespace itself from being enumerated by PowerShell when it is returned, which is what we want.&lt;/p&gt;
&lt;p&gt;Lastly the get-XSLT_LiteralXPathNavigator function is used to make an XPathNavigator out of literal XML.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filter get-XSLT_LiteralXPathNavigator
{
param ([string]$literalXml)
[xml]$xml = $literalXml;
$xml.CreateNavigator();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a case where assuming the XML is in fact text is ok, becuase it is text and we use the PowerShell implementation of XML to get a navigator from the string.&lt;/p&gt;
&lt;p&gt;You probably have noticed the all of these functions have an “XSLT_” internal prefix in them but this blog article doesn’t show anything about the use of XSLT. There is more comming in blog articles that follow this one…&lt;/p&gt;
&lt;p&gt;So where are we at? The xeval function can handle a lot of the kinds of processing that is typically done with XML and has none of the limitations that the PowerShell implemenation of XML does. You do have to learn a bit about XPath, the references that were sited earlier are a good place to start and there are XPath tutorials all over the web. YMMV, but typically the best way to process XML is to process XML rather than turn it into an object model. It will be worth you effort at learning XPath… after all it is easier to learn XPath than to learn Perl:-).&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>109</thr:total></entry><entry><id>42522</id><published>2006-11-25T15:49:00.0-05:00</published><updated>2006-11-25T15:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Processing XML with PowerShell</title><content type="html">Cool stuff - I'm adding it to my profile.
&lt;br /&gt;FYI:  Your script as an incorrect alias (last line)
&lt;br /&gt;set-alias xnav get-get-XSLT_LiteralXPathNavigator
&lt;br /&gt;
&lt;br /&gt;I think you only wanted one "get-".
&lt;br /&gt;
&lt;br /&gt;Jeffrey Snover [MSFT]
&lt;br /&gt;Windows PowerShell/MMC Architect
&lt;br /&gt;Visit the Windows PowerShell Team blog at:    http://blogs.msdn.com/PowerShell
&lt;br /&gt;Visit the Windows PowerShell ScriptCenter at:  http://www.microsoft.com/technet/scriptcenter/hubs/msh.mspx</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>42583</id><published>2006-11-25T17:26:00.0-05:00</published><updated>2006-11-25T17:26:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Processing XML with PowerShell</title><content type="html">Thanks for spotting that. The script has been fixed.
&lt;br /&gt;
&lt;br /&gt;Dan</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>43485</id><published>2006-11-26T19:06:00.0-05:00</published><updated>2006-11-26T19:06:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Processing XML with PowerShell</title><content type="html">In some xml that prices an Orange you have a mismatched tag pair (one is from r the other from w).
&lt;br /&gt;
&lt;br /&gt;It's good to see you revealing some capabilities of Powershell.  Thanks.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>43630</id><published>2006-11-29T21:18:00.0-05:00</published><updated>2006-11-29T21:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Link Listing - November 29, 2006</title><content type="html"> Creating CSS Friendly Websites with ASP.NET 2.0 [Via: ] Lollygag: Latest non-Atlas .NET Framework [Via:...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>46184</id><published>2007-02-22T07:49:00.0-05:00</published><updated>2007-02-22T07:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Links para esta semana.</title><content type="html">Creating CSS Friendly Websites with ASP.NET 2.0 [Via: ] Lollygag: Latest non-Atlas .NET Framework [Via:</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>75392</id><published>2010-03-09T14:41:00.0-05:00</published><updated>2010-03-09T14:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">How&amp;amp;#8217;s it Work?: Codeplex AutoInstaller Script &amp;amp;laquo;  SharePoint From Scratch</title><content type="html">Pingback from  How’s it Work?: Codeplex AutoInstaller Script «  SharePoint From Scratch</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>76846</id><published>2010-05-20T11:46:14.0-05:00</published><updated>2010-05-20T11:46:14.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">P25 P2500 Vanguard Headlight Monte Carlo Z34 Toronado Trofeo, P25 P2500 Van Model Brake</title><content type="html">Pingback from  P25 P2500 Vanguard Headlight Monte Carlo Z34 Toronado Trofeo, P25 P2500 Van Model Brake</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>76949</id><published>2010-05-20T12:40:35.0-05:00</published><updated>2010-05-20T12:40:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bmw Z4 Engine Hp, Bmw 325i Performance Cold Air Intake</title><content type="html">Pingback from  Bmw Z4 Engine Hp, Bmw 325i Performance Cold Air Intake</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>76997</id><published>2010-05-20T13:07:34.0-05:00</published><updated>2010-05-20T13:07:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">535is Bulbapedia, Auto Parts Bmw 535is</title><content type="html">Pingback from  535is Bulbapedia, Auto Parts Bmw 535is</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77004</id><published>2010-05-20T13:10:10.0-05:00</published><updated>2010-05-20T13:10:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1991 Pontiac Firebird Overheating, Radiator Repair 1981 Pontiac Firebird</title><content type="html">Pingback from  1991 Pontiac Firebird Overheating, Radiator Repair 1981 Pontiac Firebird</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77011</id><published>2010-05-20T13:12:53.0-05:00</published><updated>2010-05-20T13:12:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1500 Hd Part Aftermarket 2002 Gmc Sierra, Gmc Sierra 1500 Repair Manual Gm Xmradio</title><content type="html">Pingback from  1500 Hd Part Aftermarket 2002 Gmc Sierra, Gmc Sierra 1500 Repair Manual Gm Xmradio</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77149</id><published>2010-05-20T14:39:08.0-05:00</published><updated>2010-05-20T14:39:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">K 6626 6u 96, Clutch 1990 Mazda 626 Timing Belt</title><content type="html">Pingback from  K 6626 6u 96, Clutch 1990 Mazda 626 Timing Belt</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77495</id><published>2010-05-20T18:44:08.0-05:00</published><updated>2010-05-20T18:44:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Jeep Comanche Center Console, Comanche Creek Texas</title><content type="html">Pingback from  Jeep Comanche Center Console, Comanche Creek Texas</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77500</id><published>2010-05-20T18:50:13.0-05:00</published><updated>2010-05-20T18:50:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Caballero Second Hand Listings, Caballero Replacement Land</title><content type="html">Pingback from  Caballero Second Hand Listings, Caballero Replacement Land</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77593</id><published>2010-05-20T19:53:01.0-05:00</published><updated>2010-05-20T19:53:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Astre Amazon, Astre Rentals</title><content type="html">Pingback from  Astre Amazon, Astre Rentals</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77731</id><published>2010-05-20T22:20:18.0-05:00</published><updated>2010-05-20T22:20:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">J2000 Part 1984 Sunbird 1980 Pontiac, Used Cutlass Cruiser Pontiac J2000</title><content type="html">Pingback from  J2000 Part 1984 Sunbird 1980 Pontiac, Used Cutlass Cruiser Pontiac J2000</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77735</id><published>2010-05-20T22:24:18.0-05:00</published><updated>2010-05-20T22:24:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used C3500 G3500 Chevrolet Aveo5, C35 C3500 Pickup Guide Used Gmc</title><content type="html">Pingback from  Used C3500 G3500 Chevrolet Aveo5, C35 C3500 Pickup Guide Used Gmc</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77903</id><published>2010-05-21T00:03:44.0-05:00</published><updated>2010-05-21T00:03:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">F500 Iphone Ultra Video, F 500 Raleigh F500 Mountain Bike Shimano Xt</title><content type="html">Pingback from  F500 Iphone Ultra Video, F 500 Raleigh F500 Mountain Bike Shimano Xt</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>77983</id><published>2010-05-21T00:57:31.0-05:00</published><updated>2010-05-21T00:57:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Campmobile Parts 1970 1972 Volkswagen Super Beetle, Campmobile Part Accessories User</title><content type="html">Pingback from  Campmobile Parts 1970 1972 Volkswagen Super Beetle, Campmobile Part Accessories User</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78171</id><published>2010-05-21T02:48:23.0-05:00</published><updated>2010-05-21T02:48:23.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Chevrolet Brookwood Repair Aftermarket, Chevrolet Brookwood Parts Problems</title><content type="html">Pingback from  Chevrolet Brookwood Repair Aftermarket, Chevrolet Brookwood Parts Problems</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78223</id><published>2010-05-21T03:19:22.0-05:00</published><updated>2010-05-21T03:19:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">S550 Used Should, S550 Cars 2007 Mercedes Benz</title><content type="html">Pingback from  S550 Used Should, S550 Cars 2007 Mercedes Benz</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78499</id><published>2010-05-21T05:56:39.0-05:00</published><updated>2010-05-21T05:56:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Town Car Window Regulator, Auto Armour Cape Town</title><content type="html">Pingback from  Town Car Window Regulator, Auto Armour Cape Town</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78583</id><published>2010-05-21T06:45:12.0-05:00</published><updated>2010-05-21T06:45:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Nissan 810 Part Had Oem, 820 Replacement Dell D810 Latitude D505</title><content type="html">Pingback from  Nissan 810 Part Had Oem, 820 Replacement Dell D810 Latitude D505</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78612</id><published>2010-05-21T11:56:24.0-05:00</published><updated>2010-05-21T11:56:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2002 Chevy Suburban 1500 Ford Excursion, E 650 Powerstroke Discount Excursion</title><content type="html">Pingback from  2002 Chevy Suburban 1500 Ford Excursion, E 650 Powerstroke Discount Excursion</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78621</id><published>2010-05-21T12:01:40.0-05:00</published><updated>2010-05-21T12:01:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bristle Dart Board Ersatzhalterung, St Regis Headlight Dodge Dart</title><content type="html">Pingback from  Bristle Dart Board Ersatzhalterung, St Regis Headlight Dodge Dart</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78669</id><published>2010-05-21T12:31:48.0-05:00</published><updated>2010-05-21T12:31:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Toyota Previa Mileage Supercharger, B150 Part 2500 Ramcharger Dodge Ram 3500</title><content type="html">Pingback from  Toyota Previa Mileage Supercharger, B150 Part 2500 Ramcharger Dodge Ram 3500</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78802</id><published>2010-05-21T14:02:43.0-05:00</published><updated>2010-05-21T14:02:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">P35 P3500 Cars Price, P35 P3500 Van Refurbished Remanufactured P300</title><content type="html">Pingback from  P35 P3500 Cars Price, P35 P3500 Van Refurbished Remanufactured P300</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78860</id><published>2010-05-21T14:37:01.0-05:00</published><updated>2010-05-21T14:37:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 Mercury Tracer Sale Wedgewood Blue, Mercury Tracer Car 1993</title><content type="html">Pingback from  1999 Mercury Tracer Sale Wedgewood Blue, Mercury Tracer Car 1993</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78936</id><published>2010-05-21T15:40:24.0-05:00</published><updated>2010-05-21T15:40:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1970 Monte Carlo Parts Buick, Diamante Headlight Montero Sport Truck</title><content type="html">Pingback from  1970 Monte Carlo Parts Buick, Diamante Headlight Montero Sport Truck</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>78945</id><published>2010-05-21T15:45:40.0-05:00</published><updated>2010-05-21T15:45:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cyclone Aftermarket Colony Park, Renaissance At Colony Park Lifestyle Center</title><content type="html">Pingback from  Cyclone Aftermarket Colony Park, Renaissance At Colony Park Lifestyle Center</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79004</id><published>2010-05-21T16:21:49.0-05:00</published><updated>2010-05-21T16:21:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 2004 Pontiac Bonneville, Pontiac Bonneville Aftermarket Discount</title><content type="html">Pingback from  2000 2004 Pontiac Bonneville, Pontiac Bonneville Aftermarket Discount</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79089</id><published>2010-05-21T17:16:51.0-05:00</published><updated>2010-05-21T17:16:51.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ml500 Central Heating Fan Shroud, Ml500 Cooling System 2005 Mercedes Benz</title><content type="html">Pingback from  Ml500 Central Heating Fan Shroud, Ml500 Cooling System 2005 Mercedes Benz</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79090</id><published>2010-05-21T17:17:28.0-05:00</published><updated>2010-05-21T17:17:28.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Talon Wholesale Online, 1994 Eagle Talon Radiator Windshield Wiper Motor</title><content type="html">Pingback from  Talon Wholesale Online, 1994 Eagle Talon Radiator Windshield Wiper Motor</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79167</id><published>2010-05-21T18:05:01.0-05:00</published><updated>2010-05-21T18:05:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1 Parts Aftermarket 2002 Saturn L300, 3 Sale Saturn L300 Seller</title><content type="html">Pingback from  1 Parts Aftermarket 2002 Saturn L300, 3 Sale Saturn L300 Seller</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79186</id><published>2010-05-21T18:18:21.0-05:00</published><updated>2010-05-21T18:18:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Eagle Summit Mortgage Inc, Eagle Eye Mountain</title><content type="html">Pingback from  Eagle Summit Mortgage Inc, Eagle Eye Mountain</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79274</id><published>2010-05-21T19:07:11.0-05:00</published><updated>2010-05-21T19:07:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Bulb Powershot Sd450, 450slc Bulk</title><content type="html">Pingback from  Bulb Powershot Sd450, 450slc Bulk</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79432</id><published>2010-05-21T20:44:29.0-05:00</published><updated>2010-05-21T20:44:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Endeavor Tail Light, 2004 Mitsubishi Endeavor Limited 2wd Mpg</title><content type="html">Pingback from  Endeavor Tail Light, 2004 Mitsubishi Endeavor Limited 2wd Mpg</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79507</id><published>2010-05-21T21:31:31.0-05:00</published><updated>2010-05-21T21:31:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E30 325ix Auction 1988 Bmw, 325ix Used Engine 1989 Bmw Series</title><content type="html">Pingback from  E30 325ix Auction 1988 Bmw, 325ix Used Engine 1989 Bmw Series</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79512</id><published>2010-05-21T21:36:19.0-05:00</published><updated>2010-05-21T21:36:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Problems 2007 Ford Freestyle, Soulja Boy 500k Freestyle Part 4</title><content type="html">Pingback from  Problems 2007 Ford Freestyle, Soulja Boy 500k Freestyle Part 4</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79529</id><published>2010-05-21T21:43:37.0-05:00</published><updated>2010-05-21T21:43:37.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">350sl Part Spark Plug Wires 1972 Mercedes Benz, 1972 Mercedes Benz 350sl Parts</title><content type="html">Pingback from  350sl Part Spark Plug Wires 1972 Mercedes Benz, 1972 Mercedes Benz 350sl Parts</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79556</id><published>2010-05-21T21:58:10.0-05:00</published><updated>2010-05-21T21:58:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Precis Ch, Precis Chapter 4 Ohms</title><content type="html">Pingback from  Precis Ch, Precis Chapter 4 Ohms</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79563</id><published>2010-05-21T22:02:10.0-05:00</published><updated>2010-05-21T22:02:10.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Fender Toronado Jumbo Frets, 67 Olds Toronado Sale</title><content type="html">Pingback from  Fender Toronado Jumbo Frets, 67 Olds Toronado Sale</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79643</id><published>2010-05-21T22:56:01.0-05:00</published><updated>2010-05-21T22:56:01.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">V1500 Part Salvage Yards Yukon Denali Xl Mitsubishi Fuso, V1500 Model Price</title><content type="html">Pingback from  V1500 Part Salvage Yards Yukon Denali Xl Mitsubishi Fuso, V1500 Model Price</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79694</id><published>2010-05-21T23:23:09.0-05:00</published><updated>2010-05-21T23:23:09.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">325es Diagram Need Bmw E30, 325es Buy Fix</title><content type="html">Pingback from  325es Diagram Need Bmw E30, 325es Buy Fix</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79778</id><published>2010-05-22T00:05:47.0-05:00</published><updated>2010-05-22T00:05:47.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Saturn L100 Brake Light Bulb, Samsung L100 Precio</title><content type="html">Pingback from  Saturn L100 Brake Light Bulb, Samsung L100 Precio</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79876</id><published>2010-05-22T02:35:35.0-05:00</published><updated>2010-05-22T02:35:35.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Who Will Buy Kia, Nokia N810 Coupon Code</title><content type="html">Pingback from  Who Will Buy Kia, Nokia N810 Coupon Code</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>79954</id><published>2010-05-22T03:15:13.0-05:00</published><updated>2010-05-22T03:15:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Turbo S10 1 4 Mile, 1998 Chevrolet S10 Review Expert</title><content type="html">Pingback from  Turbo S10 1 4 Mile, 1998 Chevrolet S10 Review Expert</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80006</id><published>2010-05-22T03:42:00.0-05:00</published><updated>2010-05-22T03:42:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Dodge Intrepid Replacement Floor Mats Alternator, 1999 Dodge Intrepid Headlight</title><content type="html">Pingback from  Dodge Intrepid Replacement Floor Mats Alternator, 1999 Dodge Intrepid Headlight</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80080</id><published>2010-05-22T04:21:41.0-05:00</published><updated>2010-05-22T04:21:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford Granada 2.8 Real Estate, 1976 Ford Granada Oil Pan</title><content type="html">Pingback from  Ford Granada 2.8 Real Estate, 1976 Ford Granada Oil Pan</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80106</id><published>2010-05-22T04:37:42.0-05:00</published><updated>2010-05-22T04:37:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">B300 Copy, Cb3000 Accessories Promo</title><content type="html">Pingback from  B300 Copy, Cb3000 Accessories Promo</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80144</id><published>2010-05-22T04:56:34.0-05:00</published><updated>2010-05-22T04:56:34.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sigma Pics, Sigma Sport Bike Safety Lights</title><content type="html">Pingback from  Sigma Pics, Sigma Sport Bike Safety Lights</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80162</id><published>2010-05-22T05:05:13.0-05:00</published><updated>2010-05-22T05:05:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2008 Toyota Camry Hybrid Maintenance Light, Spyder Taillight 2001 Toyota Mr2</title><content type="html">Pingback from  2008 Toyota Camry Hybrid Maintenance Light, Spyder Taillight 2001 Toyota Mr2</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80394</id><published>2010-05-22T07:10:43.0-05:00</published><updated>2010-05-22T07:10:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1998 Mercedes Benz S420 Parts Turn Signal, S420 Heater Free Shipping</title><content type="html">Pingback from  1998 Mercedes Benz S420 Parts Turn Signal, S420 Heater Free Shipping</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80406</id><published>2010-05-22T07:16:50.0-05:00</published><updated>2010-05-22T07:16:50.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 Bmw 318ti 325i, 318ti Performance Eibach Sportline</title><content type="html">Pingback from  1999 Bmw 318ti 325i, 318ti Performance Eibach Sportline</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80601</id><published>2010-05-22T08:57:07.0-05:00</published><updated>2010-05-22T08:57:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">B1500 Cooling System Doors, Buy B1500 Clothing</title><content type="html">Pingback from  B1500 Cooling System Doors, Buy B1500 Clothing</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80691</id><published>2010-05-22T09:42:29.0-05:00</published><updated>2010-05-22T09:42:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Fifth Avenue Aftermarket Lebaron Chrysler Sebring, Chrysler Sebring Convertible Dealers</title><content type="html">Pingback from  Fifth Avenue Aftermarket Lebaron Chrysler Sebring, Chrysler Sebring Convertible Dealers</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80795</id><published>2010-05-22T10:33:18.0-05:00</published><updated>2010-05-22T10:33:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lexus Lx450 For Rent, E 450 Truck Coupon Stripped</title><content type="html">Pingback from  Lexus Lx450 For Rent, E 450 Truck Coupon Stripped</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80796</id><published>2010-05-22T10:33:27.0-05:00</published><updated>2010-05-22T10:33:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">230sl Exhaust Catalog, 1967 Mercedes Benz 230sl Pogoda</title><content type="html">Pingback from  230sl Exhaust Catalog, 1967 Mercedes Benz 230sl Pogoda</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80837</id><published>2010-05-22T11:01:08.0-05:00</published><updated>2010-05-22T11:01:08.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Cb3000 Pics Central Heating, Cb3000 Video Dvd Vcr Combo</title><content type="html">Pingback from  Cb3000 Pics Central Heating, Cb3000 Video Dvd Vcr Combo</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80874</id><published>2010-05-22T11:22:12.0-05:00</published><updated>2010-05-22T11:22:12.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used 2006 Lexus Gs430, Ls400 Sale 1998 Ls 400 Lx470 Lexus Gs430</title><content type="html">Pingback from  Used 2006 Lexus Gs430, Ls400 Sale 1998 Ls 400 Lx470 Lexus Gs430</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>80880</id><published>2010-05-22T11:25:42.0-05:00</published><updated>2010-05-22T11:25:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Celebrity Lamp Temple Light Aviator Sunglasses, Aviator Bulb Halogen Headlight</title><content type="html">Pingback from  Celebrity Lamp Temple Light Aviator Sunglasses, Aviator Bulb Halogen Headlight</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>81041</id><published>2010-05-22T12:47:31.0-05:00</published><updated>2010-05-22T12:47:31.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Es350 Rent Seat Covers, Ls400 Used Lexus Es350</title><content type="html">Pingback from  Es350 Rent Seat Covers, Ls400 Used Lexus Es350</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>81098</id><published>2010-05-22T13:16:44.0-05:00</published><updated>2010-05-22T13:16:44.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ls430 Exhaust System Lexus Ls400, 1999 Lexus Ls400 Engine Mount</title><content type="html">Pingback from  Ls430 Exhaust System Lexus Ls400, 1999 Lexus Ls400 Engine Mount</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>81914</id><published>2010-05-22T20:03:15.0-05:00</published><updated>2010-05-22T20:03:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Used Yukon Denali Xl Gmc C25 C2500 Pickup, C15 C2500 Suburban Replacement Direct Fit</title><content type="html">Pingback from  Used Yukon Denali Xl Gmc C25 C2500 Pickup, C15 C2500 Suburban Replacement Direct Fit</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>82014</id><published>2010-05-22T20:50:37.0-05:00</published><updated>2010-05-22T20:50:37.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Citation Iii Sale Chevrolet Chevette, Chevette Patch</title><content type="html">Pingback from  Citation Iii Sale Chevrolet Chevette, Chevette Patch</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>82526</id><published>2010-05-23T01:07:39.0-05:00</published><updated>2010-05-23T01:07:39.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">750li 740i, 740 Radiator Hd Brake Rotors - 485.defutbolazo.com</title><content type="html">Pingback from  750li 740i, 740 Radiator Hd Brake Rotors - 485.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>82675</id><published>2010-05-23T02:14:05.0-05:00</published><updated>2010-05-23T02:14:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1998 Problems Plymouth Neon, 98 Dodge Neon Headlights 4cyl L - 64.tgrconversions.com</title><content type="html">Pingback from  1998 Problems Plymouth Neon, 98 Dodge Neon Headlights 4cyl L - 64.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>82715</id><published>2010-05-23T02:32:00.0-05:00</published><updated>2010-05-23T02:32:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sony E430 Driver, E430 Original Cap - 470.unlockiphone30.net</title><content type="html">Pingback from  Sony E430 Driver, E430 Original Cap - 470.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>82798</id><published>2010-05-23T03:10:41.0-05:00</published><updated>2010-05-23T03:10:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2002 Galant Radiator Cooling, 2002 Mitsubishi Galant Front Wheel Drive - 422.codebluehacks.org</title><content type="html">Pingback from  2002 Galant Radiator Cooling, 2002 Mitsubishi Galant Front Wheel Drive - 422.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>83070</id><published>2010-05-23T05:24:13.0-05:00</published><updated>2010-05-23T05:24:13.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sw1 Central Heating, Ram Vb 103 Sw1 - 118.defutbolazo.com</title><content type="html">Pingback from  Sw1 Central Heating, Ram Vb 103 Sw1 - 118.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>83096</id><published>2010-05-23T05:35:45.0-05:00</published><updated>2010-05-23T05:35:45.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">R30 Dealers Aveo5 Chevrolet G3500, Headlight Bulb Infiniti G35 Coupe - 228.mfbattle.com</title><content type="html">Pingback from  R30 Dealers Aveo5 Chevrolet G3500, Headlight Bulb Infiniti G35 Coupe - 228.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>83346</id><published>2010-05-23T07:26:26.0-05:00</published><updated>2010-05-23T07:26:26.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2007 Murano Body Kit, Nissan Murano Body Style - 198.jordanbrandallamerican.com</title><content type="html">Pingback from  2007 Murano Body Kit, Nissan Murano Body Style - 198.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>83916</id><published>2010-05-24T06:33:25.0-05:00</published><updated>2010-05-24T06:33:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">745i 5th Gear Add E65, 2004 Bmw 745i Owners Manual - 358.cmanager.org</title><content type="html">Pingback from  745i 5th Gear Add E65, 2004 Bmw 745i Owners Manual - 358.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>84095</id><published>2010-05-24T07:54:46.0-05:00</published><updated>2010-05-24T07:54:46.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">China Dynasty Ventura Menu, Ventura County Beach - 102.defutbolazo.com</title><content type="html">Pingback from  China Dynasty Ventura Menu, Ventura County Beach - 102.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>84246</id><published>2010-05-24T09:06:29.0-05:00</published><updated>2010-05-24T09:06:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Toyota Avalon Xls Features, 2006 Toyota Avalon Used Car - 145.tgrconversions.com</title><content type="html">Pingback from  Toyota Avalon Xls Features, 2006 Toyota Avalon Used Car - 145.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>84694</id><published>2010-05-24T12:39:29.0-05:00</published><updated>2010-05-24T12:39:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sidekick Radiator Call Catalytic Converter, 1995 Suzuki Sidekick Fuel Mileage - 292.dlmreza.net</title><content type="html">Pingback from  Sidekick Radiator Call Catalytic Converter, 1995 Suzuki Sidekick Fuel Mileage - 292.dlmreza.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>84780</id><published>2010-05-24T13:23:19.0-05:00</published><updated>2010-05-24T13:23:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">142 Cell Shipping, 142 Api - 435.binggreen.com</title><content type="html">Pingback from  142 Cell Shipping, 142 Api - 435.binggreen.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>84930</id><published>2010-05-24T14:35:03.0-05:00</published><updated>2010-05-24T14:35:03.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Sale Rt Dodge Stratus Sx, 1998 Dodge Stratus Interior - 269.jeepsunlimted.com</title><content type="html">Pingback from  Sale Rt Dodge Stratus Sx, 1998 Dodge Stratus Interior - 269.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>85260</id><published>2010-05-24T17:21:49.0-05:00</published><updated>2010-05-24T17:21:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Xerox 250c Ink Cartridge, 250c Guitar - 418.defutbolazo.com</title><content type="html">Pingback from  Xerox 250c Ink Cartridge, 250c Guitar - 418.defutbolazo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>85614</id><published>2010-05-24T23:09:57.0-05:00</published><updated>2010-05-24T23:09:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Okidata C5100 Belt Sheepshead, Canon 100 400 Telephoto Lens - 272.unlockiphone30.net</title><content type="html">Pingback from  Okidata C5100 Belt Sheepshead, Canon 100 400 Telephoto Lens - 272.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86095</id><published>2010-05-25T02:59:52.0-05:00</published><updated>2010-05-25T02:59:52.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Beretta Bulbs Replacement Headlight Assembly, Beretta U22 Neos Disassembly Firing Pin - 376.jordanbrandallamerican.com</title><content type="html">Pingback from  Beretta Bulbs Replacement Headlight Assembly, Beretta U22 Neos Disassembly Firing Pin - 376.jordanbrandallamerican.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86189</id><published>2010-05-25T03:44:27.0-05:00</published><updated>2010-05-25T03:44:27.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Spirit Glub, Discount Blithe Spirit Madame Arcati - 458.computeronlinebingo.com</title><content type="html">Pingback from  Spirit Glub, Discount Blithe Spirit Madame Arcati - 458.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86208</id><published>2010-05-25T03:56:24.0-05:00</published><updated>2010-05-25T03:56:24.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">850csi Headlight Comments, 850csi Used Seller 1995 Bmw Interior - 24.an74.com</title><content type="html">Pingback from  850csi Headlight Comments, 850csi Used Seller 1995 Bmw Interior - 24.an74.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86213</id><published>2010-05-25T03:59:21.0-05:00</published><updated>2010-05-25T03:59:21.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Delta Skymiles Sale Frequent Flyer, 1968 Oldsmobile Delta 88 Bumper - 308.computeronlinebingo.com</title><content type="html">Pingback from  Delta Skymiles Sale Frequent Flyer, 1968 Oldsmobile Delta 88 Bumper - 308.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86415</id><published>2010-05-25T05:33:49.0-05:00</published><updated>2010-05-25T05:33:49.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford E 150 Econoline Freestar Discount Bronco Ii, Freestar Explorer Sport Trac Ford Taurus - 4.mfbattle.com</title><content type="html">Pingback from  Ford E 150 Econoline Freestar Discount Bronco Ii, Freestar Explorer Sport Trac Ford Taurus - 4.mfbattle.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86454</id><published>2010-05-25T10:53:16.0-05:00</published><updated>2010-05-25T10:53:16.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Auction Bmw 750il, 328ci Parts Catalog 740i Bmw 750il - 261.tvshowzone.com</title><content type="html">Pingback from  Auction Bmw 750il, 328ci Parts Catalog 740i Bmw 750il - 261.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86524</id><published>2010-05-25T11:28:42.0-05:00</published><updated>2010-05-25T11:28:42.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ml2525 Monochrome Laser Printer Monthly Duty Cycle, Laser Eye Surgery Plymouth - 66.jeepsunlimted.com</title><content type="html">Pingback from  Ml2525 Monochrome Laser Printer Monthly Duty Cycle, Laser Eye Surgery Plymouth - 66.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86617</id><published>2010-05-25T12:12:02.0-05:00</published><updated>2010-05-25T12:12:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Camtasia Relay 2, Buchholz Relay Used Distribution Transformers - 185.tvshowzone.com</title><content type="html">Pingback from  Camtasia Relay 2, Buchholz Relay Used Distribution Transformers - 185.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86649</id><published>2010-05-25T12:30:29.0-05:00</published><updated>2010-05-25T12:30:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Subaru Svx Beginner, Sevylor Svx 200 Ds Touring Kayak - 289.tvshowzone.com</title><content type="html">Pingback from  Subaru Svx Beginner, Sevylor Svx 200 Ds Touring Kayak - 289.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86758</id><published>2010-05-25T13:22:43.0-05:00</published><updated>2010-05-25T13:22:43.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Ford Maverick Compact Car, Maverick Hps - 339.akemet.com</title><content type="html">Pingback from  Ford Maverick Compact Car, Maverick Hps - 339.akemet.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86843</id><published>2010-05-25T14:04:11.0-05:00</published><updated>2010-05-25T14:04:11.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Savana 3500 Headlight Buy Assembly Body, 2000 Yukon For Sale Gmc Savana - 453.jeepsunlimted.com</title><content type="html">Pingback from  Savana 3500 Headlight Buy Assembly Body, 2000 Yukon For Sale Gmc Savana - 453.jeepsunlimted.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>86983</id><published>2010-05-25T15:12:22.0-05:00</published><updated>2010-05-25T15:12:22.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Part B1500 Van 2000 Dodge Ram Side, Clip Dodge B1500 - 442.tgrconversions.com</title><content type="html">Pingback from  Part B1500 Van 2000 Dodge Ram Side, Clip Dodge B1500 - 442.tgrconversions.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87022</id><published>2010-05-25T15:34:15.0-05:00</published><updated>2010-05-25T15:34:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Escort 9500 5 Day, Buy Escort Passport 8500 X50 False Alarms - 146.tvshowzone.com</title><content type="html">Pingback from  Escort 9500 5 Day, Buy Escort Passport 8500 X50 False Alarms - 146.tvshowzone.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87160</id><published>2010-05-25T16:46:19.0-05:00</published><updated>2010-05-25T16:46:19.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">E 200 Super Duty Discount, 1970 Volkswagen Super Beetle Convertible - 254.computeronlinebingo.com</title><content type="html">Pingback from  E 200 Super Duty Discount, 1970 Volkswagen Super Beetle Convertible - 254.computeronlinebingo.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87279</id><published>2010-05-25T17:49:29.0-05:00</published><updated>2010-05-25T17:49:29.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Liberty Aftermarket Cold Air Intake Wrangler Accessories Omix Ada, Removing Radiator From Jeep Liberty Drain - 435.unlockiphone30.net</title><content type="html">Pingback from  Liberty Aftermarket Cold Air Intake Wrangler Accessories Omix Ada, Removing Radiator From Jeep Liberty Drain - 435.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87316</id><published>2010-05-25T18:11:00.0-05:00</published><updated>2010-05-25T18:11:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Lw300 Auto Repair Saturn L100, Lw300 Toyota - 364.tijuanareader.com</title><content type="html">Pingback from  Lw300 Auto Repair Saturn L100, Lw300 Toyota - 364.tijuanareader.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87393</id><published>2010-05-25T18:47:53.0-05:00</published><updated>2010-05-25T18:47:53.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Buy Wildcat Wheel, Custom 1995 Buick Wildcat - 437.unlockiphone30.net</title><content type="html">Pingback from  Buy Wildcat Wheel, Custom 1995 Buick Wildcat - 437.unlockiphone30.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87836</id><published>2010-05-27T03:48:40.0-05:00</published><updated>2010-05-27T03:48:40.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1999 - 1988 @ Lexus Ls400 Led Clear Tail Lights, Parts Ls400 1998 Lexus Gs400 - 92.ja3ra.com</title><content type="html">Pingback from  1999 - 1988 @ Lexus Ls400 Led Clear Tail Lights, Parts Ls400 1998 Lexus Gs400 - 92.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87902</id><published>2010-05-27T04:30:07.0-05:00</published><updated>2010-05-27T04:30:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Model 1989 Volkswagen Cabriolet, Used Ford Coupe Cabriolet - 264.myipgirl.com</title><content type="html">Pingback from  1989 - 2000 @ Model 1989 Volkswagen Cabriolet, Used Ford Coupe Cabriolet - 264.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87951</id><published>2010-05-27T05:04:02.0-05:00</published><updated>2010-05-27T05:04:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">2000 - 1991 @ Full Mitsubishi Diamante Come, Used Ad Diamante 2003 Mitsubishi Galant - 106.luna-atra.net</title><content type="html">Pingback from  2000 - 1991 @ Full Mitsubishi Diamante Come, Used Ad Diamante 2003 Mitsubishi Galant - 106.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>87962</id><published>2010-05-27T05:09:25.0-05:00</published><updated>2010-05-27T05:09:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Adtran Element Management System, Element Body Kits Hood Scoops - 190.myipgirl.com</title><content type="html">Pingback from  1989 - 2000 @ Adtran Element Management System, Element Body Kits Hood Scoops - 190.myipgirl.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>88011</id><published>2010-05-27T05:44:57.0-05:00</published><updated>2010-05-27T05:44:57.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 2000 @ Sony Hdr Xr550v Memory Stick Pro Duo Sd Sdhc, Review Garmin Streetpilot C550 Gps - 397.cmanager.org</title><content type="html">Pingback from  1989 - 2000 @ Sony Hdr Xr550v Memory Stick Pro Duo Sd Sdhc, Review Garmin Streetpilot C550 Gps - 397.cmanager.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>88055</id><published>2010-05-27T06:20:07.0-05:00</published><updated>2010-05-27T06:20:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1995 - 1983 @ Headlamp Assembly Grand Marquis Altezza Lights, Discount Auto Parts Mercury Grand Marquis - 277.codebluehacks.org</title><content type="html">Pingback from  1995 - 1983 @ Headlamp Assembly Grand Marquis Altezza Lights, Discount Auto Parts Mercury Grand Marquis - 277.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>88746</id><published>2010-05-31T00:03:41.0-05:00</published><updated>2010-05-31T00:03:41.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1990 - 2005 @ E 550 F350 Coupon, Ford E 450 Econoline F350 Stripped Replacement Fog Light - 430.codebluehacks.org</title><content type="html">Pingback from  1990 - 2005 @ E 550 F350 Coupon, Ford E 450 Econoline F350 Stripped Replacement Fog Light - 430.codebluehacks.org</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>88962</id><published>2010-05-31T02:04:02.0-05:00</published><updated>2010-05-31T02:04:02.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1994 - 2004 @ C2500 Car Monte Carlo Chevrolet Aveo5, K10 Pickup Radiator Silverado 2500 Chevrolet Aveo5 - 53.zapstreaming.com</title><content type="html">Pingback from  1994 - 2004 @ C2500 Car Monte Carlo Chevrolet Aveo5, K10 Pickup Radiator Silverado 2500 Chevrolet Aveo5 - 53.zapstreaming.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>88968</id><published>2010-05-31T02:07:05.0-05:00</published><updated>2010-05-31T02:07:05.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1989 - 1988 @ Diagram 1999 I30 Infiniti Fx45, Fx45 Replacement Engine Oil Cooler Infiniti Qx4 - 371.luna-atra.net</title><content type="html">Pingback from  1989 - 1988 @ Diagram 1999 I30 Infiniti Fx45, Fx45 Replacement Engine Oil Cooler Infiniti Qx4 - 371.luna-atra.net</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>89090</id><published>2010-05-31T13:01:07.0-05:00</published><updated>2010-05-31T13:01:07.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1984 - 2009 @ 2001 Ford F250 Diesel, 2008 F250 Floor Mats - 120.ja3ra.com</title><content type="html">Pingback from  1984 - 2009 @ 2001 Ford F250 Diesel, 2008 F250 Floor Mats - 120.ja3ra.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>89127</id><published>2010-05-31T13:24:25.0-05:00</published><updated>2010-05-31T13:24:25.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">1998 - 1980 @ Used Automotive 2002 Honda S2000 Rear Wheel Drive, Citizen Ct S2000 - 489.rkwrh.com</title><content type="html">Pingback from  1998 - 1980 @ Used Automotive 2002 Honda S2000 Rear Wheel Drive, Citizen Ct S2000 - 489.rkwrh.com</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>91317</id><published>2010-07-15T05:49:15.0-05:00</published><updated>2010-07-15T05:49:15.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">PowerShell : Working with XML | Ideas For Free</title><content type="html">Pingback from  PowerShell : Working with XML | Ideas For Free</content><author><name>Anonymous</name></author><thr:in-reply-to ref="42506"></thr:in-reply-to></entry><entry><id>43561</id><published>2006-11-28T11:12:00.0-05:00</published><updated>2006-11-28T11:12:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Processing XML with PowerShell II</title><content type="html">&lt;p&gt;In our previous blog article &lt;a href="http://www.pluralsight.com/blogs/dan/archive/2006/11/25/42506.aspx"&gt;&lt;i&gt;Processing XML with PowerShell&lt;/i&gt;&lt;/a&gt; we looked at using XPath expressions to do calculations that used XML as input. One of the things that this article pointed out was that you often can do an entire calculation within an XPath expression. Sometimes, however, you want to read the XML file, pull parts out of it and process them outside of the XML file. One of the ways of doing this is to use the dotted syntax and the Item ParameterizedProperty features of PowerShell so that you can treat XML as an object.&lt;/p&gt;
&lt;p&gt;We are going to start off by looking at using the PowerShell object model for XML to pull apart an XML file so that we can process it, then we are going to look at an extension function aliased as xitems to do the same thing, but typically with less effort and more capabilities. Lastly we will look at how the xitems function is implemented. You can download the script for making this function and the sample files at &lt;a href="http://www.pluralsight.com/dan/samples/ProcessingXMLPowershell-2.zip"&gt;http://www.pluralsight.com/dan/samples/ProcessingXMLPowershell-2.zip&lt;/a&gt;. Note that this will include the XSLT.ps1 script, updated for the xitems function, that was include in the ProcessingXMLPowerShell.zip file.&lt;/p&gt;
&lt;p&gt;We will start by looking at a file named Stock.xml. The Stock.xml file looks like:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;GroceryList
ID = "A-24"
&amp;gt;
&amp;lt;Stock&amp;gt;
    &amp;lt;Dept&amp;gt;
    &amp;lt;Area&amp;gt;Round&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Produce&amp;lt;/Name&amp;gt;
    &amp;lt;/Dept&amp;gt;
    &amp;lt;Name&amp;gt;Orange&amp;lt;/Name&amp;gt;
&amp;lt;Price&amp;gt;3.41&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
    &amp;lt;Dept&amp;gt;
    &amp;lt;Area&amp;gt;Beef&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Meat&amp;lt;/Name&amp;gt;
    &amp;lt;/Dept&amp;gt;
    &amp;lt;Name&amp;gt;Steak&amp;lt;/Name&amp;gt;
    &amp;lt;Price &amp;gt;13.20&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock&amp;gt;
    &amp;lt;Dept&amp;gt;
    &amp;lt;Area&amp;gt;Leaf&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Produce&amp;lt;/Name&amp;gt;
    &amp;lt;/Dept&amp;gt;
    &amp;lt;Name&amp;gt;Lettuce&amp;lt;/Name&amp;gt;
    &amp;lt;Price&amp;gt;1.36&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;/GroceryList&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that each Dept element includes both an Area and Name element. We want to find out the names of the departments in the stock.xml file. We can do this by piping all of the department names into a select-object -unique cmdlet. Here is a script that does just that.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$s = get-content C:\Demos\Stock.xml
PS C:\Demos&amp;gt; $s.GroceryList.Stock | %{$_.Dept.Name} | select-object -unique
Produce
Meat
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we are using the dotted syntax to extract each Stock element from the stock.xml file and pipe it into a following pipeline segment. In that second pipeline segment we use the dotted syntax again to extract the Name from the Dept element of current pipeline object; The current pipeline object in this case is the Stock element. Then we pipe all the names we have found into the select-object cmdlet that makes a unique list of those names. &lt;/p&gt;
&lt;p&gt;It’s easy to come up with a rather wordy description of what this script is doing; It is saying something like &lt;span id="hierarchy"&gt;“Give me all of the elements named GroceryList at the root of the $s XML document; then for each one of these get me all of its children whose name is Stock; then for each one of these get me all of its children whose name is Dept; then for each on of these get me all of its children whose name is Name.”&lt;/span&gt; This sort of description could be applied to almost anything that manages hierarchical data including XPath, which we will be looking at later when we examine the xitems function.&lt;/p&gt;
&lt;p&gt;Thinking of this hierarchical description makes it seem that the script below would be alternate, more simple, way to find the names of the departments.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$s = get-content C:\Demos\Stock.xml
PS C:\Demos&amp;gt; $s.GroceryList.Stock.Dept.Name | select-object -unique
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This, seemingly obvious, way of getting the children of the children, &lt;i&gt;etc.&lt;/i&gt; did not produce any results. The dotted syntax is somewhat limited because of the way PowerShell models XML. If we take closer look at what is actually being returned for the GroceryList and Stock elements we will see why.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; $s.GroceryList.GetType()
IsPublic IsSerial Name       BaseType
-------- -------- ----      --------
True     False    XmlElement System.Xml.XmlLinkedNode
PS C:\Demos&amp;gt; $s.GroceryList.Stock.GetType()
IsPublic IsSerial Name      BaseType
-------- -------- ----      --------
True     True     Object[]  System.Array
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The type of the GroceryList is an XmlElement as you might suspect, after all we are working with XML. However the type of Stock is Array, not an XmlElement or XmlElement[], and that is why it lacks a Dept property. Now let’s look at what happens when instead of trying to access the Dept element from Stock we pipe the array into another pipeline segment and see what the type is.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; $s3.GroceryList.Stock | %{$_.GetType()}
IsPublic IsSerial Name        BaseType
-------- -------- ----        --------
True     False    XmlElement  System.Xml.XmlLinkedNode
True     False    XmlElement  System.Xml.XmlLinkedNode
True     False    XmlElement  System.Xml.XmlLinkedNode
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It turns out that the Stock array is an array of XmlElements and piping it into a pipeline segment enumerates that array. The result is that inside the pipeline segment $_ is an XmlElement that has a Dept child element.&lt;/p&gt;
&lt;p&gt;So to drill into an XML hierarchy using the PowerShell object model you must break up what seems like a natural dotted syntax into pipeline segments, one pipeline segment for every two levels of depth you want to go into the XML hierarchy. The &lt;a href="http://pluralsight.com/blogs/dan/admin/EditPosts.aspx#hierarchy"&gt;word description&lt;/a&gt; earlier of what is happening here, however, is in effect the definition of an XPath construct called a LocationPath.&lt;/p&gt;
&lt;p&gt;We used XPath expressions in &lt;a href="http://www.pluralsight.com/blogs/dan/archive/2006/11/25/42506.aspx"&gt;&lt;i&gt;Processing XML with PowerShell&lt;/i&gt;&lt;/a&gt; to do processing of an XML file. XPath is really a simple language, an expression can only produce one of four datatypes; A number, a string, a boolean, or a node set. We were using those first three scalar types to do calculations with the xeval function.&lt;/p&gt;
&lt;p&gt;A node set is what the name seems to imply, it is a set of XML nodes. It might be a set of XML elements or attributes or a mixture of these an other kinds of XML nodes. The data model in the &lt;a href="http://www.w3.org/TR/xpath"&gt;XPath Recommendation&lt;/a&gt; defines seven kinds of nodes that might be found in an XML documents. A &lt;a href="http://www.w3.org/TR/xpath#location-paths"&gt;LocationPath&lt;/a&gt; is an XPath expression that produces a node set instead of a scalar value. It is given a special name because it is such a common idiom to use XPath to produce a node set. Here is a LocationPath that will produce a nodeset that consists of all of the Name elements from the stock.xml file:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;GroceryList/Stock/Dept/Name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can use this LocationPath with the xitems function to find the names of the departments in the stock.xml file, as we did at the beginning of this article.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xitems C:\Demos\Stock.xml "GroceryList/Stock/Dept/Name" |
 select-object -property value -unique
Value
-----
Produce
Meat
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The xitems function requires at least two parameters. The first is the path to the XML file we want to process, or as we will later see an XPathNavigator. The second argument is an XPath LocationPath. You can see we are able to use a more simple model to specify the parts of the XML file we wish to process. &lt;/p&gt;
&lt;p&gt;In the &lt;a href="http://www.pluralsight.com/blogs/dan/archive/2006/11/25/42506.aspx"&gt;&lt;i&gt;Processing XML with PowerShell&lt;/i&gt;&lt;/a&gt; blog article we looked at processing XML files that contained namespaces and some of the issues you can run into when using the PowerShell object model of XML. The xitems function uses the same technique as the xeval did, you pass a dictionary that contains the mapping of prefixes and namespaces to it. Here is another file that uses namespaces, stockNS.xml.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;GroceryList xmlns='urn:prices'
xmlns:loc='urn:location'
xmlns:ident='urn:identity'
ID = "A-24"
&amp;gt;
&amp;lt;Stock xmlns="urn:inventory"&amp;gt;
    &amp;lt;loc:Dept&amp;gt;3rd floor&amp;lt;/loc:Dept&amp;gt;
    &amp;lt;ident:Dept&amp;gt;
    &amp;lt;Area&amp;gt;Round&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Produce&amp;lt;/Name&amp;gt;
    &amp;lt;/ident:Dept&amp;gt;
    &amp;lt;Name&amp;gt;Orange&amp;lt;/Name&amp;gt;
&amp;lt;Price&amp;gt;3.41&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock xmlns="urn:inventory"&amp;gt;
    &amp;lt;loc:Dept&amp;gt;2nd floor&amp;lt;/loc:Dept&amp;gt;
    &amp;lt;ident:Dept&amp;gt;
    &amp;lt;Area&amp;gt;Beef&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Meat&amp;lt;/Name&amp;gt;
    &amp;lt;/ident:Dept&amp;gt;
    &amp;lt;Name&amp;gt;Steak&amp;lt;/Name&amp;gt;
    &amp;lt;Price &amp;gt;13.20&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock xmlns="urn:inventory"&amp;gt;
    &amp;lt;loc:Dept&amp;gt;3rd floor&amp;lt;/loc:Dept&amp;gt;
    &amp;lt;ident:Dept&amp;gt;
    &amp;lt;Area&amp;gt;Leaf&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Produce&amp;lt;/Name&amp;gt;
    &amp;lt;/ident:Dept&amp;gt;
    &amp;lt;Name&amp;gt;Lettuce&amp;lt;/Name&amp;gt;
    &amp;lt;Price&amp;gt;1.36&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;/GroceryList&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This file uses quite a few namespaces, just to make things interesting and because typically when namespaces are used they are often used a lot. Lets do our department names calculation again, using the PowerShell xml object model.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; [xml]$s = get-content C:\Demos\StockNS.xml
PS C:\Demos&amp;gt; $s.grocerylist.stock 
  | %{$_.Item("Dept", "urn:identity").Name} | select-object -unique
Produce
Meat
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have used the Item property that PowerShell adds to an XML element to make it possible to access elements that are distinguished by their namespace. Here is a script that uses xitems to get the same results:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xitems C:\Demos\StockNS.xml `
  "p:GroceryList/i:Stock/id:Dept/i:Name" `
  @{p="urn:prices";i="urn:inventory";id="urn:identity"} |
  select-object -property value -unique
Value
-----
Produce
Meat

PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You might look at this and say that the PowerShell object model for XML is in at least one respect much easier to use than one based on XPath that xitems uses because in the it does not require the specification of the namespaces for the GroceryList, Stock and Name elements. However namespaces are part of an XML file for a reason, to make sure that names in common usage can easily be distinguished. Look at this alternate version of the StockNS.xml file:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;GroceryList xmlns='urn:prices'
xmlns:loc='urn:location'
xmlns:ident='urn:identity'
ID = "A-24"
&amp;gt;
&amp;lt;Stock xmlns="urn:inventory"&amp;gt;
    &amp;lt;loc:Dept&amp;gt;3rd floor&amp;lt;/loc:Dept&amp;gt;
    &amp;lt;ident:Dept&amp;gt;
    &amp;lt;Area&amp;gt;Round&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Produce&amp;lt;/Name&amp;gt;
    &amp;lt;/ident:Dept&amp;gt;
    &amp;lt;Name&amp;gt;Orange&amp;lt;/Name&amp;gt;
&amp;lt;Price&amp;gt;3.41&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock xmlns="urn:ignore"&amp;gt;
    &amp;lt;loc:Dept&amp;gt;2nd floor&amp;lt;/loc:Dept&amp;gt;
    &amp;lt;ident:Dept&amp;gt;
    &amp;lt;Area&amp;gt;Beef&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Meat&amp;lt;/Name&amp;gt;
    &amp;lt;/ident:Dept&amp;gt;
    &amp;lt;Name&amp;gt;Steak&amp;lt;/Name&amp;gt;
    &amp;lt;Price &amp;gt;13.20&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;Stock xmlns="urn:inventory"&amp;gt;
    &amp;lt;loc:Dept&amp;gt;3rd floor&amp;lt;/loc:Dept&amp;gt;
    &amp;lt;ident:Dept&amp;gt;
    &amp;lt;Area&amp;gt;Leaf&amp;lt;/Area&amp;gt;
    &amp;lt;Name&amp;gt;Produce&amp;lt;/Name&amp;gt;
    &amp;lt;/ident:Dept&amp;gt;
    &amp;lt;Name&amp;gt;Lettuce&amp;lt;/Name&amp;gt;
    &amp;lt;Price&amp;gt;1.36&amp;lt;/Price&amp;gt;
&amp;lt;/Stock&amp;gt;
&amp;lt;/GroceryList&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that the second Stock element is in the “urn:ignore” namespace, not the “urn:inventory. The PowerShell dotted syntax would have included this element in its selection of department names, which may not be what was really intended. In order to be sure what you are processing XML in the namespace you intend with the PowerShell XML object model you really have to use the Item method at every level of the XML hierarchy. Your mileage may vary, but using XPath to select items from an XML file will in general be easier than using the PowerShell object model of XML and more capable.&lt;/p&gt;
&lt;p&gt;An XPath LocationPath can be thought of as a filter; You use it to filter out the parts of the document you are not interested in. This filter can be about as fine-grained as you would like. For example what if we wanted the department names on the 3rd floor?&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xitems C:\Demos\StockNS.xml `
   "p:GroceryList/i:Stock[loc:Dept='3rd floor']/id:Dept/i:Name" `
   @{p="urn:prices";i="urn:inventory";id="urn:identity";loc="urn:location"} |
   select-object -property value -unique
Value
-----
Produce
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The LocationPath used by this script has a predicate in it, that only selects Stock elements that have a loc:Dept child element whose value is “3rd floor”.&lt;/p&gt;
&lt;p&gt;The xitems function is produces an XPath navigator, and it can also take a XPathNavigator as input. This means you can use the results of one xitems function as input to another. Here is an example using stock.xml, the file without the namespaces to reduce the clutter:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xitems C:\Demos\Stock.xml "GroceryList/Stock" |
  %{xitems $_ "Dept/Name"} | Select-Object -property value -unique
Value
-----
Produce
Meat

PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This particular script is analogous to the first script that we presented in this article. We’ve broken the selection into two pipeline segments just to show that the second segment could use the output of the first as input. The first pipeline segment pipes an XPathNavigator into the second pipeline segment which uses that XPathNavigator as input to another xitems function.&lt;/p&gt;
&lt;p&gt;From the &lt;a href="http://www.pluralsight.com/blogs/dan/archive/2006/11/25/42506.aspx"&gt;&lt;i&gt;Processing XML with PowerShell&lt;/i&gt;&lt;/a&gt; we know that xeval can also process an XPathNavigator, so the output of the xitems function can also be passed into the xeval function. Let’s try that:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xitems C:\Demos\Stock.xml "GroceryList/Stock" |
  %{xeval $_ "string(Dept/Name)"} | Select-Object  -unique
Produce
Meat
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example the second pipeline segment evaluates the result of the first pipeline segment. Note that in the third segment the Select-Object cmdlet is not using the -property value option. That is because the second segment is producing a string and a string does not have a value property.&lt;/p&gt;
&lt;p&gt;Lastly xitems is similar to xeval in that you can pass it an array of LocationPaths and it will apply all of them to an XML file.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;PS C:\Demos&amp;gt; xitems C:\Demos\Stock.xml "GroceryList/Stock/Dept/Area",
  "GroceryList/Stock/Dept/Name" | Group-object -property value
Count Name                      Group
----- ----                      -----
    1 Round                     {Area}
    2 Produce                   {Name, Name}
    1 Beef                      {Area}
    1 Meat                      {Name}
    1 Leaf                      {Area}
PS C:\Demos&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This may seem a strange query, but it does show us, for example, that there are two Stock elements that have Name children whose value is “Produce”.&lt;/p&gt;
&lt;p&gt;So far we have seen the basics of using the xitems function and that it shares much in common with xeval. Let’s now take a look at the implementation of xitems.&lt;/p&gt;
&lt;p&gt;First of all xitems is an alias for get-XSLT_XPathSelection. As the names implies this function is making an XPath selection.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;filter get-XSLT_XPathSelection
{
param($nav, [array]$expressions, [hashtable]$namespaces)
if($nav -is [string])
{
$nav = get-XSLT_XPathNavigator $nav
}
if($nav -isnot [System.Xml.XPath.XPathNavigator]) 
{ throw "String path or XPathNavigator required"}
$nm = get-XSLT_NamespaceManager $nav.NameTable $namespaces
$xpathExpression = "";
foreach($exp in $expressions)
{
if($xpathExpression -ne "")
{
$xpathExpression += " | ";
}
$xpathExpression += $exp
}
$nodes = $nav.Clone().Select($xpathExpression, $nm);
$nodes;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The xitems function starts off the same as the xeval function that we looked at in the &lt;a href="http://www.pluralsight.com/blogs/dan/archive/2006/11/25/42506.aspx"&gt;&lt;i&gt;Processing XML with PowerShell&lt;/i&gt;&lt;/a&gt; article, it has a parameters an untyped $nav, an array and a hashtable. Just as xeval does, xitems converts a string to an XPathNavigator. It then builds a namespace manager and iterates through the expressions that were passed in, just like xeval does. In fact the only real differences from xeval is that xitems concatenates the selection expressions using the XPath alternate operator, “|” and uses Select instead of Evaluate on the XPathNavigator that was passed in.&lt;/p&gt;
&lt;p&gt;So in conclusion we can see that using xitems is really easier and more consistent than using the dotted syntax and Item method that the PowerShell XML object model uses, and is a lot more capable. Of course you will have to learn about XPath to fully exploit those capabilities, but it will be well worth you effort doing so.&lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>6</thr:total></entry><entry><id>43632</id><published>2006-11-29T21:18:00.0-05:00</published><updated>2006-11-29T21:18:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Link Listing - November 29, 2006</title><content type="html"> Creating CSS Friendly Websites with ASP.NET 2.0 [Via: ] Lollygag: Latest non-Atlas .NET Framework [Via:...</content><author><name>Anonymous</name></author><thr:in-reply-to ref="43561"></thr:in-reply-to></entry><entry><id>46186</id><published>2007-02-22T07:49:00.0-05:00</published><updated>2007-02-22T07:49:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Links para esta semana.</title><content type="html">Creating CSS Friendly Websites with ASP.NET 2.0 [Via: ] Lollygag: Latest non-Atlas .NET Framework [Via:</content><author><name>Anonymous</name></author><thr:in-reply-to ref="43561"></thr:in-reply-to></entry><entry><id>50507</id><published>2008-03-18T05:16:00.0-05:00</published><updated>2008-03-18T05:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Processing XML with PowerShell II</title><content type="html">Very helpful article, thank you!
&lt;br /&gt;
&lt;br /&gt;The %{$_.Property} notation had me completely foxed, until I found out that % is alias of "ForEach-Object" (Using command "Get-Alias %").
&lt;br /&gt;
&lt;br /&gt;Using "ForEach-Object", in place of "%", would make the code much clearer. And "Select-Object" would be clearer still.
&lt;br /&gt;
&lt;br /&gt;</content><author><name>Anonymous</name></author><thr:in-reply-to ref="43561"></thr:in-reply-to></entry><entry><id>91318</id><published>2010-07-15T05:49:18.0-05:00</published><updated>2010-07-15T05:49:18.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">PowerShell : Working with XML | Ideas For Free</title><content type="html">Pingback from  PowerShell : Working with XML | Ideas For Free</content><author><name>Anonymous</name></author><thr:in-reply-to ref="43561"></thr:in-reply-to></entry><entry><id>96354</id><published>2010-10-25T11:37:48.0-05:00</published><updated>2010-10-25T11:37:48.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">XML and PowerShell Links &amp;amp;laquo; Getting Through It</title><content type="html">Pingback from  XML and PowerShell Links « Getting Through It</content><author><name>Anonymous</name></author><thr:in-reply-to ref="43561"></thr:in-reply-to></entry><entry><id>104132</id><published>2011-10-13T11:35:37.0-05:00</published><updated>2011-10-13T11:35:37.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">Using PowerShell to read xml-files &amp;amp;laquo; Fabio Stawinski</title><content type="html">Pingback from  Using PowerShell to read xml-files « Fabio Stawinski</content><author><name>Anonymous</name></author><thr:in-reply-to ref="43561"></thr:in-reply-to></entry><entry><id>46147</id><published>2007-02-19T04:22:00.0-05:00</published><updated>2007-02-19T04:22:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PowerSMO articles</title><content type="html">&lt;p&gt;I'm working on a series of articles on PowerSMO, my combination of PowerShell and SMO, for &lt;a href="http://www.simple-talk.com"&gt;http://www.simple-talk.com&lt;/a&gt;. The first few are on the site now.&lt;/p&gt;
&lt;p&gt;Some of the topics in these articles are covered in the &lt;a href="www.pluralsight.com/courses/AppliedSql2005.aspx"&gt;Applied SQL Server 2005&lt;/a&gt; course.&lt;/p&gt;
&lt;p&gt;Dan&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>1</thr:total></entry><entry><id>47372</id><published>2007-05-14T09:16:00.0-05:00</published><updated>2007-05-14T09:16:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">great</title><content type="html">Hi. Great site.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="46147"></thr:in-reply-to></entry><entry><id>46428</id><published>2007-03-12T08:36:00.0-05:00</published><updated>2007-03-12T08:36:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">PowerSMO At Work Part II</title><content type="html">&lt;p&gt;The next article in my series on PowerShell and SMO, &lt;a href="http://www.simple-talk.com/sql/database-administration/powersmo-at-work-part-2/"&gt;PowerSMO At Work Part II&lt;/a&gt; is up on &lt;a href="http://www.simple-talk.com"&gt;Simple-Talk.com&lt;/a&gt; now.&lt;/p&gt;
&lt;p&gt;Dan&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</content><author><name>dan-sullivan</name></author></entry><entry><id>54328</id><published>2008-11-10T07:37:00.0-05:00</published><updated>2008-11-10T07:37:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Visual Studio &amp;amp; XSLT Debugging</title><content type="html">&lt;p&gt;Visual Studio has a lot of features for working with XSLT. I've put together a short tutorial [1] on some of the XSLT debugging features in Visual Studio.&lt;/p&gt;
&lt;p&gt;Dan&lt;/p&gt;
&lt;p&gt;[1] &lt;a href="http://tutorials.danal.com/xslt-vs-dev.wmv"&gt;http://tutorials.danal.com/xslt-vs-dev.wmv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</content><author><name>dan-sullivan</name></author><thr:total>2</thr:total></entry><entry><id>54336</id><published>2008-11-11T08:01:56.0-05:00</published><updated>2008-11-11T08:01:56.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Visual Studio &amp;amp; XSLT Debugging</title><content type="html">Dan, I would like to watch your tutorial but the link does not work.</content><author><name>Anonymous</name></author><thr:in-reply-to ref="54328"></thr:in-reply-to></entry><entry><id>54474</id><published>2008-11-14T10:18:04.0-05:00</published><updated>2008-11-14T10:18:04.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#comment"></category><title type="text">re: Visual Studio &amp;amp; XSLT Debugging</title><content type="html">It should be working now.
</content><author><name>dan-sullivan</name></author><thr:in-reply-to ref="54328"></thr:in-reply-to></entry><entry><id>56807</id><published>2009-02-18T07:28:00.0-05:00</published><updated>2009-02-18T07:28:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Perfmon and Memory</title><content type="html">&lt;p&gt;I've posted a short screencast that shows what Perfmon is keeping track of, when it tracks virtual memory usage.&lt;/p&gt;
&lt;p&gt;It's at&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: 11pt; color: #1f497d; font-family: 'Calibri','sans-serif';"&gt;&lt;a href="http://www.pluralsight.com/main/screencasts/screencast.aspx?id=perfmon-virtual-memory" target="_blank"&gt;&lt;span style="color: #0000ff;"&gt;http://www.pluralsight.com/main/screencasts/screencast.aspx?id=perfmon-virtual-memory&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: 11pt; color: #1f497d; font-family: 'Calibri','sans-serif';"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</content><author><name>dan-sullivan</name></author></entry><entry><id>66528</id><published>2009-06-15T12:41:00.0-05:00</published><updated>2009-06-15T12:41:00.0-05:00</updated><category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/blogger/2008/kind#post"></category><title type="text">Gimmie My XPath</title><content type="html">&lt;p&gt;I've posted a screencast on using XPath to create XLinq queries.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.pluralsight.com/main/screencasts/screencast.aspx?id=xlinqxpath"&gt;http://www.pluralsight.com/main/screencasts/screencast.aspx?id=xlinqxpath&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Dan&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;</content><author><name>dan-sullivan</name></author></entry></feed>